// agilex_hps_intel_agilex_5_soc_200_ggg2xkq.v

// This file was auto-generated from intel_soc_sundancemesa_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 23.4 79

`timescale 1 ps / 1 ps
module agilex_hps_intel_agilex_5_soc_200_ggg2xkq (
		output wire         h2f_reset_reset_n,                      //                h2f_reset.reset_n
		input  wire         hps2fpga_axi_clock_clk,                 //       hps2fpga_axi_clock.clk
		input  wire         hps2fpga_axi_reset_reset_n,             //       hps2fpga_axi_reset.reset_n
		output wire [3:0]   hps2fpga_awid,                          //                 hps2fpga.awid
		output wire [37:0]  hps2fpga_awaddr,                        //                         .awaddr
		output wire [7:0]   hps2fpga_awlen,                         //                         .awlen
		output wire [2:0]   hps2fpga_awsize,                        //                         .awsize
		output wire [1:0]   hps2fpga_awburst,                       //                         .awburst
		output wire         hps2fpga_awlock,                        //                         .awlock
		output wire [3:0]   hps2fpga_awcache,                       //                         .awcache
		output wire [2:0]   hps2fpga_awprot,                        //                         .awprot
		output wire         hps2fpga_awvalid,                       //                         .awvalid
		input  wire         hps2fpga_awready,                       //                         .awready
		output wire [127:0] hps2fpga_wdata,                         //                         .wdata
		output wire [15:0]  hps2fpga_wstrb,                         //                         .wstrb
		output wire         hps2fpga_wlast,                         //                         .wlast
		output wire         hps2fpga_wvalid,                        //                         .wvalid
		input  wire         hps2fpga_wready,                        //                         .wready
		input  wire [3:0]   hps2fpga_bid,                           //                         .bid
		input  wire [1:0]   hps2fpga_bresp,                         //                         .bresp
		input  wire         hps2fpga_bvalid,                        //                         .bvalid
		output wire         hps2fpga_bready,                        //                         .bready
		output wire [3:0]   hps2fpga_arid,                          //                         .arid
		output wire [37:0]  hps2fpga_araddr,                        //                         .araddr
		output wire [7:0]   hps2fpga_arlen,                         //                         .arlen
		output wire [2:0]   hps2fpga_arsize,                        //                         .arsize
		output wire [1:0]   hps2fpga_arburst,                       //                         .arburst
		output wire         hps2fpga_arlock,                        //                         .arlock
		output wire [3:0]   hps2fpga_arcache,                       //                         .arcache
		output wire [2:0]   hps2fpga_arprot,                        //                         .arprot
		output wire         hps2fpga_arvalid,                       //                         .arvalid
		input  wire         hps2fpga_arready,                       //                         .arready
		input  wire [3:0]   hps2fpga_rid,                           //                         .rid
		input  wire [127:0] hps2fpga_rdata,                         //                         .rdata
		input  wire [1:0]   hps2fpga_rresp,                         //                         .rresp
		input  wire         hps2fpga_rlast,                         //                         .rlast
		input  wire         hps2fpga_rvalid,                        //                         .rvalid
		output wire         hps2fpga_rready,                        //                         .rready
		input  wire         lwhps2fpga_axi_clock_clk,               //     lwhps2fpga_axi_clock.clk
		input  wire         lwhps2fpga_axi_reset_reset_n,           //     lwhps2fpga_axi_reset.reset_n
		output wire [3:0]   lwhps2fpga_awid,                        //               lwhps2fpga.awid
		output wire [28:0]  lwhps2fpga_awaddr,                      //                         .awaddr
		output wire [7:0]   lwhps2fpga_awlen,                       //                         .awlen
		output wire [2:0]   lwhps2fpga_awsize,                      //                         .awsize
		output wire [1:0]   lwhps2fpga_awburst,                     //                         .awburst
		output wire         lwhps2fpga_awlock,                      //                         .awlock
		output wire [3:0]   lwhps2fpga_awcache,                     //                         .awcache
		output wire [2:0]   lwhps2fpga_awprot,                      //                         .awprot
		output wire         lwhps2fpga_awvalid,                     //                         .awvalid
		input  wire         lwhps2fpga_awready,                     //                         .awready
		output wire [31:0]  lwhps2fpga_wdata,                       //                         .wdata
		output wire [3:0]   lwhps2fpga_wstrb,                       //                         .wstrb
		output wire         lwhps2fpga_wlast,                       //                         .wlast
		output wire         lwhps2fpga_wvalid,                      //                         .wvalid
		input  wire         lwhps2fpga_wready,                      //                         .wready
		input  wire [3:0]   lwhps2fpga_bid,                         //                         .bid
		input  wire [1:0]   lwhps2fpga_bresp,                       //                         .bresp
		input  wire         lwhps2fpga_bvalid,                      //                         .bvalid
		output wire         lwhps2fpga_bready,                      //                         .bready
		output wire [3:0]   lwhps2fpga_arid,                        //                         .arid
		output wire [28:0]  lwhps2fpga_araddr,                      //                         .araddr
		output wire [7:0]   lwhps2fpga_arlen,                       //                         .arlen
		output wire [2:0]   lwhps2fpga_arsize,                      //                         .arsize
		output wire [1:0]   lwhps2fpga_arburst,                     //                         .arburst
		output wire         lwhps2fpga_arlock,                      //                         .arlock
		output wire [3:0]   lwhps2fpga_arcache,                     //                         .arcache
		output wire [2:0]   lwhps2fpga_arprot,                      //                         .arprot
		output wire         lwhps2fpga_arvalid,                     //                         .arvalid
		input  wire         lwhps2fpga_arready,                     //                         .arready
		input  wire [3:0]   lwhps2fpga_rid,                         //                         .rid
		input  wire [31:0]  lwhps2fpga_rdata,                       //                         .rdata
		input  wire [1:0]   lwhps2fpga_rresp,                       //                         .rresp
		input  wire         lwhps2fpga_rlast,                       //                         .rlast
		input  wire         lwhps2fpga_rvalid,                      //                         .rvalid
		output wire         lwhps2fpga_rready,                      //                         .rready
		output wire         emac2_app_rst_reset_n,                  //            emac2_app_rst.reset_n
		input  wire         hps_io_hps_osc_clk,                     //                   hps_io.hps_osc_clk
		inout  wire         hps_io_sdmmc_data0,                     //                         .sdmmc_data0
		inout  wire         hps_io_sdmmc_data1,                     //                         .sdmmc_data1
		output wire         hps_io_sdmmc_cclk,                      //                         .sdmmc_cclk
		input  wire         hps_io_sdmmc_wprot,                     //                         .sdmmc_wprot
		inout  wire         hps_io_sdmmc_data2,                     //                         .sdmmc_data2
		inout  wire         hps_io_sdmmc_data3,                     //                         .sdmmc_data3
		inout  wire         hps_io_sdmmc_cmd,                       //                         .sdmmc_cmd
		input  wire         hps_io_usb1_clk,                        //                         .usb1_clk
		output wire         hps_io_usb1_stp,                        //                         .usb1_stp
		input  wire         hps_io_usb1_dir,                        //                         .usb1_dir
		inout  wire         hps_io_usb1_data0,                      //                         .usb1_data0
		inout  wire         hps_io_usb1_data1,                      //                         .usb1_data1
		input  wire         hps_io_usb1_nxt,                        //                         .usb1_nxt
		inout  wire         hps_io_usb1_data2,                      //                         .usb1_data2
		inout  wire         hps_io_usb1_data3,                      //                         .usb1_data3
		inout  wire         hps_io_usb1_data4,                      //                         .usb1_data4
		inout  wire         hps_io_usb1_data5,                      //                         .usb1_data5
		inout  wire         hps_io_usb1_data6,                      //                         .usb1_data6
		inout  wire         hps_io_usb1_data7,                      //                         .usb1_data7
		output wire         hps_io_emac2_tx_clk,                    //                         .emac2_tx_clk
		output wire         hps_io_emac2_tx_ctl,                    //                         .emac2_tx_ctl
		input  wire         hps_io_emac2_rx_clk,                    //                         .emac2_rx_clk
		input  wire         hps_io_emac2_rx_ctl,                    //                         .emac2_rx_ctl
		output wire         hps_io_emac2_txd0,                      //                         .emac2_txd0
		output wire         hps_io_emac2_txd1,                      //                         .emac2_txd1
		input  wire         hps_io_emac2_rxd0,                      //                         .emac2_rxd0
		input  wire         hps_io_emac2_rxd1,                      //                         .emac2_rxd1
		output wire         hps_io_emac2_txd2,                      //                         .emac2_txd2
		output wire         hps_io_emac2_txd3,                      //                         .emac2_txd3
		input  wire         hps_io_emac2_rxd2,                      //                         .emac2_rxd2
		input  wire         hps_io_emac2_rxd3,                      //                         .emac2_rxd3
		output wire         hps_io_emac2_pps,                       //                         .emac2_pps
		input  wire         hps_io_emac2_pps_trig,                  //                         .emac2_pps_trig
		inout  wire         hps_io_mdio2_mdio,                      //                         .mdio2_mdio
		output wire         hps_io_mdio2_mdc,                       //                         .mdio2_mdc
		output wire         hps_io_uart0_tx,                        //                         .uart0_tx
		input  wire         hps_io_uart0_rx,                        //                         .uart0_rx
		inout  wire         hps_io_i3c1_sda,                        //                         .i3c1_sda
		inout  wire         hps_io_i3c1_scl,                        //                         .i3c1_scl
		input  wire         hps_io_jtag_tck,                        //                         .jtag_tck
		input  wire         hps_io_jtag_tms,                        //                         .jtag_tms
		output wire         hps_io_jtag_tdo,                        //                         .jtag_tdo
		input  wire         hps_io_jtag_tdi,                        //                         .jtag_tdi
		inout  wire         hps_io_gpio0,                           //                         .gpio0
		inout  wire         hps_io_gpio1,                           //                         .gpio1
		inout  wire         hps_io_gpio11,                          //                         .gpio11
		inout  wire         hps_io_gpio27,                          //                         .gpio27
		input  wire         usb31_io_vbus_det,                      //                 usb31_io.vbus_det
		input  wire         usb31_io_flt_bar,                       //                         .flt_bar
		output wire [1:0]   usb31_io_usb_ctrl,                      //                         .usb_ctrl
		input  wire         usb31_io_usb31_id,                      //                         .usb31_id
		input  wire [62:0]  fpga2hps_interrupt_irq,                 //       fpga2hps_interrupt.irq
		input  wire         usb31_phy_pma_cpu_clk_clk,              //    usb31_phy_pma_cpu_clk.clk,           The connection made from "Reference and SystemPLL Clocks IP" to this pin will guide Quartus on properly setting clock network.
		input  wire         usb31_phy_refclk_p_clk,                 //       usb31_phy_refclk_p.clk,           The connection made from "Reference and SystemPLL Clocks IP" to this pin will guide Quartus on properly setting clock network.
		input  wire         usb31_phy_refclk_n_clk,                 //       usb31_phy_refclk_n.clk,           The connection made from "Reference and SystemPLL Clocks IP" to this pin will guide Quartus on properly setting clock network.
		input  wire         usb31_phy_rx_serial_n_i_rx_serial_n,    //    usb31_phy_rx_serial_n.i_rx_serial_n, Differential pair for RX serial data port. Historically was hidden; however now used in pam4 signal simulation model, hence needs to be connected by user.
		input  wire         usb31_phy_rx_serial_p_i_rx_serial_p,    //    usb31_phy_rx_serial_p.i_rx_serial_p, TX serial data port.
		output wire         usb31_phy_tx_serial_n_o_tx_serial_n,    //    usb31_phy_tx_serial_n.o_tx_serial_n, Differential pair for TX serial data port. Historically was hidden; however now used in pam4 signal simulation model, hence needs to be connected by user.
		output wire         usb31_phy_tx_serial_p_o_tx_serial_p,    //    usb31_phy_tx_serial_p.o_tx_serial_p, TX serial data port.
		input  wire         usb31_phy_reconfig_rst_reset,           //   usb31_phy_reconfig_rst.reset,         reconfig_reset
		input  wire         usb31_phy_reconfig_clk_clk,             //   usb31_phy_reconfig_clk.clk,           reconfig_clk
		input  wire [20:0]  usb31_phy_reconfig_slave_address,       // usb31_phy_reconfig_slave.address,       Address for Ethernet CSRs
		input  wire [3:0]   usb31_phy_reconfig_slave_byteenable,    //                         .byteenable,    Byte enable for read/write to Ethernet CSRs
		output wire         usb31_phy_reconfig_slave_readdatavalid, //                         .readdatavalid, Read data from Ethernet CSRs is valid
		input  wire         usb31_phy_reconfig_slave_read,          //                         .read,          Read command for Ethernet CSRs
		input  wire         usb31_phy_reconfig_slave_write,         //                         .write,         Write command for Ethernet CSRs
		output wire [31:0]  usb31_phy_reconfig_slave_readdata,      //                         .readdata,      Read data from reads to Ethernet CSRs
		input  wire [31:0]  usb31_phy_reconfig_slave_writedata,     //                         .writedata,     Data for writes to Ethernet CSRs
		output wire         usb31_phy_reconfig_slave_waitrequest,   //                         .waitrequest,   AVMM stall signal for operation on Ethernet CSRs
		input  wire         f2sdram_axi_clock_clk,                  //        f2sdram_axi_clock.clk
		input  wire         f2sdram_axi_reset_reset_n,              //        f2sdram_axi_reset.reset_n
		input  wire [31:0]  f2sdram_araddr,                         //                  f2sdram.araddr
		input  wire [1:0]   f2sdram_arburst,                        //                         .arburst
		input  wire [3:0]   f2sdram_arcache,                        //                         .arcache
		input  wire [4:0]   f2sdram_arid,                           //                         .arid
		input  wire [7:0]   f2sdram_arlen,                          //                         .arlen
		input  wire         f2sdram_arlock,                         //                         .arlock
		input  wire [2:0]   f2sdram_arprot,                         //                         .arprot
		input  wire [3:0]   f2sdram_arqos,                          //                         .arqos
		output wire         f2sdram_arready,                        //                         .arready
		input  wire [2:0]   f2sdram_arsize,                         //                         .arsize
		input  wire         f2sdram_arvalid,                        //                         .arvalid
		input  wire [31:0]  f2sdram_awaddr,                         //                         .awaddr
		input  wire [1:0]   f2sdram_awburst,                        //                         .awburst
		input  wire [3:0]   f2sdram_awcache,                        //                         .awcache
		input  wire [4:0]   f2sdram_awid,                           //                         .awid
		input  wire [7:0]   f2sdram_awlen,                          //                         .awlen
		input  wire         f2sdram_awlock,                         //                         .awlock
		input  wire [2:0]   f2sdram_awprot,                         //                         .awprot
		input  wire [3:0]   f2sdram_awqos,                          //                         .awqos
		output wire         f2sdram_awready,                        //                         .awready
		input  wire [2:0]   f2sdram_awsize,                         //                         .awsize
		input  wire         f2sdram_awvalid,                        //                         .awvalid
		output wire [4:0]   f2sdram_bid,                            //                         .bid
		input  wire         f2sdram_bready,                         //                         .bready
		output wire [1:0]   f2sdram_bresp,                          //                         .bresp
		output wire         f2sdram_bvalid,                         //                         .bvalid
		output wire [255:0] f2sdram_rdata,                          //                         .rdata
		output wire [4:0]   f2sdram_rid,                            //                         .rid
		output wire         f2sdram_rlast,                          //                         .rlast
		input  wire         f2sdram_rready,                         //                         .rready
		output wire [1:0]   f2sdram_rresp,                          //                         .rresp
		output wire         f2sdram_rvalid,                         //                         .rvalid
		input  wire [255:0] f2sdram_wdata,                          //                         .wdata
		input  wire         f2sdram_wlast,                          //                         .wlast
		output wire         f2sdram_wready,                         //                         .wready
		input  wire [31:0]  f2sdram_wstrb,                          //                         .wstrb
		input  wire         f2sdram_wvalid,                         //                         .wvalid
		input  wire [7:0]   f2sdram_aruser,                         //                         .aruser
		input  wire [7:0]   f2sdram_awuser,                         //                         .awuser
		input  wire [7:0]   f2sdram_wuser,                          //                         .wuser
		output wire [7:0]   f2sdram_buser,                          //                         .buser
		input  wire [3:0]   f2sdram_arregion,                       //                         .arregion
		output wire [7:0]   f2sdram_ruser,                          //                         .ruser
		input  wire [3:0]   f2sdram_awregion,                       //                         .awregion
		input  wire         fpga2hps_clock_clk,                     //           fpga2hps_clock.clk
		input  wire         fpga2hps_reset_reset_n,                 //           fpga2hps_reset.reset_n
		input  wire [4:0]   fpga2hps_awid,                          //                 fpga2hps.awid
		input  wire [31:0]  fpga2hps_awaddr,                        //                         .awaddr
		input  wire [7:0]   fpga2hps_awlen,                         //                         .awlen
		input  wire [2:0]   fpga2hps_awsize,                        //                         .awsize
		input  wire [2:0]   fpga2hps_arsize,                        //                         .arsize
		input  wire [1:0]   fpga2hps_awburst,                       //                         .awburst
		input  wire         fpga2hps_awlock,                        //                         .awlock
		input  wire [3:0]   fpga2hps_awcache,                       //                         .awcache
		input  wire [2:0]   fpga2hps_awprot,                        //                         .awprot
		input  wire [3:0]   fpga2hps_awqos,                         //                         .awqos
		input  wire         fpga2hps_awvalid,                       //                         .awvalid
		output wire         fpga2hps_awready,                       //                         .awready
		input  wire [255:0] fpga2hps_wdata,                         //                         .wdata
		input  wire [31:0]  fpga2hps_wstrb,                         //                         .wstrb
		input  wire         fpga2hps_wlast,                         //                         .wlast
		input  wire         fpga2hps_wvalid,                        //                         .wvalid
		output wire         fpga2hps_wready,                        //                         .wready
		output wire [4:0]   fpga2hps_bid,                           //                         .bid
		output wire [1:0]   fpga2hps_bresp,                         //                         .bresp
		output wire         fpga2hps_bvalid,                        //                         .bvalid
		input  wire         fpga2hps_bready,                        //                         .bready
		input  wire [4:0]   fpga2hps_arid,                          //                         .arid
		input  wire [31:0]  fpga2hps_araddr,                        //                         .araddr
		input  wire [7:0]   fpga2hps_arlen,                         //                         .arlen
		input  wire [1:0]   fpga2hps_arburst,                       //                         .arburst
		input  wire         fpga2hps_arlock,                        //                         .arlock
		input  wire [3:0]   fpga2hps_arcache,                       //                         .arcache
		input  wire [2:0]   fpga2hps_arprot,                        //                         .arprot
		input  wire [3:0]   fpga2hps_arqos,                         //                         .arqos
		input  wire         fpga2hps_arvalid,                       //                         .arvalid
		output wire         fpga2hps_arready,                       //                         .arready
		output wire [4:0]   fpga2hps_rid,                           //                         .rid
		output wire [255:0] fpga2hps_rdata,                         //                         .rdata
		output wire [1:0]   fpga2hps_rresp,                         //                         .rresp
		output wire         fpga2hps_rlast,                         //                         .rlast
		output wire         fpga2hps_rvalid,                        //                         .rvalid
		input  wire         fpga2hps_rready,                        //                         .rready
		input  wire [7:0]   fpga2hps_aruser,                        //                         .aruser
		input  wire [7:0]   fpga2hps_awuser,                        //                         .awuser
		input  wire [3:0]   fpga2hps_arregion,                      //                         .arregion
		input  wire [3:0]   fpga2hps_awregion,                      //                         .awregion
		input  wire [7:0]   fpga2hps_wuser,                         //                         .wuser
		output wire [7:0]   fpga2hps_buser,                         //                         .buser
		output wire [7:0]   fpga2hps_ruser,                         //                         .ruser
		input  wire         io96b0_csr_axi_clk_clk,                 //       io96b0_csr_axi_clk.clk
		input  wire         io96b0_csr_axi_rst_reset_n,             //       io96b0_csr_axi_rst.reset_n
		input  wire         io96b0_csr_axi_arready,                 //           io96b0_csr_axi.arready
		input  wire         io96b0_csr_axi_awready,                 //                         .awready
		input  wire [1:0]   io96b0_csr_axi_bresp,                   //                         .bresp
		input  wire         io96b0_csr_axi_bvalid,                  //                         .bvalid
		input  wire [31:0]  io96b0_csr_axi_rdata,                   //                         .rdata
		input  wire [1:0]   io96b0_csr_axi_rresp,                   //                         .rresp
		input  wire         io96b0_csr_axi_rvalid,                  //                         .rvalid
		input  wire         io96b0_csr_axi_wready,                  //                         .wready
		output wire [31:0]  io96b0_csr_axi_araddr,                  //                         .araddr
		output wire         io96b0_csr_axi_arvalid,                 //                         .arvalid
		output wire [31:0]  io96b0_csr_axi_awaddr,                  //                         .awaddr
		output wire         io96b0_csr_axi_awvalid,                 //                         .awvalid
		output wire         io96b0_csr_axi_bready,                  //                         .bready
		output wire         io96b0_csr_axi_rready,                  //                         .rready
		output wire [31:0]  io96b0_csr_axi_wdata,                   //                         .wdata
		output wire [3:0]   io96b0_csr_axi_wstrb,                   //                         .wstrb
		output wire         io96b0_csr_axi_wvalid,                  //                         .wvalid
		output wire [2:0]   io96b0_csr_axi_arprot,                  //                         .arprot
		output wire [2:0]   io96b0_csr_axi_awprot,                  //                         .awprot
		input  wire         io96b0_ch0_axi_clk_clk,                 //       io96b0_ch0_axi_clk.clk
		input  wire         io96b0_ch0_axi_rst_reset_n,             //       io96b0_ch0_axi_rst.reset_n
		input  wire         io96b0_ch0_axi_arready,                 //           io96b0_ch0_axi.arready
		input  wire         io96b0_ch0_axi_awready,                 //                         .awready
		input  wire [6:0]   io96b0_ch0_axi_bid,                     //                         .bid
		input  wire [1:0]   io96b0_ch0_axi_bresp,                   //                         .bresp
		input  wire         io96b0_ch0_axi_bvalid,                  //                         .bvalid
		input  wire [255:0] io96b0_ch0_axi_rdata,                   //                         .rdata
		input  wire [6:0]   io96b0_ch0_axi_rid,                     //                         .rid
		input  wire         io96b0_ch0_axi_rlast,                   //                         .rlast
		input  wire [1:0]   io96b0_ch0_axi_rresp,                   //                         .rresp
		input  wire [31:0]  io96b0_ch0_axi_ruser,                   //                         .ruser
		input  wire         io96b0_ch0_axi_rvalid,                  //                         .rvalid
		input  wire         io96b0_ch0_axi_wready,                  //                         .wready
		output wire [43:0]  io96b0_ch0_axi_araddr,                  //                         .araddr
		output wire [1:0]   io96b0_ch0_axi_arburst,                 //                         .arburst
		output wire [6:0]   io96b0_ch0_axi_arid,                    //                         .arid
		output wire [7:0]   io96b0_ch0_axi_arlen,                   //                         .arlen
		output wire         io96b0_ch0_axi_arlock,                  //                         .arlock
		output wire [3:0]   io96b0_ch0_axi_arqos,                   //                         .arqos
		output wire [2:0]   io96b0_ch0_axi_arsize,                  //                         .arsize
		output wire [13:0]  io96b0_ch0_axi_aruser,                  //                         .aruser
		output wire         io96b0_ch0_axi_arvalid,                 //                         .arvalid
		output wire [43:0]  io96b0_ch0_axi_awaddr,                  //                         .awaddr
		output wire [1:0]   io96b0_ch0_axi_awburst,                 //                         .awburst
		output wire [6:0]   io96b0_ch0_axi_awid,                    //                         .awid
		output wire [7:0]   io96b0_ch0_axi_awlen,                   //                         .awlen
		output wire         io96b0_ch0_axi_awlock,                  //                         .awlock
		output wire [3:0]   io96b0_ch0_axi_awqos,                   //                         .awqos
		output wire [2:0]   io96b0_ch0_axi_awsize,                  //                         .awsize
		output wire [13:0]  io96b0_ch0_axi_awuser,                  //                         .awuser
		output wire         io96b0_ch0_axi_awvalid,                 //                         .awvalid
		output wire         io96b0_ch0_axi_bready,                  //                         .bready
		output wire         io96b0_ch0_axi_rready,                  //                         .rready
		output wire [255:0] io96b0_ch0_axi_wdata,                   //                         .wdata
		output wire         io96b0_ch0_axi_wlast,                   //                         .wlast
		output wire [31:0]  io96b0_ch0_axi_wstrb,                   //                         .wstrb
		output wire [31:0]  io96b0_ch0_axi_wuser,                   //                         .wuser
		output wire         io96b0_ch0_axi_wvalid,                  //                         .wvalid
		output wire [2:0]   io96b0_ch0_axi_arprot,                  //                         .arprot
		output wire [2:0]   io96b0_ch0_axi_awprot                   //                         .awprot
	);

	wire    [7:0] sm_mpfe_mpfe_f2soc_interconnect_ruser;                              // sm_hps:mpfe2hps_ruser -> sm_mpfe:mpfe2hps_ruser
	wire    [7:0] sm_mpfe_mpfe_f2soc_interconnect_wuser;                              // sm_mpfe:mpfe2hps_wuser -> sm_hps:mpfe2hps_wuser
	wire    [1:0] sm_mpfe_mpfe_f2soc_interconnect_awburst;                            // sm_mpfe:mpfe2hps_awburst -> sm_hps:mpfe2hps_awburst
	wire    [3:0] sm_mpfe_mpfe_f2soc_interconnect_arregion;                           // sm_mpfe:mpfe2hps_arregion -> sm_hps:mpfe2hps_arregion
	wire    [7:0] sm_mpfe_mpfe_f2soc_interconnect_arlen;                              // sm_mpfe:mpfe2hps_arlen -> sm_hps:mpfe2hps_arlen
	wire    [3:0] sm_mpfe_mpfe_f2soc_interconnect_arqos;                              // sm_mpfe:mpfe2hps_arqos -> sm_hps:mpfe2hps_arqos
	wire    [7:0] sm_mpfe_mpfe_f2soc_interconnect_awuser;                             // sm_mpfe:mpfe2hps_awuser -> sm_hps:mpfe2hps_awuser
	wire          sm_mpfe_mpfe_f2soc_interconnect_wready;                             // sm_hps:mpfe2hps_wready -> sm_mpfe:mpfe2hps_wready
	wire   [31:0] sm_mpfe_mpfe_f2soc_interconnect_wstrb;                              // sm_mpfe:mpfe2hps_wstrb -> sm_hps:mpfe2hps_wstrb
	wire    [4:0] sm_mpfe_mpfe_f2soc_interconnect_rid;                                // sm_hps:mpfe2hps_rid -> sm_mpfe:mpfe2hps_rid
	wire          sm_mpfe_mpfe_f2soc_interconnect_rready;                             // sm_mpfe:mpfe2hps_rready -> sm_hps:mpfe2hps_rready
	wire    [7:0] sm_mpfe_mpfe_f2soc_interconnect_awlen;                              // sm_mpfe:mpfe2hps_awlen -> sm_hps:mpfe2hps_awlen
	wire    [3:0] sm_mpfe_mpfe_f2soc_interconnect_awqos;                              // sm_mpfe:mpfe2hps_awqos -> sm_hps:mpfe2hps_awqos
	wire    [3:0] sm_mpfe_mpfe_f2soc_interconnect_arcache;                            // sm_mpfe:mpfe2hps_arcache -> sm_hps:mpfe2hps_arcache
	wire   [39:0] sm_mpfe_mpfe_f2soc_interconnect_araddr;                             // sm_mpfe:mpfe2hps_araddr -> sm_hps:mpfe2hps_araddr
	wire          sm_mpfe_mpfe_f2soc_interconnect_wvalid;                             // sm_mpfe:mpfe2hps_wvalid -> sm_hps:mpfe2hps_wvalid
	wire    [2:0] sm_mpfe_mpfe_f2soc_interconnect_arprot;                             // sm_mpfe:mpfe2hps_arprot -> sm_hps:mpfe2hps_arprot
	wire          sm_mpfe_mpfe_f2soc_interconnect_arvalid;                            // sm_mpfe:mpfe2hps_arvalid -> sm_hps:mpfe2hps_arvalid
	wire    [2:0] sm_mpfe_mpfe_f2soc_interconnect_awprot;                             // sm_mpfe:mpfe2hps_awprot -> sm_hps:mpfe2hps_awprot
	wire  [255:0] sm_mpfe_mpfe_f2soc_interconnect_wdata;                              // sm_mpfe:mpfe2hps_wdata -> sm_hps:mpfe2hps_wdata
	wire    [4:0] sm_mpfe_mpfe_f2soc_interconnect_arid;                               // sm_mpfe:mpfe2hps_arid -> sm_hps:mpfe2hps_arid
	wire    [3:0] sm_mpfe_mpfe_f2soc_interconnect_awcache;                            // sm_mpfe:mpfe2hps_awcache -> sm_hps:mpfe2hps_awcache
	wire          sm_mpfe_mpfe_f2soc_interconnect_arlock;                             // sm_mpfe:mpfe2hps_arlock -> sm_hps:mpfe2hps_arlock
	wire          sm_mpfe_mpfe_f2soc_interconnect_awlock;                             // sm_mpfe:mpfe2hps_awlock -> sm_hps:mpfe2hps_awlock
	wire   [39:0] sm_mpfe_mpfe_f2soc_interconnect_awaddr;                             // sm_mpfe:mpfe2hps_awaddr -> sm_hps:mpfe2hps_awaddr
	wire          sm_mpfe_mpfe_f2soc_interconnect_arready;                            // sm_hps:mpfe2hps_arready -> sm_mpfe:mpfe2hps_arready
	wire    [1:0] sm_mpfe_mpfe_f2soc_interconnect_bresp;                              // sm_hps:mpfe2hps_bresp -> sm_mpfe:mpfe2hps_bresp
	wire  [255:0] sm_mpfe_mpfe_f2soc_interconnect_rdata;                              // sm_hps:mpfe2hps_rdata -> sm_mpfe:mpfe2hps_rdata
	wire    [1:0] sm_mpfe_mpfe_f2soc_interconnect_arburst;                            // sm_mpfe:mpfe2hps_arburst -> sm_hps:mpfe2hps_arburst
	wire          sm_mpfe_mpfe_f2soc_interconnect_awready;                            // sm_hps:mpfe2hps_awready -> sm_mpfe:mpfe2hps_awready
	wire    [2:0] sm_mpfe_mpfe_f2soc_interconnect_arsize;                             // sm_mpfe:mpfe2hps_arsize -> sm_hps:mpfe2hps_arsize
	wire          sm_mpfe_mpfe_f2soc_interconnect_bready;                             // sm_mpfe:mpfe2hps_bready -> sm_hps:mpfe2hps_bready
	wire          sm_mpfe_mpfe_f2soc_interconnect_rlast;                              // sm_hps:mpfe2hps_rlast -> sm_mpfe:mpfe2hps_rlast
	wire          sm_mpfe_mpfe_f2soc_interconnect_wlast;                              // sm_mpfe:mpfe2hps_wlast -> sm_hps:mpfe2hps_wlast
	wire    [3:0] sm_mpfe_mpfe_f2soc_interconnect_awregion;                           // sm_mpfe:mpfe2hps_awregion -> sm_hps:mpfe2hps_awregion
	wire    [7:0] sm_mpfe_mpfe_f2soc_interconnect_buser;                              // sm_hps:mpfe2hps_buser -> sm_mpfe:mpfe2hps_buser
	wire    [1:0] sm_mpfe_mpfe_f2soc_interconnect_rresp;                              // sm_hps:mpfe2hps_rresp -> sm_mpfe:mpfe2hps_rresp
	wire    [4:0] sm_mpfe_mpfe_f2soc_interconnect_awid;                               // sm_mpfe:mpfe2hps_awid -> sm_hps:mpfe2hps_awid
	wire    [4:0] sm_mpfe_mpfe_f2soc_interconnect_bid;                                // sm_hps:mpfe2hps_bid -> sm_mpfe:mpfe2hps_bid
	wire          sm_mpfe_mpfe_f2soc_interconnect_bvalid;                             // sm_hps:mpfe2hps_bvalid -> sm_mpfe:mpfe2hps_bvalid
	wire    [7:0] sm_mpfe_mpfe_f2soc_interconnect_aruser;                             // sm_mpfe:mpfe2hps_aruser -> sm_hps:mpfe2hps_aruser
	wire    [2:0] sm_mpfe_mpfe_f2soc_interconnect_awsize;                             // sm_mpfe:mpfe2hps_awsize -> sm_hps:mpfe2hps_awsize
	wire          sm_mpfe_mpfe_f2soc_interconnect_awvalid;                            // sm_mpfe:mpfe2hps_awvalid -> sm_hps:mpfe2hps_awvalid
	wire          sm_mpfe_mpfe_f2soc_interconnect_rvalid;                             // sm_hps:mpfe2hps_rvalid -> sm_mpfe:mpfe2hps_rvalid
	wire          sm_mpfe_mpfe_f2soc_interconnect_clk_clk;                            // sm_mpfe:mpfe2hps_clk -> sm_hps:mpfe2hps_clk
	wire          sm_mpfe_mpfe_f2soc_interconnect_rst_reset;                          // sm_mpfe:mpfe2hps_rst -> sm_hps:mpfe2hps_rst
	wire    [1:0] sm_hps_hps_dmi0_interconnect_awburst;                               // sm_hps:hps2mpfe_dmi0_awburst -> sm_mpfe:hps2mpfe_dmi0_awburst
	wire    [7:0] sm_hps_hps_dmi0_interconnect_arlen;                                 // sm_hps:hps2mpfe_dmi0_arlen -> sm_mpfe:hps2mpfe_dmi0_arlen
	wire    [3:0] sm_hps_hps_dmi0_interconnect_arqos;                                 // sm_hps:hps2mpfe_dmi0_arqos -> sm_mpfe:hps2mpfe_dmi0_arqos
	wire    [7:0] sm_hps_hps_dmi0_interconnect_awuser;                                // sm_hps:hps2mpfe_dmi0_awuser -> sm_mpfe:hps2mpfe_dmi0_awuser
	wire          sm_hps_hps_dmi0_interconnect_wready;                                // sm_mpfe:hps2mpfe_dmi0_wready -> sm_hps:hps2mpfe_dmi0_wready
	wire   [31:0] sm_hps_hps_dmi0_interconnect_wstrb;                                 // sm_hps:hps2mpfe_dmi0_wstrb -> sm_mpfe:hps2mpfe_dmi0_wstrb
	wire    [9:0] sm_hps_hps_dmi0_interconnect_rid;                                   // sm_mpfe:hps2mpfe_dmi0_rid -> sm_hps:hps2mpfe_dmi0_rid
	wire          sm_hps_hps_dmi0_interconnect_rready;                                // sm_hps:hps2mpfe_dmi0_rready -> sm_mpfe:hps2mpfe_dmi0_rready
	wire    [7:0] sm_hps_hps_dmi0_interconnect_awlen;                                 // sm_hps:hps2mpfe_dmi0_awlen -> sm_mpfe:hps2mpfe_dmi0_awlen
	wire    [3:0] sm_hps_hps_dmi0_interconnect_awqos;                                 // sm_hps:hps2mpfe_dmi0_awqos -> sm_mpfe:hps2mpfe_dmi0_awqos
	wire    [3:0] sm_hps_hps_dmi0_interconnect_arcache;                               // sm_hps:hps2mpfe_dmi0_arcache -> sm_mpfe:hps2mpfe_dmi0_arcache
	wire   [43:0] sm_hps_hps_dmi0_interconnect_araddr;                                // sm_hps:hps2mpfe_dmi0_araddr -> sm_mpfe:hps2mpfe_dmi0_araddr
	wire          sm_hps_hps_dmi0_interconnect_wvalid;                                // sm_hps:hps2mpfe_dmi0_wvalid -> sm_mpfe:hps2mpfe_dmi0_wvalid
	wire    [2:0] sm_hps_hps_dmi0_interconnect_arprot;                                // sm_hps:hps2mpfe_dmi0_arprot -> sm_mpfe:hps2mpfe_dmi0_arprot
	wire          sm_hps_hps_dmi0_interconnect_arvalid;                               // sm_hps:hps2mpfe_dmi0_arvalid -> sm_mpfe:hps2mpfe_dmi0_arvalid
	wire    [2:0] sm_hps_hps_dmi0_interconnect_awprot;                                // sm_hps:hps2mpfe_dmi0_awprot -> sm_mpfe:hps2mpfe_dmi0_awprot
	wire  [255:0] sm_hps_hps_dmi0_interconnect_wdata;                                 // sm_hps:hps2mpfe_dmi0_wdata -> sm_mpfe:hps2mpfe_dmi0_wdata
	wire    [9:0] sm_hps_hps_dmi0_interconnect_arid;                                  // sm_hps:hps2mpfe_dmi0_arid -> sm_mpfe:hps2mpfe_dmi0_arid
	wire    [3:0] sm_hps_hps_dmi0_interconnect_awcache;                               // sm_hps:hps2mpfe_dmi0_awcache -> sm_mpfe:hps2mpfe_dmi0_awcache
	wire          sm_hps_hps_dmi0_interconnect_arlock;                                // sm_hps:hps2mpfe_dmi0_arlock -> sm_mpfe:hps2mpfe_dmi0_arlock
	wire          sm_hps_hps_dmi0_interconnect_awlock;                                // sm_hps:hps2mpfe_dmi0_awlock -> sm_mpfe:hps2mpfe_dmi0_awlock
	wire   [43:0] sm_hps_hps_dmi0_interconnect_awaddr;                                // sm_hps:hps2mpfe_dmi0_awaddr -> sm_mpfe:hps2mpfe_dmi0_awaddr
	wire          sm_hps_hps_dmi0_interconnect_arready;                               // sm_mpfe:hps2mpfe_dmi0_arready -> sm_hps:hps2mpfe_dmi0_arready
	wire    [1:0] sm_hps_hps_dmi0_interconnect_bresp;                                 // sm_mpfe:hps2mpfe_dmi0_bresp -> sm_hps:hps2mpfe_dmi0_bresp
	wire  [255:0] sm_hps_hps_dmi0_interconnect_rdata;                                 // sm_mpfe:hps2mpfe_dmi0_rdata -> sm_hps:hps2mpfe_dmi0_rdata
	wire    [1:0] sm_hps_hps_dmi0_interconnect_arburst;                               // sm_hps:hps2mpfe_dmi0_arburst -> sm_mpfe:hps2mpfe_dmi0_arburst
	wire          sm_hps_hps_dmi0_interconnect_awready;                               // sm_mpfe:hps2mpfe_dmi0_awready -> sm_hps:hps2mpfe_dmi0_awready
	wire    [2:0] sm_hps_hps_dmi0_interconnect_arsize;                                // sm_hps:hps2mpfe_dmi0_arsize -> sm_mpfe:hps2mpfe_dmi0_arsize
	wire          sm_hps_hps_dmi0_interconnect_bready;                                // sm_hps:hps2mpfe_dmi0_bready -> sm_mpfe:hps2mpfe_dmi0_bready
	wire          sm_hps_hps_dmi0_interconnect_rlast;                                 // sm_mpfe:hps2mpfe_dmi0_rlast -> sm_hps:hps2mpfe_dmi0_rlast
	wire          sm_hps_hps_dmi0_interconnect_wlast;                                 // sm_hps:hps2mpfe_dmi0_wlast -> sm_mpfe:hps2mpfe_dmi0_wlast
	wire    [1:0] sm_hps_hps_dmi0_interconnect_rresp;                                 // sm_mpfe:hps2mpfe_dmi0_rresp -> sm_hps:hps2mpfe_dmi0_rresp
	wire    [9:0] sm_hps_hps_dmi0_interconnect_awid;                                  // sm_hps:hps2mpfe_dmi0_awid -> sm_mpfe:hps2mpfe_dmi0_awid
	wire    [9:0] sm_hps_hps_dmi0_interconnect_bid;                                   // sm_mpfe:hps2mpfe_dmi0_bid -> sm_hps:hps2mpfe_dmi0_bid
	wire          sm_hps_hps_dmi0_interconnect_bvalid;                                // sm_mpfe:hps2mpfe_dmi0_bvalid -> sm_hps:hps2mpfe_dmi0_bvalid
	wire    [7:0] sm_hps_hps_dmi0_interconnect_aruser;                                // sm_hps:hps2mpfe_dmi0_aruser -> sm_mpfe:hps2mpfe_dmi0_aruser
	wire    [2:0] sm_hps_hps_dmi0_interconnect_awsize;                                // sm_hps:hps2mpfe_dmi0_awsize -> sm_mpfe:hps2mpfe_dmi0_awsize
	wire          sm_hps_hps_dmi0_interconnect_awvalid;                               // sm_hps:hps2mpfe_dmi0_awvalid -> sm_mpfe:hps2mpfe_dmi0_awvalid
	wire          sm_hps_hps_dmi0_interconnect_rvalid;                                // sm_mpfe:hps2mpfe_dmi0_rvalid -> sm_hps:hps2mpfe_dmi0_rvalid
	wire    [1:0] sm_hps_hps_dmi1_interconnect_awburst;                               // sm_hps:hps2mpfe_dmi1_awburst -> sm_mpfe:hps2mpfe_dmi1_awburst
	wire    [7:0] sm_hps_hps_dmi1_interconnect_arlen;                                 // sm_hps:hps2mpfe_dmi1_arlen -> sm_mpfe:hps2mpfe_dmi1_arlen
	wire    [3:0] sm_hps_hps_dmi1_interconnect_arqos;                                 // sm_hps:hps2mpfe_dmi1_arqos -> sm_mpfe:hps2mpfe_dmi1_arqos
	wire    [7:0] sm_hps_hps_dmi1_interconnect_awuser;                                // sm_hps:hps2mpfe_dmi1_awuser -> sm_mpfe:hps2mpfe_dmi1_awuser
	wire          sm_hps_hps_dmi1_interconnect_wready;                                // sm_mpfe:hps2mpfe_dmi1_wready -> sm_hps:hps2mpfe_dmi1_wready
	wire   [31:0] sm_hps_hps_dmi1_interconnect_wstrb;                                 // sm_hps:hps2mpfe_dmi1_wstrb -> sm_mpfe:hps2mpfe_dmi1_wstrb
	wire    [9:0] sm_hps_hps_dmi1_interconnect_rid;                                   // sm_mpfe:hps2mpfe_dmi1_rid -> sm_hps:hps2mpfe_dmi1_rid
	wire          sm_hps_hps_dmi1_interconnect_rready;                                // sm_hps:hps2mpfe_dmi1_rready -> sm_mpfe:hps2mpfe_dmi1_rready
	wire    [7:0] sm_hps_hps_dmi1_interconnect_awlen;                                 // sm_hps:hps2mpfe_dmi1_awlen -> sm_mpfe:hps2mpfe_dmi1_awlen
	wire    [3:0] sm_hps_hps_dmi1_interconnect_awqos;                                 // sm_hps:hps2mpfe_dmi1_awqos -> sm_mpfe:hps2mpfe_dmi1_awqos
	wire    [3:0] sm_hps_hps_dmi1_interconnect_arcache;                               // sm_hps:hps2mpfe_dmi1_arcache -> sm_mpfe:hps2mpfe_dmi1_arcache
	wire   [43:0] sm_hps_hps_dmi1_interconnect_araddr;                                // sm_hps:hps2mpfe_dmi1_araddr -> sm_mpfe:hps2mpfe_dmi1_araddr
	wire          sm_hps_hps_dmi1_interconnect_wvalid;                                // sm_hps:hps2mpfe_dmi1_wvalid -> sm_mpfe:hps2mpfe_dmi1_wvalid
	wire    [2:0] sm_hps_hps_dmi1_interconnect_arprot;                                // sm_hps:hps2mpfe_dmi1_arprot -> sm_mpfe:hps2mpfe_dmi1_arprot
	wire          sm_hps_hps_dmi1_interconnect_arvalid;                               // sm_hps:hps2mpfe_dmi1_arvalid -> sm_mpfe:hps2mpfe_dmi1_arvalid
	wire    [2:0] sm_hps_hps_dmi1_interconnect_awprot;                                // sm_hps:hps2mpfe_dmi1_awprot -> sm_mpfe:hps2mpfe_dmi1_awprot
	wire  [255:0] sm_hps_hps_dmi1_interconnect_wdata;                                 // sm_hps:hps2mpfe_dmi1_wdata -> sm_mpfe:hps2mpfe_dmi1_wdata
	wire    [9:0] sm_hps_hps_dmi1_interconnect_arid;                                  // sm_hps:hps2mpfe_dmi1_arid -> sm_mpfe:hps2mpfe_dmi1_arid
	wire    [3:0] sm_hps_hps_dmi1_interconnect_awcache;                               // sm_hps:hps2mpfe_dmi1_awcache -> sm_mpfe:hps2mpfe_dmi1_awcache
	wire          sm_hps_hps_dmi1_interconnect_arlock;                                // sm_hps:hps2mpfe_dmi1_arlock -> sm_mpfe:hps2mpfe_dmi1_arlock
	wire          sm_hps_hps_dmi1_interconnect_awlock;                                // sm_hps:hps2mpfe_dmi1_awlock -> sm_mpfe:hps2mpfe_dmi1_awlock
	wire   [43:0] sm_hps_hps_dmi1_interconnect_awaddr;                                // sm_hps:hps2mpfe_dmi1_awaddr -> sm_mpfe:hps2mpfe_dmi1_awaddr
	wire          sm_hps_hps_dmi1_interconnect_arready;                               // sm_mpfe:hps2mpfe_dmi1_arready -> sm_hps:hps2mpfe_dmi1_arready
	wire    [1:0] sm_hps_hps_dmi1_interconnect_bresp;                                 // sm_mpfe:hps2mpfe_dmi1_bresp -> sm_hps:hps2mpfe_dmi1_bresp
	wire  [255:0] sm_hps_hps_dmi1_interconnect_rdata;                                 // sm_mpfe:hps2mpfe_dmi1_rdata -> sm_hps:hps2mpfe_dmi1_rdata
	wire    [1:0] sm_hps_hps_dmi1_interconnect_arburst;                               // sm_hps:hps2mpfe_dmi1_arburst -> sm_mpfe:hps2mpfe_dmi1_arburst
	wire          sm_hps_hps_dmi1_interconnect_awready;                               // sm_mpfe:hps2mpfe_dmi1_awready -> sm_hps:hps2mpfe_dmi1_awready
	wire    [2:0] sm_hps_hps_dmi1_interconnect_arsize;                                // sm_hps:hps2mpfe_dmi1_arsize -> sm_mpfe:hps2mpfe_dmi1_arsize
	wire          sm_hps_hps_dmi1_interconnect_bready;                                // sm_hps:hps2mpfe_dmi1_bready -> sm_mpfe:hps2mpfe_dmi1_bready
	wire          sm_hps_hps_dmi1_interconnect_rlast;                                 // sm_mpfe:hps2mpfe_dmi1_rlast -> sm_hps:hps2mpfe_dmi1_rlast
	wire          sm_hps_hps_dmi1_interconnect_wlast;                                 // sm_hps:hps2mpfe_dmi1_wlast -> sm_mpfe:hps2mpfe_dmi1_wlast
	wire    [1:0] sm_hps_hps_dmi1_interconnect_rresp;                                 // sm_mpfe:hps2mpfe_dmi1_rresp -> sm_hps:hps2mpfe_dmi1_rresp
	wire    [9:0] sm_hps_hps_dmi1_interconnect_awid;                                  // sm_hps:hps2mpfe_dmi1_awid -> sm_mpfe:hps2mpfe_dmi1_awid
	wire    [9:0] sm_hps_hps_dmi1_interconnect_bid;                                   // sm_mpfe:hps2mpfe_dmi1_bid -> sm_hps:hps2mpfe_dmi1_bid
	wire          sm_hps_hps_dmi1_interconnect_bvalid;                                // sm_mpfe:hps2mpfe_dmi1_bvalid -> sm_hps:hps2mpfe_dmi1_bvalid
	wire    [7:0] sm_hps_hps_dmi1_interconnect_aruser;                                // sm_hps:hps2mpfe_dmi1_aruser -> sm_mpfe:hps2mpfe_dmi1_aruser
	wire    [2:0] sm_hps_hps_dmi1_interconnect_awsize;                                // sm_hps:hps2mpfe_dmi1_awsize -> sm_mpfe:hps2mpfe_dmi1_awsize
	wire          sm_hps_hps_dmi1_interconnect_awvalid;                               // sm_hps:hps2mpfe_dmi1_awvalid -> sm_mpfe:hps2mpfe_dmi1_awvalid
	wire          sm_hps_hps_dmi1_interconnect_rvalid;                                // sm_mpfe:hps2mpfe_dmi1_rvalid -> sm_hps:hps2mpfe_dmi1_rvalid
	wire          sm_hps_hps_ccu_interconnect_clk_clk;                                // sm_hps:hps2mpfe_ccu_clk -> sm_mpfe:hps2mpfe_ccu_clk
	wire          sm_hps_hps_ccu_interconnect_rst_reset;                              // sm_hps:hps2mpfe_ccu_rst -> sm_mpfe:hps2mpfe_ccu_rst
	wire    [1:0] sm_hps_hps_s2mpfe_interconnect_awburst;                             // sm_hps:hps2mpfe_csr_awburst -> sm_mpfe:hps2mpfe_csr_awburst
	wire    [7:0] sm_hps_hps_s2mpfe_interconnect_arlen;                               // sm_hps:hps2mpfe_csr_arlen -> sm_mpfe:hps2mpfe_csr_arlen
	wire    [7:0] sm_hps_hps_s2mpfe_interconnect_awuser;                              // sm_hps:hps2mpfe_csr_awuser -> sm_mpfe:hps2mpfe_csr_awuser
	wire          sm_hps_hps_s2mpfe_interconnect_wready;                              // sm_mpfe:hps2mpfe_csr_wready -> sm_hps:hps2mpfe_csr_wready
	wire    [7:0] sm_hps_hps_s2mpfe_interconnect_wstrb;                               // sm_hps:hps2mpfe_csr_wstrb -> sm_mpfe:hps2mpfe_csr_wstrb
	wire    [9:0] sm_hps_hps_s2mpfe_interconnect_rid;                                 // sm_mpfe:hps2mpfe_csr_rid -> sm_hps:hps2mpfe_csr_rid
	wire          sm_hps_hps_s2mpfe_interconnect_rready;                              // sm_hps:hps2mpfe_csr_rready -> sm_mpfe:hps2mpfe_csr_rready
	wire    [7:0] sm_hps_hps_s2mpfe_interconnect_awlen;                               // sm_hps:hps2mpfe_csr_awlen -> sm_mpfe:hps2mpfe_csr_awlen
	wire    [3:0] sm_hps_hps_s2mpfe_interconnect_arcache;                             // sm_hps:hps2mpfe_csr_arcache -> sm_mpfe:hps2mpfe_csr_arcache
	wire   [43:0] sm_hps_hps_s2mpfe_interconnect_araddr;                              // sm_hps:hps2mpfe_csr_araddr -> sm_mpfe:hps2mpfe_csr_araddr
	wire          sm_hps_hps_s2mpfe_interconnect_wvalid;                              // sm_hps:hps2mpfe_csr_wvalid -> sm_mpfe:hps2mpfe_csr_wvalid
	wire    [2:0] sm_hps_hps_s2mpfe_interconnect_arprot;                              // sm_hps:hps2mpfe_csr_arprot -> sm_mpfe:hps2mpfe_csr_arprot
	wire          sm_hps_hps_s2mpfe_interconnect_arvalid;                             // sm_hps:hps2mpfe_csr_arvalid -> sm_mpfe:hps2mpfe_csr_arvalid
	wire    [2:0] sm_hps_hps_s2mpfe_interconnect_awprot;                              // sm_hps:hps2mpfe_csr_awprot -> sm_mpfe:hps2mpfe_csr_awprot
	wire   [63:0] sm_hps_hps_s2mpfe_interconnect_wdata;                               // sm_hps:hps2mpfe_csr_wdata -> sm_mpfe:hps2mpfe_csr_wdata
	wire    [9:0] sm_hps_hps_s2mpfe_interconnect_arid;                                // sm_hps:hps2mpfe_csr_arid -> sm_mpfe:hps2mpfe_csr_arid
	wire    [3:0] sm_hps_hps_s2mpfe_interconnect_awcache;                             // sm_hps:hps2mpfe_csr_awcache -> sm_mpfe:hps2mpfe_csr_awcache
	wire          sm_hps_hps_s2mpfe_interconnect_arlock;                              // sm_hps:hps2mpfe_csr_arlock -> sm_mpfe:hps2mpfe_csr_arlock
	wire          sm_hps_hps_s2mpfe_interconnect_awlock;                              // sm_hps:hps2mpfe_csr_awlock -> sm_mpfe:hps2mpfe_csr_awlock
	wire   [43:0] sm_hps_hps_s2mpfe_interconnect_awaddr;                              // sm_hps:hps2mpfe_csr_awaddr -> sm_mpfe:hps2mpfe_csr_awaddr
	wire          sm_hps_hps_s2mpfe_interconnect_arready;                             // sm_mpfe:hps2mpfe_csr_arready -> sm_hps:hps2mpfe_csr_arready
	wire    [1:0] sm_hps_hps_s2mpfe_interconnect_bresp;                               // sm_mpfe:hps2mpfe_csr_bresp -> sm_hps:hps2mpfe_csr_bresp
	wire   [63:0] sm_hps_hps_s2mpfe_interconnect_rdata;                               // sm_mpfe:hps2mpfe_csr_rdata -> sm_hps:hps2mpfe_csr_rdata
	wire    [1:0] sm_hps_hps_s2mpfe_interconnect_arburst;                             // sm_hps:hps2mpfe_csr_arburst -> sm_mpfe:hps2mpfe_csr_arburst
	wire          sm_hps_hps_s2mpfe_interconnect_awready;                             // sm_mpfe:hps2mpfe_csr_awready -> sm_hps:hps2mpfe_csr_awready
	wire    [2:0] sm_hps_hps_s2mpfe_interconnect_arsize;                              // sm_hps:hps2mpfe_csr_arsize -> sm_mpfe:hps2mpfe_csr_arsize
	wire          sm_hps_hps_s2mpfe_interconnect_bready;                              // sm_hps:hps2mpfe_csr_bready -> sm_mpfe:hps2mpfe_csr_bready
	wire          sm_hps_hps_s2mpfe_interconnect_rlast;                               // sm_mpfe:hps2mpfe_csr_rlast -> sm_hps:hps2mpfe_csr_rlast
	wire          sm_hps_hps_s2mpfe_interconnect_wlast;                               // sm_hps:hps2mpfe_csr_wlast -> sm_mpfe:hps2mpfe_csr_wlast
	wire    [1:0] sm_hps_hps_s2mpfe_interconnect_rresp;                               // sm_mpfe:hps2mpfe_csr_rresp -> sm_hps:hps2mpfe_csr_rresp
	wire    [9:0] sm_hps_hps_s2mpfe_interconnect_awid;                                // sm_hps:hps2mpfe_csr_awid -> sm_mpfe:hps2mpfe_csr_awid
	wire    [9:0] sm_hps_hps_s2mpfe_interconnect_bid;                                 // sm_mpfe:hps2mpfe_csr_bid -> sm_hps:hps2mpfe_csr_bid
	wire          sm_hps_hps_s2mpfe_interconnect_bvalid;                              // sm_mpfe:hps2mpfe_csr_bvalid -> sm_hps:hps2mpfe_csr_bvalid
	wire    [7:0] sm_hps_hps_s2mpfe_interconnect_aruser;                              // sm_hps:hps2mpfe_csr_aruser -> sm_mpfe:hps2mpfe_csr_aruser
	wire    [2:0] sm_hps_hps_s2mpfe_interconnect_awsize;                              // sm_hps:hps2mpfe_csr_awsize -> sm_mpfe:hps2mpfe_csr_awsize
	wire          sm_hps_hps_s2mpfe_interconnect_awvalid;                             // sm_hps:hps2mpfe_csr_awvalid -> sm_mpfe:hps2mpfe_csr_awvalid
	wire          sm_hps_hps_s2mpfe_interconnect_rvalid;                              // sm_mpfe:hps2mpfe_csr_rvalid -> sm_hps:hps2mpfe_csr_rvalid
	wire          sm_mpfe_sdram2hps_interconnect_tbu_ras;                             // sm_mpfe:sdram_tbu_ras_irpt -> sm_hps:fpga2sdram_tbu_ras_irpt
	wire          sm_mpfe_sdram2hps_interconnect_ack;                                 // sm_mpfe:sdram_bridge_ack -> sm_hps:fpga2sdram_bridge_ack
	wire          sm_hps_hps2sdram_interconnect_reset_n;                              // sm_hps:fpga2sdram_bridge_rst_n -> sm_mpfe:sdram_bridge_rst_n
	wire          sm_mpfe_sdram2hps_interconnect_tbu_pmu;                             // sm_mpfe:sdram_tbu_pmu_irpt -> sm_hps:fpga2sdram_tbu_pmu_irpt
	wire          sm_hps_hps2sdram_interconnect_req;                                  // sm_hps:fpga2sdram_bridge_req -> sm_mpfe:sdram_bridge_req
	wire          sm_usb31_phy_o_usb31_pipe_clk_clk;                                  // sm_usb31_phy:o_usb31_pipe_clk -> sm_hps:usb31_pipe_pclk
	wire          sm_usb31_phy_o_usb31_pipe_rxvalid_o_usb31_pipe_rxvalid;             // sm_usb31_phy:o_usb31_pipe_RxValid -> sm_hps:usb31_pipe_RxValid
	wire   [15:0] sm_usb31_phy_o_usb31_pipe_rxdata_o_usb31_pipe_rxdata;               // sm_usb31_phy:o_usb31_pipe_RxData -> sm_hps:usb31_pipe_RxData
	wire    [1:0] sm_usb31_phy_o_usb31_pipe_rxdatak_o_usb31_pipe_rxdatak;             // sm_usb31_phy:o_usb31_pipe_RxDataK -> sm_hps:usb31_pipe_RxDataK
	wire          sm_usb31_phy_o_usb31_pipe_phystatus_o_usb31_pipe_phystatus;         // sm_usb31_phy:o_usb31_pipe_PhyStatus -> sm_hps:usb31_pipe_PhyStatus
	wire          sm_usb31_phy_o_usb31_pipe_rxelecidle_o_usb31_pipe_rxelecidle;       // sm_usb31_phy:o_usb31_pipe_RxElecidle -> sm_hps:usb31_pipe_RxElecIdle
	wire    [2:0] sm_usb31_phy_o_usb31_pipe_rxstatus_o_usb31_pipe_rxstatus;           // sm_usb31_phy:o_usb31_pipe_Rxstatus -> sm_hps:usb31_pipe_RxStatus
	wire          sm_hps_usb31_rst_interconnect_i_usb31_pipe_reset_n;                 // sm_hps:usb31_pipe_reset_n -> sm_usb31_phy:i_usb31_pipe_reset_n
	wire   [15:0] sm_hps_usb31_txdata_interconnect_i_usb31_pipe_txdata;               // sm_hps:usb31_pipe_TxData -> sm_usb31_phy:i_usb31_pipe_TxData
	wire    [1:0] sm_hps_usb31_txdatak_interconnect_i_usb31_pipe_txdatak;             // sm_hps:usb31_pipe_TxDataK -> sm_usb31_phy:i_usb31_pipe_TxDataK
	wire          sm_hps_usb31_rxeqtrain_interconnect_i_usb31_pipe_rxeqtrain;         // sm_hps:usb31_pipe_RxEqTrain -> sm_usb31_phy:i_usb31_pipe_RxEqTrain
	wire          sm_hps_usb31_elasbuf_interconnect_i_usb31_pipe_elasbuffermode;      // sm_hps:usb31_pipe_ElasBufferMode -> sm_usb31_phy:i_usb31_pipe_ElasBufferMode
	wire          sm_hps_usb31_loopback_interconnect_i_usb31_pipe_txdetectrxloopback; // sm_hps:usb31_pipe_TxDetectRxLoopbk -> sm_usb31_phy:i_usb31_pipe_TxDetectRxLoopback
	wire          sm_hps_usb31_txelecidle_interconnect_i_usb31_pipe_txelecidle;       // sm_hps:usb31_pipe_TxElecIdle -> sm_usb31_phy:i_usb31_pipe_TxElecidle
	wire          sm_hps_usb31_rxpolarity_interconnect_i_usb31_pipe_rxpolarity;       // sm_hps:usb31_pipe_RxPolarity -> sm_usb31_phy:i_usb31_pipe_RxPolarity
	wire    [3:0] sm_hps_usb31_pwrdown_interconnect_i_usb31_pipe_powerdown;           // sm_hps:usb31_pipe_PowerDown -> sm_usb31_phy:i_usb31_pipe_PowerDown
	wire    [1:0] sm_hps_usb31_piperate_interconnect_i_usb31_pipe_txdeemphasis;       // sm_hps:usb31_pipe_Rate -> sm_usb31_phy:i_usb31_pipe_TxDeEmphasis
	wire          sm_hps_usb31_rxterm_interconnect_i_usb31_pipe_rxtermination;        // sm_hps:usb31_pipe_RxTermination -> sm_usb31_phy:i_usb31_pipe_RxTermination
	wire          sm_hps_usb31_txoneszeros_interconnect_i_usb31_pipe_txoneszeros;     // sm_hps:usb31_pipe_TxOnesZeros -> sm_usb31_phy:i_usb31_pipe_TxOnesZeros

	agilex_hps_intel_sundancemesa_hps_100_7splw2q sm_hps (
		.h2f_reset                   (h2f_reset_reset_n),                                                  //  output,    width = 1,                      h2f_reset.reset_n
		.hps2fpga_clk                (hps2fpga_axi_clock_clk),                                             //   input,    width = 1,             hps2fpga_axi_clock.clk
		.hps2fpga_rst_n              (hps2fpga_axi_reset_reset_n),                                         //   input,    width = 1,             hps2fpga_axi_reset.reset_n
		.hps2fpga_awid               (hps2fpga_awid),                                                      //  output,    width = 4,                       hps2fpga.awid
		.hps2fpga_awaddr             (hps2fpga_awaddr),                                                    //  output,   width = 38,                               .awaddr
		.hps2fpga_awlen              (hps2fpga_awlen),                                                     //  output,    width = 8,                               .awlen
		.hps2fpga_awsize             (hps2fpga_awsize),                                                    //  output,    width = 3,                               .awsize
		.hps2fpga_awburst            (hps2fpga_awburst),                                                   //  output,    width = 2,                               .awburst
		.hps2fpga_awlock             (hps2fpga_awlock),                                                    //  output,    width = 1,                               .awlock
		.hps2fpga_awcache            (hps2fpga_awcache),                                                   //  output,    width = 4,                               .awcache
		.hps2fpga_awprot             (hps2fpga_awprot),                                                    //  output,    width = 3,                               .awprot
		.hps2fpga_awvalid            (hps2fpga_awvalid),                                                   //  output,    width = 1,                               .awvalid
		.hps2fpga_awready            (hps2fpga_awready),                                                   //   input,    width = 1,                               .awready
		.hps2fpga_wdata              (hps2fpga_wdata),                                                     //  output,  width = 128,                               .wdata
		.hps2fpga_wstrb              (hps2fpga_wstrb),                                                     //  output,   width = 16,                               .wstrb
		.hps2fpga_wlast              (hps2fpga_wlast),                                                     //  output,    width = 1,                               .wlast
		.hps2fpga_wvalid             (hps2fpga_wvalid),                                                    //  output,    width = 1,                               .wvalid
		.hps2fpga_wready             (hps2fpga_wready),                                                    //   input,    width = 1,                               .wready
		.hps2fpga_bid                (hps2fpga_bid),                                                       //   input,    width = 4,                               .bid
		.hps2fpga_bresp              (hps2fpga_bresp),                                                     //   input,    width = 2,                               .bresp
		.hps2fpga_bvalid             (hps2fpga_bvalid),                                                    //   input,    width = 1,                               .bvalid
		.hps2fpga_bready             (hps2fpga_bready),                                                    //  output,    width = 1,                               .bready
		.hps2fpga_arid               (hps2fpga_arid),                                                      //  output,    width = 4,                               .arid
		.hps2fpga_araddr             (hps2fpga_araddr),                                                    //  output,   width = 38,                               .araddr
		.hps2fpga_arlen              (hps2fpga_arlen),                                                     //  output,    width = 8,                               .arlen
		.hps2fpga_arsize             (hps2fpga_arsize),                                                    //  output,    width = 3,                               .arsize
		.hps2fpga_arburst            (hps2fpga_arburst),                                                   //  output,    width = 2,                               .arburst
		.hps2fpga_arlock             (hps2fpga_arlock),                                                    //  output,    width = 1,                               .arlock
		.hps2fpga_arcache            (hps2fpga_arcache),                                                   //  output,    width = 4,                               .arcache
		.hps2fpga_arprot             (hps2fpga_arprot),                                                    //  output,    width = 3,                               .arprot
		.hps2fpga_arvalid            (hps2fpga_arvalid),                                                   //  output,    width = 1,                               .arvalid
		.hps2fpga_arready            (hps2fpga_arready),                                                   //   input,    width = 1,                               .arready
		.hps2fpga_rid                (hps2fpga_rid),                                                       //   input,    width = 4,                               .rid
		.hps2fpga_rdata              (hps2fpga_rdata),                                                     //   input,  width = 128,                               .rdata
		.hps2fpga_rresp              (hps2fpga_rresp),                                                     //   input,    width = 2,                               .rresp
		.hps2fpga_rlast              (hps2fpga_rlast),                                                     //   input,    width = 1,                               .rlast
		.hps2fpga_rvalid             (hps2fpga_rvalid),                                                    //   input,    width = 1,                               .rvalid
		.hps2fpga_rready             (hps2fpga_rready),                                                    //  output,    width = 1,                               .rready
		.lwhps2fpga_clk              (lwhps2fpga_axi_clock_clk),                                           //   input,    width = 1,           lwhps2fpga_axi_clock.clk
		.lwhps2fpga_rst_n            (lwhps2fpga_axi_reset_reset_n),                                       //   input,    width = 1,           lwhps2fpga_axi_reset.reset_n
		.lwhps2fpga_awid             (lwhps2fpga_awid),                                                    //  output,    width = 4,                     lwhps2fpga.awid
		.lwhps2fpga_awaddr           (lwhps2fpga_awaddr),                                                  //  output,   width = 29,                               .awaddr
		.lwhps2fpga_awlen            (lwhps2fpga_awlen),                                                   //  output,    width = 8,                               .awlen
		.lwhps2fpga_awsize           (lwhps2fpga_awsize),                                                  //  output,    width = 3,                               .awsize
		.lwhps2fpga_awburst          (lwhps2fpga_awburst),                                                 //  output,    width = 2,                               .awburst
		.lwhps2fpga_awlock           (lwhps2fpga_awlock),                                                  //  output,    width = 1,                               .awlock
		.lwhps2fpga_awcache          (lwhps2fpga_awcache),                                                 //  output,    width = 4,                               .awcache
		.lwhps2fpga_awprot           (lwhps2fpga_awprot),                                                  //  output,    width = 3,                               .awprot
		.lwhps2fpga_awvalid          (lwhps2fpga_awvalid),                                                 //  output,    width = 1,                               .awvalid
		.lwhps2fpga_awready          (lwhps2fpga_awready),                                                 //   input,    width = 1,                               .awready
		.lwhps2fpga_wdata            (lwhps2fpga_wdata),                                                   //  output,   width = 32,                               .wdata
		.lwhps2fpga_wstrb            (lwhps2fpga_wstrb),                                                   //  output,    width = 4,                               .wstrb
		.lwhps2fpga_wlast            (lwhps2fpga_wlast),                                                   //  output,    width = 1,                               .wlast
		.lwhps2fpga_wvalid           (lwhps2fpga_wvalid),                                                  //  output,    width = 1,                               .wvalid
		.lwhps2fpga_wready           (lwhps2fpga_wready),                                                  //   input,    width = 1,                               .wready
		.lwhps2fpga_bid              (lwhps2fpga_bid),                                                     //   input,    width = 4,                               .bid
		.lwhps2fpga_bresp            (lwhps2fpga_bresp),                                                   //   input,    width = 2,                               .bresp
		.lwhps2fpga_bvalid           (lwhps2fpga_bvalid),                                                  //   input,    width = 1,                               .bvalid
		.lwhps2fpga_bready           (lwhps2fpga_bready),                                                  //  output,    width = 1,                               .bready
		.lwhps2fpga_arid             (lwhps2fpga_arid),                                                    //  output,    width = 4,                               .arid
		.lwhps2fpga_araddr           (lwhps2fpga_araddr),                                                  //  output,   width = 29,                               .araddr
		.lwhps2fpga_arlen            (lwhps2fpga_arlen),                                                   //  output,    width = 8,                               .arlen
		.lwhps2fpga_arsize           (lwhps2fpga_arsize),                                                  //  output,    width = 3,                               .arsize
		.lwhps2fpga_arburst          (lwhps2fpga_arburst),                                                 //  output,    width = 2,                               .arburst
		.lwhps2fpga_arlock           (lwhps2fpga_arlock),                                                  //  output,    width = 1,                               .arlock
		.lwhps2fpga_arcache          (lwhps2fpga_arcache),                                                 //  output,    width = 4,                               .arcache
		.lwhps2fpga_arprot           (lwhps2fpga_arprot),                                                  //  output,    width = 3,                               .arprot
		.lwhps2fpga_arvalid          (lwhps2fpga_arvalid),                                                 //  output,    width = 1,                               .arvalid
		.lwhps2fpga_arready          (lwhps2fpga_arready),                                                 //   input,    width = 1,                               .arready
		.lwhps2fpga_rid              (lwhps2fpga_rid),                                                     //   input,    width = 4,                               .rid
		.lwhps2fpga_rdata            (lwhps2fpga_rdata),                                                   //   input,   width = 32,                               .rdata
		.lwhps2fpga_rresp            (lwhps2fpga_rresp),                                                   //   input,    width = 2,                               .rresp
		.lwhps2fpga_rlast            (lwhps2fpga_rlast),                                                   //   input,    width = 1,                               .rlast
		.lwhps2fpga_rvalid           (lwhps2fpga_rvalid),                                                  //   input,    width = 1,                               .rvalid
		.lwhps2fpga_rready           (lwhps2fpga_rready),                                                  //  output,    width = 1,                               .rready
		.emac2_rst_clk_app_n_o       (emac2_app_rst_reset_n),                                              //  output,    width = 1,                  emac2_app_rst.reset_n
		.hps_osc_clk                 (hps_io_hps_osc_clk),                                                 //   input,    width = 1,                         hps_io.hps_osc_clk
		.sdmmc_data0                 (hps_io_sdmmc_data0),                                                 //   inout,    width = 1,                               .sdmmc_data0
		.sdmmc_data1                 (hps_io_sdmmc_data1),                                                 //   inout,    width = 1,                               .sdmmc_data1
		.sdmmc_cclk                  (hps_io_sdmmc_cclk),                                                  //  output,    width = 1,                               .sdmmc_cclk
		.sdmmc_wprot                 (hps_io_sdmmc_wprot),                                                 //   input,    width = 1,                               .sdmmc_wprot
		.sdmmc_data2                 (hps_io_sdmmc_data2),                                                 //   inout,    width = 1,                               .sdmmc_data2
		.sdmmc_data3                 (hps_io_sdmmc_data3),                                                 //   inout,    width = 1,                               .sdmmc_data3
		.sdmmc_cmd                   (hps_io_sdmmc_cmd),                                                   //   inout,    width = 1,                               .sdmmc_cmd
		.usb1_clk                    (hps_io_usb1_clk),                                                    //   input,    width = 1,                               .usb1_clk
		.usb1_stp                    (hps_io_usb1_stp),                                                    //  output,    width = 1,                               .usb1_stp
		.usb1_dir                    (hps_io_usb1_dir),                                                    //   input,    width = 1,                               .usb1_dir
		.usb1_data0                  (hps_io_usb1_data0),                                                  //   inout,    width = 1,                               .usb1_data0
		.usb1_data1                  (hps_io_usb1_data1),                                                  //   inout,    width = 1,                               .usb1_data1
		.usb1_nxt                    (hps_io_usb1_nxt),                                                    //   input,    width = 1,                               .usb1_nxt
		.usb1_data2                  (hps_io_usb1_data2),                                                  //   inout,    width = 1,                               .usb1_data2
		.usb1_data3                  (hps_io_usb1_data3),                                                  //   inout,    width = 1,                               .usb1_data3
		.usb1_data4                  (hps_io_usb1_data4),                                                  //   inout,    width = 1,                               .usb1_data4
		.usb1_data5                  (hps_io_usb1_data5),                                                  //   inout,    width = 1,                               .usb1_data5
		.usb1_data6                  (hps_io_usb1_data6),                                                  //   inout,    width = 1,                               .usb1_data6
		.usb1_data7                  (hps_io_usb1_data7),                                                  //   inout,    width = 1,                               .usb1_data7
		.emac2_tx_clk                (hps_io_emac2_tx_clk),                                                //  output,    width = 1,                               .emac2_tx_clk
		.emac2_tx_ctl                (hps_io_emac2_tx_ctl),                                                //  output,    width = 1,                               .emac2_tx_ctl
		.emac2_rx_clk                (hps_io_emac2_rx_clk),                                                //   input,    width = 1,                               .emac2_rx_clk
		.emac2_rx_ctl                (hps_io_emac2_rx_ctl),                                                //   input,    width = 1,                               .emac2_rx_ctl
		.emac2_txd0                  (hps_io_emac2_txd0),                                                  //  output,    width = 1,                               .emac2_txd0
		.emac2_txd1                  (hps_io_emac2_txd1),                                                  //  output,    width = 1,                               .emac2_txd1
		.emac2_rxd0                  (hps_io_emac2_rxd0),                                                  //   input,    width = 1,                               .emac2_rxd0
		.emac2_rxd1                  (hps_io_emac2_rxd1),                                                  //   input,    width = 1,                               .emac2_rxd1
		.emac2_txd2                  (hps_io_emac2_txd2),                                                  //  output,    width = 1,                               .emac2_txd2
		.emac2_txd3                  (hps_io_emac2_txd3),                                                  //  output,    width = 1,                               .emac2_txd3
		.emac2_rxd2                  (hps_io_emac2_rxd2),                                                  //   input,    width = 1,                               .emac2_rxd2
		.emac2_rxd3                  (hps_io_emac2_rxd3),                                                  //   input,    width = 1,                               .emac2_rxd3
		.emac2_pps                   (hps_io_emac2_pps),                                                   //  output,    width = 1,                               .emac2_pps
		.emac2_pps_trig              (hps_io_emac2_pps_trig),                                              //   input,    width = 1,                               .emac2_pps_trig
		.mdio2_mdio                  (hps_io_mdio2_mdio),                                                  //   inout,    width = 1,                               .mdio2_mdio
		.mdio2_mdc                   (hps_io_mdio2_mdc),                                                   //  output,    width = 1,                               .mdio2_mdc
		.uart0_io_tx                 (hps_io_uart0_tx),                                                    //  output,    width = 1,                               .uart0_tx
		.uart0_io_rx                 (hps_io_uart0_rx),                                                    //   input,    width = 1,                               .uart0_rx
		.i3c1_sda                    (hps_io_i3c1_sda),                                                    //   inout,    width = 1,                               .i3c1_sda
		.i3c1_scl                    (hps_io_i3c1_scl),                                                    //   inout,    width = 1,                               .i3c1_scl
		.jtag_tck                    (hps_io_jtag_tck),                                                    //   input,    width = 1,                               .jtag_tck
		.jtag_tms                    (hps_io_jtag_tms),                                                    //   input,    width = 1,                               .jtag_tms
		.jtag_tdo                    (hps_io_jtag_tdo),                                                    //  output,    width = 1,                               .jtag_tdo
		.jtag_tdi                    (hps_io_jtag_tdi),                                                    //   input,    width = 1,                               .jtag_tdi
		.gpio0                       (hps_io_gpio0),                                                       //   inout,    width = 1,                               .gpio0
		.gpio1                       (hps_io_gpio1),                                                       //   inout,    width = 1,                               .gpio1
		.gpio11                      (hps_io_gpio11),                                                      //   inout,    width = 1,                               .gpio11
		.gpio27                      (hps_io_gpio27),                                                      //   inout,    width = 1,                               .gpio27
		.usb1_usb31_vbus_det         (usb31_io_vbus_det),                                                  //   input,    width = 1,                       usb31_io.vbus_det
		.usb1_usb31_flt_bar          (usb31_io_flt_bar),                                                   //   input,    width = 1,                               .flt_bar
		.usb1_usb31_usb_ctrl         (usb31_io_usb_ctrl),                                                  //  output,    width = 2,                               .usb_ctrl
		.usb1_usb31_id               (usb31_io_usb31_id),                                                  //   input,    width = 1,                               .usb31_id
		.usb31_pipe_pclk             (sm_usb31_phy_o_usb31_pipe_clk_clk),                                  //   input,    width = 1,         usb31_clk_interconnect.clk
		.usb31_pipe_RxValid          (sm_usb31_phy_o_usb31_pipe_rxvalid_o_usb31_pipe_rxvalid),             //   input,    width = 1,     usb31_rxvalid_interconnect.o_usb31_pipe_RxValid
		.usb31_pipe_RxData           (sm_usb31_phy_o_usb31_pipe_rxdata_o_usb31_pipe_rxdata),               //   input,   width = 16,      usb31_rxdata_interconnect.o_usb31_pipe_RxData
		.usb31_pipe_RxDataK          (sm_usb31_phy_o_usb31_pipe_rxdatak_o_usb31_pipe_rxdatak),             //   input,    width = 2,     usb31_rxdatak_interconnect.o_usb31_pipe_RxDataK
		.usb31_pipe_PhyStatus        (sm_usb31_phy_o_usb31_pipe_phystatus_o_usb31_pipe_phystatus),         //   input,    width = 1,   usb31_phystatus_interconnect.o_usb31_pipe_PhyStatus
		.usb31_pipe_RxElecIdle       (sm_usb31_phy_o_usb31_pipe_rxelecidle_o_usb31_pipe_rxelecidle),       //   input,    width = 1,  usb31_rxelecidle_interconnect.o_usb31_pipe_RxElecidle
		.usb31_pipe_RxStatus         (sm_usb31_phy_o_usb31_pipe_rxstatus_o_usb31_pipe_rxstatus),           //   input,    width = 3,    usb31_rxstatus_interconnect.o_usb31_pipe_Rxstatus
		.usb31_pipe_reset_n          (sm_hps_usb31_rst_interconnect_i_usb31_pipe_reset_n),                 //  output,    width = 1,         usb31_rst_interconnect.i_usb31_pipe_reset_n
		.usb31_pipe_TxData           (sm_hps_usb31_txdata_interconnect_i_usb31_pipe_txdata),               //  output,   width = 16,      usb31_txdata_interconnect.i_usb31_pipe_TxData
		.usb31_pipe_TxDataK          (sm_hps_usb31_txdatak_interconnect_i_usb31_pipe_txdatak),             //  output,    width = 2,     usb31_txdatak_interconnect.i_usb31_pipe_TxDataK
		.usb31_pipe_RxEqTrain        (sm_hps_usb31_rxeqtrain_interconnect_i_usb31_pipe_rxeqtrain),         //  output,    width = 1,   usb31_rxeqtrain_interconnect.i_usb31_pipe_RxEqTrain
		.usb31_pipe_ElasBufferMode   (sm_hps_usb31_elasbuf_interconnect_i_usb31_pipe_elasbuffermode),      //  output,    width = 1,     usb31_elasbuf_interconnect.i_usb31_pipe_ElasBufferMode
		.usb31_pipe_TxDetectRxLoopbk (sm_hps_usb31_loopback_interconnect_i_usb31_pipe_txdetectrxloopback), //  output,    width = 1,    usb31_loopback_interconnect.i_usb31_pipe_TxDetectRxLoopback
		.usb31_pipe_TxElecIdle       (sm_hps_usb31_txelecidle_interconnect_i_usb31_pipe_txelecidle),       //  output,    width = 1,  usb31_txelecidle_interconnect.i_usb31_pipe_TxElecidle
		.usb31_pipe_RxPolarity       (sm_hps_usb31_rxpolarity_interconnect_i_usb31_pipe_rxpolarity),       //  output,    width = 1,  usb31_rxpolarity_interconnect.i_usb31_pipe_RxPolarity
		.usb31_pipe_PowerDown        (sm_hps_usb31_pwrdown_interconnect_i_usb31_pipe_powerdown),           //  output,    width = 4,     usb31_pwrdown_interconnect.i_usb31_pipe_PowerDown
		.usb31_pipe_Rate             (sm_hps_usb31_piperate_interconnect_i_usb31_pipe_txdeemphasis),       //  output,    width = 2,    usb31_piperate_interconnect.i_usb31_pipe_TxDeEmphasis
		.usb31_pipe_RxTermination    (sm_hps_usb31_rxterm_interconnect_i_usb31_pipe_rxtermination),        //  output,    width = 1,      usb31_rxterm_interconnect.i_usb31_pipe_RxTermination
		.usb31_pipe_TxOnesZeros      (sm_hps_usb31_txoneszeros_interconnect_i_usb31_pipe_txoneszeros),     //  output,    width = 1, usb31_txoneszeros_interconnect.i_usb31_pipe_TxOnesZeros
		.mpfe2hps_clk                (sm_mpfe_mpfe_f2soc_interconnect_clk_clk),                            //   input,    width = 1,     hps_f2soc_interconnect_clk.clk
		.mpfe2hps_rst                (sm_mpfe_mpfe_f2soc_interconnect_rst_reset),                          //   input,    width = 1,     hps_f2soc_interconnect_rst.reset
		.mpfe2hps_araddr             (sm_mpfe_mpfe_f2soc_interconnect_araddr),                             //   input,   width = 40,         hps_f2soc_interconnect.araddr
		.mpfe2hps_arburst            (sm_mpfe_mpfe_f2soc_interconnect_arburst),                            //   input,    width = 2,                               .arburst
		.mpfe2hps_arcache            (sm_mpfe_mpfe_f2soc_interconnect_arcache),                            //   input,    width = 4,                               .arcache
		.mpfe2hps_arid               (sm_mpfe_mpfe_f2soc_interconnect_arid),                               //   input,    width = 5,                               .arid
		.mpfe2hps_arlen              (sm_mpfe_mpfe_f2soc_interconnect_arlen),                              //   input,    width = 8,                               .arlen
		.mpfe2hps_arlock             (sm_mpfe_mpfe_f2soc_interconnect_arlock),                             //   input,    width = 1,                               .arlock
		.mpfe2hps_arprot             (sm_mpfe_mpfe_f2soc_interconnect_arprot),                             //   input,    width = 3,                               .arprot
		.mpfe2hps_arqos              (sm_mpfe_mpfe_f2soc_interconnect_arqos),                              //   input,    width = 4,                               .arqos
		.mpfe2hps_arready            (sm_mpfe_mpfe_f2soc_interconnect_arready),                            //  output,    width = 1,                               .arready
		.mpfe2hps_arregion           (sm_mpfe_mpfe_f2soc_interconnect_arregion),                           //   input,    width = 4,                               .arregion
		.mpfe2hps_arsize             (sm_mpfe_mpfe_f2soc_interconnect_arsize),                             //   input,    width = 3,                               .arsize
		.mpfe2hps_aruser             (sm_mpfe_mpfe_f2soc_interconnect_aruser),                             //   input,    width = 8,                               .aruser
		.mpfe2hps_arvalid            (sm_mpfe_mpfe_f2soc_interconnect_arvalid),                            //   input,    width = 1,                               .arvalid
		.mpfe2hps_awaddr             (sm_mpfe_mpfe_f2soc_interconnect_awaddr),                             //   input,   width = 40,                               .awaddr
		.mpfe2hps_awburst            (sm_mpfe_mpfe_f2soc_interconnect_awburst),                            //   input,    width = 2,                               .awburst
		.mpfe2hps_awcache            (sm_mpfe_mpfe_f2soc_interconnect_awcache),                            //   input,    width = 4,                               .awcache
		.mpfe2hps_awid               (sm_mpfe_mpfe_f2soc_interconnect_awid),                               //   input,    width = 5,                               .awid
		.mpfe2hps_awlen              (sm_mpfe_mpfe_f2soc_interconnect_awlen),                              //   input,    width = 8,                               .awlen
		.mpfe2hps_awlock             (sm_mpfe_mpfe_f2soc_interconnect_awlock),                             //   input,    width = 1,                               .awlock
		.mpfe2hps_awprot             (sm_mpfe_mpfe_f2soc_interconnect_awprot),                             //   input,    width = 3,                               .awprot
		.mpfe2hps_awqos              (sm_mpfe_mpfe_f2soc_interconnect_awqos),                              //   input,    width = 4,                               .awqos
		.mpfe2hps_awready            (sm_mpfe_mpfe_f2soc_interconnect_awready),                            //  output,    width = 1,                               .awready
		.mpfe2hps_awregion           (sm_mpfe_mpfe_f2soc_interconnect_awregion),                           //   input,    width = 4,                               .awregion
		.mpfe2hps_awsize             (sm_mpfe_mpfe_f2soc_interconnect_awsize),                             //   input,    width = 3,                               .awsize
		.mpfe2hps_awuser             (sm_mpfe_mpfe_f2soc_interconnect_awuser),                             //   input,    width = 8,                               .awuser
		.mpfe2hps_awvalid            (sm_mpfe_mpfe_f2soc_interconnect_awvalid),                            //   input,    width = 1,                               .awvalid
		.mpfe2hps_bid                (sm_mpfe_mpfe_f2soc_interconnect_bid),                                //  output,    width = 5,                               .bid
		.mpfe2hps_bready             (sm_mpfe_mpfe_f2soc_interconnect_bready),                             //   input,    width = 1,                               .bready
		.mpfe2hps_bresp              (sm_mpfe_mpfe_f2soc_interconnect_bresp),                              //  output,    width = 2,                               .bresp
		.mpfe2hps_buser              (sm_mpfe_mpfe_f2soc_interconnect_buser),                              //  output,    width = 8,                               .buser
		.mpfe2hps_bvalid             (sm_mpfe_mpfe_f2soc_interconnect_bvalid),                             //  output,    width = 1,                               .bvalid
		.mpfe2hps_rdata              (sm_mpfe_mpfe_f2soc_interconnect_rdata),                              //  output,  width = 256,                               .rdata
		.mpfe2hps_rid                (sm_mpfe_mpfe_f2soc_interconnect_rid),                                //  output,    width = 5,                               .rid
		.mpfe2hps_rlast              (sm_mpfe_mpfe_f2soc_interconnect_rlast),                              //  output,    width = 1,                               .rlast
		.mpfe2hps_rready             (sm_mpfe_mpfe_f2soc_interconnect_rready),                             //   input,    width = 1,                               .rready
		.mpfe2hps_rresp              (sm_mpfe_mpfe_f2soc_interconnect_rresp),                              //  output,    width = 2,                               .rresp
		.mpfe2hps_ruser              (sm_mpfe_mpfe_f2soc_interconnect_ruser),                              //  output,    width = 8,                               .ruser
		.mpfe2hps_rvalid             (sm_mpfe_mpfe_f2soc_interconnect_rvalid),                             //  output,    width = 1,                               .rvalid
		.mpfe2hps_wdata              (sm_mpfe_mpfe_f2soc_interconnect_wdata),                              //   input,  width = 256,                               .wdata
		.mpfe2hps_wlast              (sm_mpfe_mpfe_f2soc_interconnect_wlast),                              //   input,    width = 1,                               .wlast
		.mpfe2hps_wready             (sm_mpfe_mpfe_f2soc_interconnect_wready),                             //  output,    width = 1,                               .wready
		.mpfe2hps_wstrb              (sm_mpfe_mpfe_f2soc_interconnect_wstrb),                              //   input,   width = 32,                               .wstrb
		.mpfe2hps_wuser              (sm_mpfe_mpfe_f2soc_interconnect_wuser),                              //   input,    width = 8,                               .wuser
		.mpfe2hps_wvalid             (sm_mpfe_mpfe_f2soc_interconnect_wvalid),                             //   input,    width = 1,                               .wvalid
		.hps2mpfe_ccu_clk            (sm_hps_hps_ccu_interconnect_clk_clk),                                //  output,    width = 1,       hps_ccu_interconnect_clk.clk
		.hps2mpfe_ccu_rst            (sm_hps_hps_ccu_interconnect_rst_reset),                              //  output,    width = 1,       hps_ccu_interconnect_rst.reset
		.hps2mpfe_dmi0_araddr        (sm_hps_hps_dmi0_interconnect_araddr),                                //  output,   width = 44,          hps_dmi0_interconnect.araddr
		.hps2mpfe_dmi0_arburst       (sm_hps_hps_dmi0_interconnect_arburst),                               //  output,    width = 2,                               .arburst
		.hps2mpfe_dmi0_arcache       (sm_hps_hps_dmi0_interconnect_arcache),                               //  output,    width = 4,                               .arcache
		.hps2mpfe_dmi0_arid          (sm_hps_hps_dmi0_interconnect_arid),                                  //  output,   width = 10,                               .arid
		.hps2mpfe_dmi0_arlen         (sm_hps_hps_dmi0_interconnect_arlen),                                 //  output,    width = 8,                               .arlen
		.hps2mpfe_dmi0_arlock        (sm_hps_hps_dmi0_interconnect_arlock),                                //  output,    width = 1,                               .arlock
		.hps2mpfe_dmi0_arprot        (sm_hps_hps_dmi0_interconnect_arprot),                                //  output,    width = 3,                               .arprot
		.hps2mpfe_dmi0_arqos         (sm_hps_hps_dmi0_interconnect_arqos),                                 //  output,    width = 4,                               .arqos
		.hps2mpfe_dmi0_arready       (sm_hps_hps_dmi0_interconnect_arready),                               //   input,    width = 1,                               .arready
		.hps2mpfe_dmi0_arsize        (sm_hps_hps_dmi0_interconnect_arsize),                                //  output,    width = 3,                               .arsize
		.hps2mpfe_dmi0_aruser        (sm_hps_hps_dmi0_interconnect_aruser),                                //  output,    width = 8,                               .aruser
		.hps2mpfe_dmi0_arvalid       (sm_hps_hps_dmi0_interconnect_arvalid),                               //  output,    width = 1,                               .arvalid
		.hps2mpfe_dmi0_awaddr        (sm_hps_hps_dmi0_interconnect_awaddr),                                //  output,   width = 44,                               .awaddr
		.hps2mpfe_dmi0_awburst       (sm_hps_hps_dmi0_interconnect_awburst),                               //  output,    width = 2,                               .awburst
		.hps2mpfe_dmi0_awcache       (sm_hps_hps_dmi0_interconnect_awcache),                               //  output,    width = 4,                               .awcache
		.hps2mpfe_dmi0_awid          (sm_hps_hps_dmi0_interconnect_awid),                                  //  output,   width = 10,                               .awid
		.hps2mpfe_dmi0_awlen         (sm_hps_hps_dmi0_interconnect_awlen),                                 //  output,    width = 8,                               .awlen
		.hps2mpfe_dmi0_awlock        (sm_hps_hps_dmi0_interconnect_awlock),                                //  output,    width = 1,                               .awlock
		.hps2mpfe_dmi0_awprot        (sm_hps_hps_dmi0_interconnect_awprot),                                //  output,    width = 3,                               .awprot
		.hps2mpfe_dmi0_awqos         (sm_hps_hps_dmi0_interconnect_awqos),                                 //  output,    width = 4,                               .awqos
		.hps2mpfe_dmi0_awready       (sm_hps_hps_dmi0_interconnect_awready),                               //   input,    width = 1,                               .awready
		.hps2mpfe_dmi0_awsize        (sm_hps_hps_dmi0_interconnect_awsize),                                //  output,    width = 3,                               .awsize
		.hps2mpfe_dmi0_awuser        (sm_hps_hps_dmi0_interconnect_awuser),                                //  output,    width = 8,                               .awuser
		.hps2mpfe_dmi0_awvalid       (sm_hps_hps_dmi0_interconnect_awvalid),                               //  output,    width = 1,                               .awvalid
		.hps2mpfe_dmi0_bid           (sm_hps_hps_dmi0_interconnect_bid),                                   //   input,   width = 10,                               .bid
		.hps2mpfe_dmi0_bready        (sm_hps_hps_dmi0_interconnect_bready),                                //  output,    width = 1,                               .bready
		.hps2mpfe_dmi0_bresp         (sm_hps_hps_dmi0_interconnect_bresp),                                 //   input,    width = 2,                               .bresp
		.hps2mpfe_dmi0_bvalid        (sm_hps_hps_dmi0_interconnect_bvalid),                                //   input,    width = 1,                               .bvalid
		.hps2mpfe_dmi0_rdata         (sm_hps_hps_dmi0_interconnect_rdata),                                 //   input,  width = 256,                               .rdata
		.hps2mpfe_dmi0_rid           (sm_hps_hps_dmi0_interconnect_rid),                                   //   input,   width = 10,                               .rid
		.hps2mpfe_dmi0_rlast         (sm_hps_hps_dmi0_interconnect_rlast),                                 //   input,    width = 1,                               .rlast
		.hps2mpfe_dmi0_rready        (sm_hps_hps_dmi0_interconnect_rready),                                //  output,    width = 1,                               .rready
		.hps2mpfe_dmi0_rresp         (sm_hps_hps_dmi0_interconnect_rresp),                                 //   input,    width = 2,                               .rresp
		.hps2mpfe_dmi0_rvalid        (sm_hps_hps_dmi0_interconnect_rvalid),                                //   input,    width = 1,                               .rvalid
		.hps2mpfe_dmi0_wdata         (sm_hps_hps_dmi0_interconnect_wdata),                                 //  output,  width = 256,                               .wdata
		.hps2mpfe_dmi0_wlast         (sm_hps_hps_dmi0_interconnect_wlast),                                 //  output,    width = 1,                               .wlast
		.hps2mpfe_dmi0_wready        (sm_hps_hps_dmi0_interconnect_wready),                                //   input,    width = 1,                               .wready
		.hps2mpfe_dmi0_wstrb         (sm_hps_hps_dmi0_interconnect_wstrb),                                 //  output,   width = 32,                               .wstrb
		.hps2mpfe_dmi0_wvalid        (sm_hps_hps_dmi0_interconnect_wvalid),                                //  output,    width = 1,                               .wvalid
		.hps2mpfe_dmi1_araddr        (sm_hps_hps_dmi1_interconnect_araddr),                                //  output,   width = 44,          hps_dmi1_interconnect.araddr
		.hps2mpfe_dmi1_arburst       (sm_hps_hps_dmi1_interconnect_arburst),                               //  output,    width = 2,                               .arburst
		.hps2mpfe_dmi1_arcache       (sm_hps_hps_dmi1_interconnect_arcache),                               //  output,    width = 4,                               .arcache
		.hps2mpfe_dmi1_arid          (sm_hps_hps_dmi1_interconnect_arid),                                  //  output,   width = 10,                               .arid
		.hps2mpfe_dmi1_arlen         (sm_hps_hps_dmi1_interconnect_arlen),                                 //  output,    width = 8,                               .arlen
		.hps2mpfe_dmi1_arlock        (sm_hps_hps_dmi1_interconnect_arlock),                                //  output,    width = 1,                               .arlock
		.hps2mpfe_dmi1_arprot        (sm_hps_hps_dmi1_interconnect_arprot),                                //  output,    width = 3,                               .arprot
		.hps2mpfe_dmi1_arqos         (sm_hps_hps_dmi1_interconnect_arqos),                                 //  output,    width = 4,                               .arqos
		.hps2mpfe_dmi1_arready       (sm_hps_hps_dmi1_interconnect_arready),                               //   input,    width = 1,                               .arready
		.hps2mpfe_dmi1_arsize        (sm_hps_hps_dmi1_interconnect_arsize),                                //  output,    width = 3,                               .arsize
		.hps2mpfe_dmi1_aruser        (sm_hps_hps_dmi1_interconnect_aruser),                                //  output,    width = 8,                               .aruser
		.hps2mpfe_dmi1_arvalid       (sm_hps_hps_dmi1_interconnect_arvalid),                               //  output,    width = 1,                               .arvalid
		.hps2mpfe_dmi1_awaddr        (sm_hps_hps_dmi1_interconnect_awaddr),                                //  output,   width = 44,                               .awaddr
		.hps2mpfe_dmi1_awburst       (sm_hps_hps_dmi1_interconnect_awburst),                               //  output,    width = 2,                               .awburst
		.hps2mpfe_dmi1_awcache       (sm_hps_hps_dmi1_interconnect_awcache),                               //  output,    width = 4,                               .awcache
		.hps2mpfe_dmi1_awid          (sm_hps_hps_dmi1_interconnect_awid),                                  //  output,   width = 10,                               .awid
		.hps2mpfe_dmi1_awlen         (sm_hps_hps_dmi1_interconnect_awlen),                                 //  output,    width = 8,                               .awlen
		.hps2mpfe_dmi1_awlock        (sm_hps_hps_dmi1_interconnect_awlock),                                //  output,    width = 1,                               .awlock
		.hps2mpfe_dmi1_awprot        (sm_hps_hps_dmi1_interconnect_awprot),                                //  output,    width = 3,                               .awprot
		.hps2mpfe_dmi1_awqos         (sm_hps_hps_dmi1_interconnect_awqos),                                 //  output,    width = 4,                               .awqos
		.hps2mpfe_dmi1_awready       (sm_hps_hps_dmi1_interconnect_awready),                               //   input,    width = 1,                               .awready
		.hps2mpfe_dmi1_awsize        (sm_hps_hps_dmi1_interconnect_awsize),                                //  output,    width = 3,                               .awsize
		.hps2mpfe_dmi1_awuser        (sm_hps_hps_dmi1_interconnect_awuser),                                //  output,    width = 8,                               .awuser
		.hps2mpfe_dmi1_awvalid       (sm_hps_hps_dmi1_interconnect_awvalid),                               //  output,    width = 1,                               .awvalid
		.hps2mpfe_dmi1_bid           (sm_hps_hps_dmi1_interconnect_bid),                                   //   input,   width = 10,                               .bid
		.hps2mpfe_dmi1_bready        (sm_hps_hps_dmi1_interconnect_bready),                                //  output,    width = 1,                               .bready
		.hps2mpfe_dmi1_bresp         (sm_hps_hps_dmi1_interconnect_bresp),                                 //   input,    width = 2,                               .bresp
		.hps2mpfe_dmi1_bvalid        (sm_hps_hps_dmi1_interconnect_bvalid),                                //   input,    width = 1,                               .bvalid
		.hps2mpfe_dmi1_rdata         (sm_hps_hps_dmi1_interconnect_rdata),                                 //   input,  width = 256,                               .rdata
		.hps2mpfe_dmi1_rid           (sm_hps_hps_dmi1_interconnect_rid),                                   //   input,   width = 10,                               .rid
		.hps2mpfe_dmi1_rlast         (sm_hps_hps_dmi1_interconnect_rlast),                                 //   input,    width = 1,                               .rlast
		.hps2mpfe_dmi1_rready        (sm_hps_hps_dmi1_interconnect_rready),                                //  output,    width = 1,                               .rready
		.hps2mpfe_dmi1_rresp         (sm_hps_hps_dmi1_interconnect_rresp),                                 //   input,    width = 2,                               .rresp
		.hps2mpfe_dmi1_rvalid        (sm_hps_hps_dmi1_interconnect_rvalid),                                //   input,    width = 1,                               .rvalid
		.hps2mpfe_dmi1_wdata         (sm_hps_hps_dmi1_interconnect_wdata),                                 //  output,  width = 256,                               .wdata
		.hps2mpfe_dmi1_wlast         (sm_hps_hps_dmi1_interconnect_wlast),                                 //  output,    width = 1,                               .wlast
		.hps2mpfe_dmi1_wready        (sm_hps_hps_dmi1_interconnect_wready),                                //   input,    width = 1,                               .wready
		.hps2mpfe_dmi1_wstrb         (sm_hps_hps_dmi1_interconnect_wstrb),                                 //  output,   width = 32,                               .wstrb
		.hps2mpfe_dmi1_wvalid        (sm_hps_hps_dmi1_interconnect_wvalid),                                //  output,    width = 1,                               .wvalid
		.hps2mpfe_csr_araddr         (sm_hps_hps_s2mpfe_interconnect_araddr),                              //  output,   width = 44,        hps_s2mpfe_interconnect.araddr
		.hps2mpfe_csr_arburst        (sm_hps_hps_s2mpfe_interconnect_arburst),                             //  output,    width = 2,                               .arburst
		.hps2mpfe_csr_arcache        (sm_hps_hps_s2mpfe_interconnect_arcache),                             //  output,    width = 4,                               .arcache
		.hps2mpfe_csr_arid           (sm_hps_hps_s2mpfe_interconnect_arid),                                //  output,   width = 10,                               .arid
		.hps2mpfe_csr_arlen          (sm_hps_hps_s2mpfe_interconnect_arlen),                               //  output,    width = 8,                               .arlen
		.hps2mpfe_csr_arlock         (sm_hps_hps_s2mpfe_interconnect_arlock),                              //  output,    width = 1,                               .arlock
		.hps2mpfe_csr_arprot         (sm_hps_hps_s2mpfe_interconnect_arprot),                              //  output,    width = 3,                               .arprot
		.hps2mpfe_csr_arready        (sm_hps_hps_s2mpfe_interconnect_arready),                             //   input,    width = 1,                               .arready
		.hps2mpfe_csr_arsize         (sm_hps_hps_s2mpfe_interconnect_arsize),                              //  output,    width = 3,                               .arsize
		.hps2mpfe_csr_aruser         (sm_hps_hps_s2mpfe_interconnect_aruser),                              //  output,    width = 8,                               .aruser
		.hps2mpfe_csr_arvalid        (sm_hps_hps_s2mpfe_interconnect_arvalid),                             //  output,    width = 1,                               .arvalid
		.hps2mpfe_csr_awaddr         (sm_hps_hps_s2mpfe_interconnect_awaddr),                              //  output,   width = 44,                               .awaddr
		.hps2mpfe_csr_awburst        (sm_hps_hps_s2mpfe_interconnect_awburst),                             //  output,    width = 2,                               .awburst
		.hps2mpfe_csr_awcache        (sm_hps_hps_s2mpfe_interconnect_awcache),                             //  output,    width = 4,                               .awcache
		.hps2mpfe_csr_awid           (sm_hps_hps_s2mpfe_interconnect_awid),                                //  output,   width = 10,                               .awid
		.hps2mpfe_csr_awlen          (sm_hps_hps_s2mpfe_interconnect_awlen),                               //  output,    width = 8,                               .awlen
		.hps2mpfe_csr_awlock         (sm_hps_hps_s2mpfe_interconnect_awlock),                              //  output,    width = 1,                               .awlock
		.hps2mpfe_csr_awprot         (sm_hps_hps_s2mpfe_interconnect_awprot),                              //  output,    width = 3,                               .awprot
		.hps2mpfe_csr_awready        (sm_hps_hps_s2mpfe_interconnect_awready),                             //   input,    width = 1,                               .awready
		.hps2mpfe_csr_awsize         (sm_hps_hps_s2mpfe_interconnect_awsize),                              //  output,    width = 3,                               .awsize
		.hps2mpfe_csr_awuser         (sm_hps_hps_s2mpfe_interconnect_awuser),                              //  output,    width = 8,                               .awuser
		.hps2mpfe_csr_awvalid        (sm_hps_hps_s2mpfe_interconnect_awvalid),                             //  output,    width = 1,                               .awvalid
		.hps2mpfe_csr_bid            (sm_hps_hps_s2mpfe_interconnect_bid),                                 //   input,   width = 10,                               .bid
		.hps2mpfe_csr_bready         (sm_hps_hps_s2mpfe_interconnect_bready),                              //  output,    width = 1,                               .bready
		.hps2mpfe_csr_bresp          (sm_hps_hps_s2mpfe_interconnect_bresp),                               //   input,    width = 2,                               .bresp
		.hps2mpfe_csr_bvalid         (sm_hps_hps_s2mpfe_interconnect_bvalid),                              //   input,    width = 1,                               .bvalid
		.hps2mpfe_csr_rdata          (sm_hps_hps_s2mpfe_interconnect_rdata),                               //   input,   width = 64,                               .rdata
		.hps2mpfe_csr_rid            (sm_hps_hps_s2mpfe_interconnect_rid),                                 //   input,   width = 10,                               .rid
		.hps2mpfe_csr_rlast          (sm_hps_hps_s2mpfe_interconnect_rlast),                               //   input,    width = 1,                               .rlast
		.hps2mpfe_csr_rready         (sm_hps_hps_s2mpfe_interconnect_rready),                              //  output,    width = 1,                               .rready
		.hps2mpfe_csr_rresp          (sm_hps_hps_s2mpfe_interconnect_rresp),                               //   input,    width = 2,                               .rresp
		.hps2mpfe_csr_rvalid         (sm_hps_hps_s2mpfe_interconnect_rvalid),                              //   input,    width = 1,                               .rvalid
		.hps2mpfe_csr_wdata          (sm_hps_hps_s2mpfe_interconnect_wdata),                               //  output,   width = 64,                               .wdata
		.hps2mpfe_csr_wlast          (sm_hps_hps_s2mpfe_interconnect_wlast),                               //  output,    width = 1,                               .wlast
		.hps2mpfe_csr_wready         (sm_hps_hps_s2mpfe_interconnect_wready),                              //   input,    width = 1,                               .wready
		.hps2mpfe_csr_wstrb          (sm_hps_hps_s2mpfe_interconnect_wstrb),                               //  output,    width = 8,                               .wstrb
		.hps2mpfe_csr_wvalid         (sm_hps_hps_s2mpfe_interconnect_wvalid),                              //  output,    width = 1,                               .wvalid
		.fpga2sdram_bridge_rst_n     (sm_hps_hps2sdram_interconnect_reset_n),                              //  output,    width = 1,         hps2sdram_interconnect.reset_n
		.fpga2sdram_bridge_ack       (sm_mpfe_sdram2hps_interconnect_ack),                                 //   input,    width = 1,                               .ack
		.fpga2sdram_bridge_req       (sm_hps_hps2sdram_interconnect_req),                                  //  output,    width = 1,                               .req
		.fpga2sdram_tbu_pmu_irpt     (sm_mpfe_sdram2hps_interconnect_tbu_pmu),                             //   input,    width = 1,                               .tbu_pmu
		.fpga2sdram_tbu_ras_irpt     (sm_mpfe_sdram2hps_interconnect_tbu_ras),                             //   input,    width = 1,                               .tbu_ras
		.f2h_fpga_irq63              (fpga2hps_interrupt_irq),                                             //   input,   width = 63,             fpga2hps_interrupt.irq
		.h2emif_interconnect_axi_rst ()                                                                    //  output,    width = 1,    h2emif_interconnect_axi_rst.reset_n
	);

	agilex_hps_intel_usbphy_gts_100_td2whqy sm_usb31_phy (
		.i_pma_cpu_clk                   (usb31_phy_pma_cpu_clk_clk),                                          //   input,   width = 1,                   i_pma_cpu_clk.clk
		.i_refclk_p                      (usb31_phy_refclk_p_clk),                                             //   input,   width = 1,                      i_refclk_p.clk
		.i_refclk_n                      (usb31_phy_refclk_n_clk),                                             //   input,   width = 1,                      i_refclk_n.clk
		.i_rx_serial_n                   (usb31_phy_rx_serial_n_i_rx_serial_n),                                //   input,   width = 1,                   i_rx_serial_n.i_rx_serial_n
		.i_rx_serial_p                   (usb31_phy_rx_serial_p_i_rx_serial_p),                                //   input,   width = 1,                   i_rx_serial_p.i_rx_serial_p
		.o_tx_serial_n                   (usb31_phy_tx_serial_n_o_tx_serial_n),                                //  output,   width = 1,                   o_tx_serial_n.o_tx_serial_n
		.o_tx_serial_p                   (usb31_phy_tx_serial_p_o_tx_serial_p),                                //  output,   width = 1,                   o_tx_serial_p.o_tx_serial_p
		.o_usb31_pipe_clk                (sm_usb31_phy_o_usb31_pipe_clk_clk),                                  //  output,   width = 1,                o_usb31_pipe_clk.clk
		.i_usb31_pipe_reset_n            (sm_hps_usb31_rst_interconnect_i_usb31_pipe_reset_n),                 //   input,   width = 1,            i_usb31_pipe_reset_n.i_usb31_pipe_reset_n
		.i_usb31_pipe_PowerDown          (sm_hps_usb31_pwrdown_interconnect_i_usb31_pipe_powerdown),           //   input,   width = 4,          i_usb31_pipe_PowerDown.i_usb31_pipe_PowerDown
		.i_usb31_pipe_ElasBufferMode     (sm_hps_usb31_elasbuf_interconnect_i_usb31_pipe_elasbuffermode),      //   input,   width = 1,     i_usb31_pipe_ElasBufferMode.i_usb31_pipe_ElasBufferMode
		.i_usb31_pipe_Rate               (),                                                                   //   input,   width = 3,               i_usb31_pipe_Rate.i_usb31_pipe_Rate
		.i_usb31_pipe_TxDetectRxLoopback (sm_hps_usb31_loopback_interconnect_i_usb31_pipe_txdetectrxloopback), //   input,   width = 1, i_usb31_pipe_TxDetectRxLoopback.i_usb31_pipe_TxDetectRxLoopback
		.i_usb31_pipe_TxElecidle         (sm_hps_usb31_txelecidle_interconnect_i_usb31_pipe_txelecidle),       //   input,   width = 1,         i_usb31_pipe_TxElecidle.i_usb31_pipe_TxElecidle
		.i_usb31_pipe_TxOnesZeros        (sm_hps_usb31_txoneszeros_interconnect_i_usb31_pipe_txoneszeros),     //   input,   width = 1,        i_usb31_pipe_TxOnesZeros.i_usb31_pipe_TxOnesZeros
		.i_usb31_pipe_RxTermination      (sm_hps_usb31_rxterm_interconnect_i_usb31_pipe_rxtermination),        //   input,   width = 1,      i_usb31_pipe_RxTermination.i_usb31_pipe_RxTermination
		.i_usb31_pipe_RxEqTrain          (sm_hps_usb31_rxeqtrain_interconnect_i_usb31_pipe_rxeqtrain),         //   input,   width = 1,          i_usb31_pipe_RxEqTrain.i_usb31_pipe_RxEqTrain
		.i_usb31_pipe_RxPolarity         (sm_hps_usb31_rxpolarity_interconnect_i_usb31_pipe_rxpolarity),       //   input,   width = 1,         i_usb31_pipe_RxPolarity.i_usb31_pipe_RxPolarity
		.i_usb31_pipe_TxDeEmphasis       (sm_hps_usb31_piperate_interconnect_i_usb31_pipe_txdeemphasis),       //   input,   width = 2,       i_usb31_pipe_TxDeEmphasis.i_usb31_pipe_TxDeEmphasis
		.o_usb31_pipe_PhyStatus          (sm_usb31_phy_o_usb31_pipe_phystatus_o_usb31_pipe_phystatus),         //  output,   width = 1,          o_usb31_pipe_PhyStatus.o_usb31_pipe_PhyStatus
		.o_usb31_pipe_RxElecidle         (sm_usb31_phy_o_usb31_pipe_rxelecidle_o_usb31_pipe_rxelecidle),       //  output,   width = 1,         o_usb31_pipe_RxElecidle.o_usb31_pipe_RxElecidle
		.o_usb31_pipe_Rxstatus           (sm_usb31_phy_o_usb31_pipe_rxstatus_o_usb31_pipe_rxstatus),           //  output,   width = 3,           o_usb31_pipe_Rxstatus.o_usb31_pipe_Rxstatus
		.o_usb31_pipe_RxData             (sm_usb31_phy_o_usb31_pipe_rxdata_o_usb31_pipe_rxdata),               //  output,  width = 16,             o_usb31_pipe_RxData.o_usb31_pipe_RxData
		.o_usb31_pipe_RxDataK            (sm_usb31_phy_o_usb31_pipe_rxdatak_o_usb31_pipe_rxdatak),             //  output,   width = 2,            o_usb31_pipe_RxDataK.o_usb31_pipe_RxDataK
		.o_usb31_pipe_RxValid            (sm_usb31_phy_o_usb31_pipe_rxvalid_o_usb31_pipe_rxvalid),             //  output,   width = 1,            o_usb31_pipe_RxValid.o_usb31_pipe_RxValid
		.i_usb31_pipe_TxData             (sm_hps_usb31_txdata_interconnect_i_usb31_pipe_txdata),               //   input,  width = 16,             i_usb31_pipe_TxData.i_usb31_pipe_TxData
		.i_usb31_pipe_TxDataK            (sm_hps_usb31_txdatak_interconnect_i_usb31_pipe_txdatak),             //   input,   width = 2,            i_usb31_pipe_TxDataK.i_usb31_pipe_TxDataK
		.i_reconfig_reset                (usb31_phy_reconfig_rst_reset),                                       //   input,   width = 1,                i_reconfig_reset.reset
		.i_reconfig_clk                  (usb31_phy_reconfig_clk_clk),                                         //   input,   width = 1,                  i_reconfig_clk.clk
		.i_reconfig_address              (usb31_phy_reconfig_slave_address),                                   //   input,  width = 21,                  reconfig_slave.address
		.i_reconfig_byteenable           (usb31_phy_reconfig_slave_byteenable),                                //   input,   width = 4,                                .byteenable
		.o_reconfig_readdatavalid        (usb31_phy_reconfig_slave_readdatavalid),                             //  output,   width = 1,                                .readdatavalid
		.i_reconfig_read                 (usb31_phy_reconfig_slave_read),                                      //   input,   width = 1,                                .read
		.i_reconfig_write                (usb31_phy_reconfig_slave_write),                                     //   input,   width = 1,                                .write
		.o_reconfig_readdata             (usb31_phy_reconfig_slave_readdata),                                  //  output,  width = 32,                                .readdata
		.i_reconfig_writedata            (usb31_phy_reconfig_slave_writedata),                                 //   input,  width = 32,                                .writedata
		.o_reconfig_waitrequest          (usb31_phy_reconfig_slave_waitrequest)                                //  output,   width = 1,                                .waitrequest
	);

	agilex_hps_intel_sundancemesa_mpfe_100_i2zewfa sm_mpfe (
		.f2sdram_clk           (f2sdram_axi_clock_clk),                     //   input,    width = 1,           f2sdram_axi_clock.clk
		.f2sdram_rst_n         (f2sdram_axi_reset_reset_n),                 //   input,    width = 1,           f2sdram_axi_reset.reset_n
		.f2sdram_araddr        (f2sdram_araddr),                            //   input,   width = 32,                     f2sdram.araddr
		.f2sdram_arburst       (f2sdram_arburst),                           //   input,    width = 2,                            .arburst
		.f2sdram_arcache       (f2sdram_arcache),                           //   input,    width = 4,                            .arcache
		.f2sdram_arid          (f2sdram_arid),                              //   input,    width = 5,                            .arid
		.f2sdram_arlen         (f2sdram_arlen),                             //   input,    width = 8,                            .arlen
		.f2sdram_arlock        (f2sdram_arlock),                            //   input,    width = 1,                            .arlock
		.f2sdram_arprot        (f2sdram_arprot),                            //   input,    width = 3,                            .arprot
		.f2sdram_arqos         (f2sdram_arqos),                             //   input,    width = 4,                            .arqos
		.f2sdram_arready       (f2sdram_arready),                           //  output,    width = 1,                            .arready
		.f2sdram_arsize        (f2sdram_arsize),                            //   input,    width = 3,                            .arsize
		.f2sdram_arvalid       (f2sdram_arvalid),                           //   input,    width = 1,                            .arvalid
		.f2sdram_awaddr        (f2sdram_awaddr),                            //   input,   width = 32,                            .awaddr
		.f2sdram_awburst       (f2sdram_awburst),                           //   input,    width = 2,                            .awburst
		.f2sdram_awcache       (f2sdram_awcache),                           //   input,    width = 4,                            .awcache
		.f2sdram_awid          (f2sdram_awid),                              //   input,    width = 5,                            .awid
		.f2sdram_awlen         (f2sdram_awlen),                             //   input,    width = 8,                            .awlen
		.f2sdram_awlock        (f2sdram_awlock),                            //   input,    width = 1,                            .awlock
		.f2sdram_awprot        (f2sdram_awprot),                            //   input,    width = 3,                            .awprot
		.f2sdram_awqos         (f2sdram_awqos),                             //   input,    width = 4,                            .awqos
		.f2sdram_awready       (f2sdram_awready),                           //  output,    width = 1,                            .awready
		.f2sdram_awsize        (f2sdram_awsize),                            //   input,    width = 3,                            .awsize
		.f2sdram_awvalid       (f2sdram_awvalid),                           //   input,    width = 1,                            .awvalid
		.f2sdram_bid           (f2sdram_bid),                               //  output,    width = 5,                            .bid
		.f2sdram_bready        (f2sdram_bready),                            //   input,    width = 1,                            .bready
		.f2sdram_bresp         (f2sdram_bresp),                             //  output,    width = 2,                            .bresp
		.f2sdram_bvalid        (f2sdram_bvalid),                            //  output,    width = 1,                            .bvalid
		.f2sdram_rdata         (f2sdram_rdata),                             //  output,  width = 256,                            .rdata
		.f2sdram_rid           (f2sdram_rid),                               //  output,    width = 5,                            .rid
		.f2sdram_rlast         (f2sdram_rlast),                             //  output,    width = 1,                            .rlast
		.f2sdram_rready        (f2sdram_rready),                            //   input,    width = 1,                            .rready
		.f2sdram_rresp         (f2sdram_rresp),                             //  output,    width = 2,                            .rresp
		.f2sdram_rvalid        (f2sdram_rvalid),                            //  output,    width = 1,                            .rvalid
		.f2sdram_wdata         (f2sdram_wdata),                             //   input,  width = 256,                            .wdata
		.f2sdram_wlast         (f2sdram_wlast),                             //   input,    width = 1,                            .wlast
		.f2sdram_wready        (f2sdram_wready),                            //  output,    width = 1,                            .wready
		.f2sdram_wstrb         (f2sdram_wstrb),                             //   input,   width = 32,                            .wstrb
		.f2sdram_wvalid        (f2sdram_wvalid),                            //   input,    width = 1,                            .wvalid
		.f2sdram_aruser        (f2sdram_aruser),                            //   input,    width = 8,                            .aruser
		.f2sdram_awuser        (f2sdram_awuser),                            //   input,    width = 8,                            .awuser
		.f2sdram_wuser         (f2sdram_wuser),                             //   input,    width = 8,                            .wuser
		.f2sdram_buser         (f2sdram_buser),                             //  output,    width = 8,                            .buser
		.f2sdram_arregion      (f2sdram_arregion),                          //   input,    width = 4,                            .arregion
		.f2sdram_ruser         (f2sdram_ruser),                             //  output,    width = 8,                            .ruser
		.f2sdram_awregion      (f2sdram_awregion),                          //   input,    width = 4,                            .awregion
		.sdram_bridge_rst_n    (sm_hps_hps2sdram_interconnect_reset_n),     //   input,    width = 1,      sdram2hps_interconnect.reset_n
		.sdram_bridge_ack      (sm_mpfe_sdram2hps_interconnect_ack),        //  output,    width = 1,                            .ack
		.sdram_bridge_req      (sm_hps_hps2sdram_interconnect_req),         //   input,    width = 1,                            .req
		.sdram_tbu_pmu_irpt    (sm_mpfe_sdram2hps_interconnect_tbu_pmu),    //  output,    width = 1,                            .tbu_pmu
		.sdram_tbu_ras_irpt    (sm_mpfe_sdram2hps_interconnect_tbu_ras),    //  output,    width = 1,                            .tbu_ras
		.fpga2hps_clk          (fpga2hps_clock_clk),                        //   input,    width = 1,              fpga2hps_clock.clk
		.fpga2hps_rst_n        (fpga2hps_reset_reset_n),                    //   input,    width = 1,              fpga2hps_reset.reset_n
		.fpga2hps_awid         (fpga2hps_awid),                             //   input,    width = 5,                    fpga2hps.awid
		.fpga2hps_awaddr       (fpga2hps_awaddr),                           //   input,   width = 32,                            .awaddr
		.fpga2hps_awlen        (fpga2hps_awlen),                            //   input,    width = 8,                            .awlen
		.fpga2hps_awsize       (fpga2hps_awsize),                           //   input,    width = 3,                            .awsize
		.fpga2hps_arsize       (fpga2hps_arsize),                           //   input,    width = 3,                            .arsize
		.fpga2hps_awburst      (fpga2hps_awburst),                          //   input,    width = 2,                            .awburst
		.fpga2hps_awlock       (fpga2hps_awlock),                           //   input,    width = 1,                            .awlock
		.fpga2hps_awcache      (fpga2hps_awcache),                          //   input,    width = 4,                            .awcache
		.fpga2hps_awprot       (fpga2hps_awprot),                           //   input,    width = 3,                            .awprot
		.fpga2hps_awqos        (fpga2hps_awqos),                            //   input,    width = 4,                            .awqos
		.fpga2hps_awvalid      (fpga2hps_awvalid),                          //   input,    width = 1,                            .awvalid
		.fpga2hps_awready      (fpga2hps_awready),                          //  output,    width = 1,                            .awready
		.fpga2hps_wdata        (fpga2hps_wdata),                            //   input,  width = 256,                            .wdata
		.fpga2hps_wstrb        (fpga2hps_wstrb),                            //   input,   width = 32,                            .wstrb
		.fpga2hps_wlast        (fpga2hps_wlast),                            //   input,    width = 1,                            .wlast
		.fpga2hps_wvalid       (fpga2hps_wvalid),                           //   input,    width = 1,                            .wvalid
		.fpga2hps_wready       (fpga2hps_wready),                           //  output,    width = 1,                            .wready
		.fpga2hps_bid          (fpga2hps_bid),                              //  output,    width = 5,                            .bid
		.fpga2hps_bresp        (fpga2hps_bresp),                            //  output,    width = 2,                            .bresp
		.fpga2hps_bvalid       (fpga2hps_bvalid),                           //  output,    width = 1,                            .bvalid
		.fpga2hps_bready       (fpga2hps_bready),                           //   input,    width = 1,                            .bready
		.fpga2hps_arid         (fpga2hps_arid),                             //   input,    width = 5,                            .arid
		.fpga2hps_araddr       (fpga2hps_araddr),                           //   input,   width = 32,                            .araddr
		.fpga2hps_arlen        (fpga2hps_arlen),                            //   input,    width = 8,                            .arlen
		.fpga2hps_arburst      (fpga2hps_arburst),                          //   input,    width = 2,                            .arburst
		.fpga2hps_arlock       (fpga2hps_arlock),                           //   input,    width = 1,                            .arlock
		.fpga2hps_arcache      (fpga2hps_arcache),                          //   input,    width = 4,                            .arcache
		.fpga2hps_arprot       (fpga2hps_arprot),                           //   input,    width = 3,                            .arprot
		.fpga2hps_arqos        (fpga2hps_arqos),                            //   input,    width = 4,                            .arqos
		.fpga2hps_arvalid      (fpga2hps_arvalid),                          //   input,    width = 1,                            .arvalid
		.fpga2hps_arready      (fpga2hps_arready),                          //  output,    width = 1,                            .arready
		.fpga2hps_rid          (fpga2hps_rid),                              //  output,    width = 5,                            .rid
		.fpga2hps_rdata        (fpga2hps_rdata),                            //  output,  width = 256,                            .rdata
		.fpga2hps_rresp        (fpga2hps_rresp),                            //  output,    width = 2,                            .rresp
		.fpga2hps_rlast        (fpga2hps_rlast),                            //  output,    width = 1,                            .rlast
		.fpga2hps_rvalid       (fpga2hps_rvalid),                           //  output,    width = 1,                            .rvalid
		.fpga2hps_rready       (fpga2hps_rready),                           //   input,    width = 1,                            .rready
		.fpga2hps_aruser       (fpga2hps_aruser),                           //   input,    width = 8,                            .aruser
		.fpga2hps_awuser       (fpga2hps_awuser),                           //   input,    width = 8,                            .awuser
		.fpga2hps_arregion     (fpga2hps_arregion),                         //   input,    width = 4,                            .arregion
		.fpga2hps_awregion     (fpga2hps_awregion),                         //   input,    width = 4,                            .awregion
		.fpga2hps_wuser        (fpga2hps_wuser),                            //   input,    width = 8,                            .wuser
		.fpga2hps_buser        (fpga2hps_buser),                            //  output,    width = 8,                            .buser
		.fpga2hps_ruser        (fpga2hps_ruser),                            //  output,    width = 8,                            .ruser
		.emif_csr_axi_clk      (io96b0_csr_axi_clk_clk),                    //   input,    width = 1,          io96b0_csr_axi_clk.clk
		.emif_csr_axi_rst      (io96b0_csr_axi_rst_reset_n),                //   input,    width = 1,          io96b0_csr_axi_rst.reset_n
		.emif_mem_cfg_arready  (io96b0_csr_axi_arready),                    //   input,    width = 1,              io96b0_csr_axi.arready
		.emif_mem_cfg_awready  (io96b0_csr_axi_awready),                    //   input,    width = 1,                            .awready
		.emif_mem_cfg_bresp    (io96b0_csr_axi_bresp),                      //   input,    width = 2,                            .bresp
		.emif_mem_cfg_bvalid   (io96b0_csr_axi_bvalid),                     //   input,    width = 1,                            .bvalid
		.emif_mem_cfg_rdata    (io96b0_csr_axi_rdata),                      //   input,   width = 32,                            .rdata
		.emif_mem_cfg_rresp    (io96b0_csr_axi_rresp),                      //   input,    width = 2,                            .rresp
		.emif_mem_cfg_rvalid   (io96b0_csr_axi_rvalid),                     //   input,    width = 1,                            .rvalid
		.emif_mem_cfg_wready   (io96b0_csr_axi_wready),                     //   input,    width = 1,                            .wready
		.emif_mem_cfg_araddr   (io96b0_csr_axi_araddr),                     //  output,   width = 32,                            .araddr
		.emif_mem_cfg_arvalid  (io96b0_csr_axi_arvalid),                    //  output,    width = 1,                            .arvalid
		.emif_mem_cfg_awaddr   (io96b0_csr_axi_awaddr),                     //  output,   width = 32,                            .awaddr
		.emif_mem_cfg_awvalid  (io96b0_csr_axi_awvalid),                    //  output,    width = 1,                            .awvalid
		.emif_mem_cfg_bready   (io96b0_csr_axi_bready),                     //  output,    width = 1,                            .bready
		.emif_mem_cfg_rready   (io96b0_csr_axi_rready),                     //  output,    width = 1,                            .rready
		.emif_mem_cfg_wdata    (io96b0_csr_axi_wdata),                      //  output,   width = 32,                            .wdata
		.emif_mem_cfg_wstrb    (io96b0_csr_axi_wstrb),                      //  output,    width = 4,                            .wstrb
		.emif_mem_cfg_wvalid   (io96b0_csr_axi_wvalid),                     //  output,    width = 1,                            .wvalid
		.emif_mem_cfg_arprot   (io96b0_csr_axi_arprot),                     //  output,    width = 3,                            .arprot
		.emif_mem_cfg_awprot   (io96b0_csr_axi_awprot),                     //  output,    width = 3,                            .awprot
		.emif_ch0_axi_clk      (io96b0_ch0_axi_clk_clk),                    //   input,    width = 1,          io96b0_ch0_axi_clk.clk
		.emif_ch0_axi_rst      (io96b0_ch0_axi_rst_reset_n),                //   input,    width = 1,          io96b0_ch0_axi_rst.reset_n
		.emif0_arready         (io96b0_ch0_axi_arready),                    //   input,    width = 1,              io96b0_ch0_axi.arready
		.emif0_awready         (io96b0_ch0_axi_awready),                    //   input,    width = 1,                            .awready
		.emif0_bid             (io96b0_ch0_axi_bid),                        //   input,    width = 7,                            .bid
		.emif0_bresp           (io96b0_ch0_axi_bresp),                      //   input,    width = 2,                            .bresp
		.emif0_bvalid          (io96b0_ch0_axi_bvalid),                     //   input,    width = 1,                            .bvalid
		.emif0_rdata           (io96b0_ch0_axi_rdata),                      //   input,  width = 256,                            .rdata
		.emif0_rid             (io96b0_ch0_axi_rid),                        //   input,    width = 7,                            .rid
		.emif0_rlast           (io96b0_ch0_axi_rlast),                      //   input,    width = 1,                            .rlast
		.emif0_rresp           (io96b0_ch0_axi_rresp),                      //   input,    width = 2,                            .rresp
		.emif0_ruser           (io96b0_ch0_axi_ruser),                      //   input,   width = 32,                            .ruser
		.emif0_rvalid          (io96b0_ch0_axi_rvalid),                     //   input,    width = 1,                            .rvalid
		.emif0_wready          (io96b0_ch0_axi_wready),                     //   input,    width = 1,                            .wready
		.emif0_araddr          (io96b0_ch0_axi_araddr),                     //  output,   width = 44,                            .araddr
		.emif0_arburst         (io96b0_ch0_axi_arburst),                    //  output,    width = 2,                            .arburst
		.emif0_arid            (io96b0_ch0_axi_arid),                       //  output,    width = 7,                            .arid
		.emif0_arlen           (io96b0_ch0_axi_arlen),                      //  output,    width = 8,                            .arlen
		.emif0_arlock          (io96b0_ch0_axi_arlock),                     //  output,    width = 1,                            .arlock
		.emif0_arqos           (io96b0_ch0_axi_arqos),                      //  output,    width = 4,                            .arqos
		.emif0_arsize          (io96b0_ch0_axi_arsize),                     //  output,    width = 3,                            .arsize
		.emif0_aruser          (io96b0_ch0_axi_aruser),                     //  output,   width = 14,                            .aruser
		.emif0_arvalid         (io96b0_ch0_axi_arvalid),                    //  output,    width = 1,                            .arvalid
		.emif0_awaddr          (io96b0_ch0_axi_awaddr),                     //  output,   width = 44,                            .awaddr
		.emif0_awburst         (io96b0_ch0_axi_awburst),                    //  output,    width = 2,                            .awburst
		.emif0_awid            (io96b0_ch0_axi_awid),                       //  output,    width = 7,                            .awid
		.emif0_awlen           (io96b0_ch0_axi_awlen),                      //  output,    width = 8,                            .awlen
		.emif0_awlock          (io96b0_ch0_axi_awlock),                     //  output,    width = 1,                            .awlock
		.emif0_awqos           (io96b0_ch0_axi_awqos),                      //  output,    width = 4,                            .awqos
		.emif0_awsize          (io96b0_ch0_axi_awsize),                     //  output,    width = 3,                            .awsize
		.emif0_awuser          (io96b0_ch0_axi_awuser),                     //  output,   width = 14,                            .awuser
		.emif0_awvalid         (io96b0_ch0_axi_awvalid),                    //  output,    width = 1,                            .awvalid
		.emif0_bready          (io96b0_ch0_axi_bready),                     //  output,    width = 1,                            .bready
		.emif0_rready          (io96b0_ch0_axi_rready),                     //  output,    width = 1,                            .rready
		.emif0_wdata           (io96b0_ch0_axi_wdata),                      //  output,  width = 256,                            .wdata
		.emif0_wlast           (io96b0_ch0_axi_wlast),                      //  output,    width = 1,                            .wlast
		.emif0_wstrb           (io96b0_ch0_axi_wstrb),                      //  output,   width = 32,                            .wstrb
		.emif0_wuser           (io96b0_ch0_axi_wuser),                      //  output,   width = 32,                            .wuser
		.emif0_wvalid          (io96b0_ch0_axi_wvalid),                     //  output,    width = 1,                            .wvalid
		.emif0_arprot          (io96b0_ch0_axi_arprot),                     //  output,    width = 3,                            .arprot
		.emif0_awprot          (io96b0_ch0_axi_awprot),                     //  output,    width = 3,                            .awprot
		.mpfe2hps_clk          (sm_mpfe_mpfe_f2soc_interconnect_clk_clk),   //  output,    width = 1, mpfe_f2soc_interconnect_clk.clk
		.mpfe2hps_rst          (sm_mpfe_mpfe_f2soc_interconnect_rst_reset), //  output,    width = 1, mpfe_f2soc_interconnect_rst.reset
		.mpfe2hps_araddr       (sm_mpfe_mpfe_f2soc_interconnect_araddr),    //  output,   width = 40,     mpfe_f2soc_interconnect.araddr
		.mpfe2hps_arburst      (sm_mpfe_mpfe_f2soc_interconnect_arburst),   //  output,    width = 2,                            .arburst
		.mpfe2hps_arcache      (sm_mpfe_mpfe_f2soc_interconnect_arcache),   //  output,    width = 4,                            .arcache
		.mpfe2hps_arid         (sm_mpfe_mpfe_f2soc_interconnect_arid),      //  output,    width = 5,                            .arid
		.mpfe2hps_arlen        (sm_mpfe_mpfe_f2soc_interconnect_arlen),     //  output,    width = 8,                            .arlen
		.mpfe2hps_arlock       (sm_mpfe_mpfe_f2soc_interconnect_arlock),    //  output,    width = 1,                            .arlock
		.mpfe2hps_arprot       (sm_mpfe_mpfe_f2soc_interconnect_arprot),    //  output,    width = 3,                            .arprot
		.mpfe2hps_arqos        (sm_mpfe_mpfe_f2soc_interconnect_arqos),     //  output,    width = 4,                            .arqos
		.mpfe2hps_arready      (sm_mpfe_mpfe_f2soc_interconnect_arready),   //   input,    width = 1,                            .arready
		.mpfe2hps_arregion     (sm_mpfe_mpfe_f2soc_interconnect_arregion),  //  output,    width = 4,                            .arregion
		.mpfe2hps_arsize       (sm_mpfe_mpfe_f2soc_interconnect_arsize),    //  output,    width = 3,                            .arsize
		.mpfe2hps_aruser       (sm_mpfe_mpfe_f2soc_interconnect_aruser),    //  output,    width = 8,                            .aruser
		.mpfe2hps_arvalid      (sm_mpfe_mpfe_f2soc_interconnect_arvalid),   //  output,    width = 1,                            .arvalid
		.mpfe2hps_awaddr       (sm_mpfe_mpfe_f2soc_interconnect_awaddr),    //  output,   width = 40,                            .awaddr
		.mpfe2hps_awburst      (sm_mpfe_mpfe_f2soc_interconnect_awburst),   //  output,    width = 2,                            .awburst
		.mpfe2hps_awcache      (sm_mpfe_mpfe_f2soc_interconnect_awcache),   //  output,    width = 4,                            .awcache
		.mpfe2hps_awid         (sm_mpfe_mpfe_f2soc_interconnect_awid),      //  output,    width = 5,                            .awid
		.mpfe2hps_awlen        (sm_mpfe_mpfe_f2soc_interconnect_awlen),     //  output,    width = 8,                            .awlen
		.mpfe2hps_awlock       (sm_mpfe_mpfe_f2soc_interconnect_awlock),    //  output,    width = 1,                            .awlock
		.mpfe2hps_awprot       (sm_mpfe_mpfe_f2soc_interconnect_awprot),    //  output,    width = 3,                            .awprot
		.mpfe2hps_awqos        (sm_mpfe_mpfe_f2soc_interconnect_awqos),     //  output,    width = 4,                            .awqos
		.mpfe2hps_awready      (sm_mpfe_mpfe_f2soc_interconnect_awready),   //   input,    width = 1,                            .awready
		.mpfe2hps_awregion     (sm_mpfe_mpfe_f2soc_interconnect_awregion),  //  output,    width = 4,                            .awregion
		.mpfe2hps_awsize       (sm_mpfe_mpfe_f2soc_interconnect_awsize),    //  output,    width = 3,                            .awsize
		.mpfe2hps_awuser       (sm_mpfe_mpfe_f2soc_interconnect_awuser),    //  output,    width = 8,                            .awuser
		.mpfe2hps_awvalid      (sm_mpfe_mpfe_f2soc_interconnect_awvalid),   //  output,    width = 1,                            .awvalid
		.mpfe2hps_bid          (sm_mpfe_mpfe_f2soc_interconnect_bid),       //   input,    width = 5,                            .bid
		.mpfe2hps_bready       (sm_mpfe_mpfe_f2soc_interconnect_bready),    //  output,    width = 1,                            .bready
		.mpfe2hps_bresp        (sm_mpfe_mpfe_f2soc_interconnect_bresp),     //   input,    width = 2,                            .bresp
		.mpfe2hps_buser        (sm_mpfe_mpfe_f2soc_interconnect_buser),     //   input,    width = 8,                            .buser
		.mpfe2hps_bvalid       (sm_mpfe_mpfe_f2soc_interconnect_bvalid),    //   input,    width = 1,                            .bvalid
		.mpfe2hps_rdata        (sm_mpfe_mpfe_f2soc_interconnect_rdata),     //   input,  width = 256,                            .rdata
		.mpfe2hps_rid          (sm_mpfe_mpfe_f2soc_interconnect_rid),       //   input,    width = 5,                            .rid
		.mpfe2hps_rlast        (sm_mpfe_mpfe_f2soc_interconnect_rlast),     //   input,    width = 1,                            .rlast
		.mpfe2hps_rready       (sm_mpfe_mpfe_f2soc_interconnect_rready),    //  output,    width = 1,                            .rready
		.mpfe2hps_rresp        (sm_mpfe_mpfe_f2soc_interconnect_rresp),     //   input,    width = 2,                            .rresp
		.mpfe2hps_ruser        (sm_mpfe_mpfe_f2soc_interconnect_ruser),     //   input,    width = 8,                            .ruser
		.mpfe2hps_rvalid       (sm_mpfe_mpfe_f2soc_interconnect_rvalid),    //   input,    width = 1,                            .rvalid
		.mpfe2hps_wdata        (sm_mpfe_mpfe_f2soc_interconnect_wdata),     //  output,  width = 256,                            .wdata
		.mpfe2hps_wlast        (sm_mpfe_mpfe_f2soc_interconnect_wlast),     //  output,    width = 1,                            .wlast
		.mpfe2hps_wready       (sm_mpfe_mpfe_f2soc_interconnect_wready),    //   input,    width = 1,                            .wready
		.mpfe2hps_wstrb        (sm_mpfe_mpfe_f2soc_interconnect_wstrb),     //  output,   width = 32,                            .wstrb
		.mpfe2hps_wuser        (sm_mpfe_mpfe_f2soc_interconnect_wuser),     //  output,    width = 8,                            .wuser
		.mpfe2hps_wvalid       (sm_mpfe_mpfe_f2soc_interconnect_wvalid),    //  output,    width = 1,                            .wvalid
		.hps2mpfe_ccu_clk      (sm_hps_hps_ccu_interconnect_clk_clk),       //   input,    width = 1,   mpfe_ccu_interconnect_clk.clk
		.hps2mpfe_ccu_rst      (sm_hps_hps_ccu_interconnect_rst_reset),     //   input,    width = 1,   mpfe_ccu_interconnect_rst.reset
		.hps2mpfe_dmi0_araddr  (sm_hps_hps_dmi0_interconnect_araddr),       //   input,   width = 44,      mpfe_dmi0_interconnect.araddr
		.hps2mpfe_dmi0_arburst (sm_hps_hps_dmi0_interconnect_arburst),      //   input,    width = 2,                            .arburst
		.hps2mpfe_dmi0_arcache (sm_hps_hps_dmi0_interconnect_arcache),      //   input,    width = 4,                            .arcache
		.hps2mpfe_dmi0_arid    (sm_hps_hps_dmi0_interconnect_arid),         //   input,   width = 10,                            .arid
		.hps2mpfe_dmi0_arlen   (sm_hps_hps_dmi0_interconnect_arlen),        //   input,    width = 8,                            .arlen
		.hps2mpfe_dmi0_arlock  (sm_hps_hps_dmi0_interconnect_arlock),       //   input,    width = 1,                            .arlock
		.hps2mpfe_dmi0_arprot  (sm_hps_hps_dmi0_interconnect_arprot),       //   input,    width = 3,                            .arprot
		.hps2mpfe_dmi0_arqos   (sm_hps_hps_dmi0_interconnect_arqos),        //   input,    width = 4,                            .arqos
		.hps2mpfe_dmi0_arready (sm_hps_hps_dmi0_interconnect_arready),      //  output,    width = 1,                            .arready
		.hps2mpfe_dmi0_arsize  (sm_hps_hps_dmi0_interconnect_arsize),       //   input,    width = 3,                            .arsize
		.hps2mpfe_dmi0_aruser  (sm_hps_hps_dmi0_interconnect_aruser),       //   input,    width = 8,                            .aruser
		.hps2mpfe_dmi0_arvalid (sm_hps_hps_dmi0_interconnect_arvalid),      //   input,    width = 1,                            .arvalid
		.hps2mpfe_dmi0_awaddr  (sm_hps_hps_dmi0_interconnect_awaddr),       //   input,   width = 44,                            .awaddr
		.hps2mpfe_dmi0_awburst (sm_hps_hps_dmi0_interconnect_awburst),      //   input,    width = 2,                            .awburst
		.hps2mpfe_dmi0_awcache (sm_hps_hps_dmi0_interconnect_awcache),      //   input,    width = 4,                            .awcache
		.hps2mpfe_dmi0_awid    (sm_hps_hps_dmi0_interconnect_awid),         //   input,   width = 10,                            .awid
		.hps2mpfe_dmi0_awlen   (sm_hps_hps_dmi0_interconnect_awlen),        //   input,    width = 8,                            .awlen
		.hps2mpfe_dmi0_awlock  (sm_hps_hps_dmi0_interconnect_awlock),       //   input,    width = 1,                            .awlock
		.hps2mpfe_dmi0_awprot  (sm_hps_hps_dmi0_interconnect_awprot),       //   input,    width = 3,                            .awprot
		.hps2mpfe_dmi0_awqos   (sm_hps_hps_dmi0_interconnect_awqos),        //   input,    width = 4,                            .awqos
		.hps2mpfe_dmi0_awready (sm_hps_hps_dmi0_interconnect_awready),      //  output,    width = 1,                            .awready
		.hps2mpfe_dmi0_awsize  (sm_hps_hps_dmi0_interconnect_awsize),       //   input,    width = 3,                            .awsize
		.hps2mpfe_dmi0_awuser  (sm_hps_hps_dmi0_interconnect_awuser),       //   input,    width = 8,                            .awuser
		.hps2mpfe_dmi0_awvalid (sm_hps_hps_dmi0_interconnect_awvalid),      //   input,    width = 1,                            .awvalid
		.hps2mpfe_dmi0_bid     (sm_hps_hps_dmi0_interconnect_bid),          //  output,   width = 10,                            .bid
		.hps2mpfe_dmi0_bready  (sm_hps_hps_dmi0_interconnect_bready),       //   input,    width = 1,                            .bready
		.hps2mpfe_dmi0_bresp   (sm_hps_hps_dmi0_interconnect_bresp),        //  output,    width = 2,                            .bresp
		.hps2mpfe_dmi0_bvalid  (sm_hps_hps_dmi0_interconnect_bvalid),       //  output,    width = 1,                            .bvalid
		.hps2mpfe_dmi0_rdata   (sm_hps_hps_dmi0_interconnect_rdata),        //  output,  width = 256,                            .rdata
		.hps2mpfe_dmi0_rid     (sm_hps_hps_dmi0_interconnect_rid),          //  output,   width = 10,                            .rid
		.hps2mpfe_dmi0_rlast   (sm_hps_hps_dmi0_interconnect_rlast),        //  output,    width = 1,                            .rlast
		.hps2mpfe_dmi0_rready  (sm_hps_hps_dmi0_interconnect_rready),       //   input,    width = 1,                            .rready
		.hps2mpfe_dmi0_rresp   (sm_hps_hps_dmi0_interconnect_rresp),        //  output,    width = 2,                            .rresp
		.hps2mpfe_dmi0_rvalid  (sm_hps_hps_dmi0_interconnect_rvalid),       //  output,    width = 1,                            .rvalid
		.hps2mpfe_dmi0_wdata   (sm_hps_hps_dmi0_interconnect_wdata),        //   input,  width = 256,                            .wdata
		.hps2mpfe_dmi0_wlast   (sm_hps_hps_dmi0_interconnect_wlast),        //   input,    width = 1,                            .wlast
		.hps2mpfe_dmi0_wready  (sm_hps_hps_dmi0_interconnect_wready),       //  output,    width = 1,                            .wready
		.hps2mpfe_dmi0_wstrb   (sm_hps_hps_dmi0_interconnect_wstrb),        //   input,   width = 32,                            .wstrb
		.hps2mpfe_dmi0_wvalid  (sm_hps_hps_dmi0_interconnect_wvalid),       //   input,    width = 1,                            .wvalid
		.hps2mpfe_dmi1_araddr  (sm_hps_hps_dmi1_interconnect_araddr),       //   input,   width = 44,      mpfe_dmi1_interconnect.araddr
		.hps2mpfe_dmi1_arburst (sm_hps_hps_dmi1_interconnect_arburst),      //   input,    width = 2,                            .arburst
		.hps2mpfe_dmi1_arcache (sm_hps_hps_dmi1_interconnect_arcache),      //   input,    width = 4,                            .arcache
		.hps2mpfe_dmi1_arid    (sm_hps_hps_dmi1_interconnect_arid),         //   input,   width = 10,                            .arid
		.hps2mpfe_dmi1_arlen   (sm_hps_hps_dmi1_interconnect_arlen),        //   input,    width = 8,                            .arlen
		.hps2mpfe_dmi1_arlock  (sm_hps_hps_dmi1_interconnect_arlock),       //   input,    width = 1,                            .arlock
		.hps2mpfe_dmi1_arprot  (sm_hps_hps_dmi1_interconnect_arprot),       //   input,    width = 3,                            .arprot
		.hps2mpfe_dmi1_arqos   (sm_hps_hps_dmi1_interconnect_arqos),        //   input,    width = 4,                            .arqos
		.hps2mpfe_dmi1_arready (sm_hps_hps_dmi1_interconnect_arready),      //  output,    width = 1,                            .arready
		.hps2mpfe_dmi1_arsize  (sm_hps_hps_dmi1_interconnect_arsize),       //   input,    width = 3,                            .arsize
		.hps2mpfe_dmi1_aruser  (sm_hps_hps_dmi1_interconnect_aruser),       //   input,    width = 8,                            .aruser
		.hps2mpfe_dmi1_arvalid (sm_hps_hps_dmi1_interconnect_arvalid),      //   input,    width = 1,                            .arvalid
		.hps2mpfe_dmi1_awaddr  (sm_hps_hps_dmi1_interconnect_awaddr),       //   input,   width = 44,                            .awaddr
		.hps2mpfe_dmi1_awburst (sm_hps_hps_dmi1_interconnect_awburst),      //   input,    width = 2,                            .awburst
		.hps2mpfe_dmi1_awcache (sm_hps_hps_dmi1_interconnect_awcache),      //   input,    width = 4,                            .awcache
		.hps2mpfe_dmi1_awid    (sm_hps_hps_dmi1_interconnect_awid),         //   input,   width = 10,                            .awid
		.hps2mpfe_dmi1_awlen   (sm_hps_hps_dmi1_interconnect_awlen),        //   input,    width = 8,                            .awlen
		.hps2mpfe_dmi1_awlock  (sm_hps_hps_dmi1_interconnect_awlock),       //   input,    width = 1,                            .awlock
		.hps2mpfe_dmi1_awprot  (sm_hps_hps_dmi1_interconnect_awprot),       //   input,    width = 3,                            .awprot
		.hps2mpfe_dmi1_awqos   (sm_hps_hps_dmi1_interconnect_awqos),        //   input,    width = 4,                            .awqos
		.hps2mpfe_dmi1_awready (sm_hps_hps_dmi1_interconnect_awready),      //  output,    width = 1,                            .awready
		.hps2mpfe_dmi1_awsize  (sm_hps_hps_dmi1_interconnect_awsize),       //   input,    width = 3,                            .awsize
		.hps2mpfe_dmi1_awuser  (sm_hps_hps_dmi1_interconnect_awuser),       //   input,    width = 8,                            .awuser
		.hps2mpfe_dmi1_awvalid (sm_hps_hps_dmi1_interconnect_awvalid),      //   input,    width = 1,                            .awvalid
		.hps2mpfe_dmi1_bid     (sm_hps_hps_dmi1_interconnect_bid),          //  output,   width = 10,                            .bid
		.hps2mpfe_dmi1_bready  (sm_hps_hps_dmi1_interconnect_bready),       //   input,    width = 1,                            .bready
		.hps2mpfe_dmi1_bresp   (sm_hps_hps_dmi1_interconnect_bresp),        //  output,    width = 2,                            .bresp
		.hps2mpfe_dmi1_bvalid  (sm_hps_hps_dmi1_interconnect_bvalid),       //  output,    width = 1,                            .bvalid
		.hps2mpfe_dmi1_rdata   (sm_hps_hps_dmi1_interconnect_rdata),        //  output,  width = 256,                            .rdata
		.hps2mpfe_dmi1_rid     (sm_hps_hps_dmi1_interconnect_rid),          //  output,   width = 10,                            .rid
		.hps2mpfe_dmi1_rlast   (sm_hps_hps_dmi1_interconnect_rlast),        //  output,    width = 1,                            .rlast
		.hps2mpfe_dmi1_rready  (sm_hps_hps_dmi1_interconnect_rready),       //   input,    width = 1,                            .rready
		.hps2mpfe_dmi1_rresp   (sm_hps_hps_dmi1_interconnect_rresp),        //  output,    width = 2,                            .rresp
		.hps2mpfe_dmi1_rvalid  (sm_hps_hps_dmi1_interconnect_rvalid),       //  output,    width = 1,                            .rvalid
		.hps2mpfe_dmi1_wdata   (sm_hps_hps_dmi1_interconnect_wdata),        //   input,  width = 256,                            .wdata
		.hps2mpfe_dmi1_wlast   (sm_hps_hps_dmi1_interconnect_wlast),        //   input,    width = 1,                            .wlast
		.hps2mpfe_dmi1_wready  (sm_hps_hps_dmi1_interconnect_wready),       //  output,    width = 1,                            .wready
		.hps2mpfe_dmi1_wstrb   (sm_hps_hps_dmi1_interconnect_wstrb),        //   input,   width = 32,                            .wstrb
		.hps2mpfe_dmi1_wvalid  (sm_hps_hps_dmi1_interconnect_wvalid),       //   input,    width = 1,                            .wvalid
		.hps2mpfe_csr_araddr   (sm_hps_hps_s2mpfe_interconnect_araddr),     //   input,   width = 44,    mpfe_s2mpfe_interconnect.araddr
		.hps2mpfe_csr_arburst  (sm_hps_hps_s2mpfe_interconnect_arburst),    //   input,    width = 2,                            .arburst
		.hps2mpfe_csr_arcache  (sm_hps_hps_s2mpfe_interconnect_arcache),    //   input,    width = 4,                            .arcache
		.hps2mpfe_csr_arid     (sm_hps_hps_s2mpfe_interconnect_arid),       //   input,   width = 10,                            .arid
		.hps2mpfe_csr_arlen    (sm_hps_hps_s2mpfe_interconnect_arlen),      //   input,    width = 8,                            .arlen
		.hps2mpfe_csr_arlock   (sm_hps_hps_s2mpfe_interconnect_arlock),     //   input,    width = 1,                            .arlock
		.hps2mpfe_csr_arprot   (sm_hps_hps_s2mpfe_interconnect_arprot),     //   input,    width = 3,                            .arprot
		.hps2mpfe_csr_arready  (sm_hps_hps_s2mpfe_interconnect_arready),    //  output,    width = 1,                            .arready
		.hps2mpfe_csr_arsize   (sm_hps_hps_s2mpfe_interconnect_arsize),     //   input,    width = 3,                            .arsize
		.hps2mpfe_csr_aruser   (sm_hps_hps_s2mpfe_interconnect_aruser),     //   input,    width = 8,                            .aruser
		.hps2mpfe_csr_arvalid  (sm_hps_hps_s2mpfe_interconnect_arvalid),    //   input,    width = 1,                            .arvalid
		.hps2mpfe_csr_awaddr   (sm_hps_hps_s2mpfe_interconnect_awaddr),     //   input,   width = 44,                            .awaddr
		.hps2mpfe_csr_awburst  (sm_hps_hps_s2mpfe_interconnect_awburst),    //   input,    width = 2,                            .awburst
		.hps2mpfe_csr_awcache  (sm_hps_hps_s2mpfe_interconnect_awcache),    //   input,    width = 4,                            .awcache
		.hps2mpfe_csr_awid     (sm_hps_hps_s2mpfe_interconnect_awid),       //   input,   width = 10,                            .awid
		.hps2mpfe_csr_awlen    (sm_hps_hps_s2mpfe_interconnect_awlen),      //   input,    width = 8,                            .awlen
		.hps2mpfe_csr_awlock   (sm_hps_hps_s2mpfe_interconnect_awlock),     //   input,    width = 1,                            .awlock
		.hps2mpfe_csr_awprot   (sm_hps_hps_s2mpfe_interconnect_awprot),     //   input,    width = 3,                            .awprot
		.hps2mpfe_csr_awready  (sm_hps_hps_s2mpfe_interconnect_awready),    //  output,    width = 1,                            .awready
		.hps2mpfe_csr_awsize   (sm_hps_hps_s2mpfe_interconnect_awsize),     //   input,    width = 3,                            .awsize
		.hps2mpfe_csr_awuser   (sm_hps_hps_s2mpfe_interconnect_awuser),     //   input,    width = 8,                            .awuser
		.hps2mpfe_csr_awvalid  (sm_hps_hps_s2mpfe_interconnect_awvalid),    //   input,    width = 1,                            .awvalid
		.hps2mpfe_csr_bid      (sm_hps_hps_s2mpfe_interconnect_bid),        //  output,   width = 10,                            .bid
		.hps2mpfe_csr_bready   (sm_hps_hps_s2mpfe_interconnect_bready),     //   input,    width = 1,                            .bready
		.hps2mpfe_csr_bresp    (sm_hps_hps_s2mpfe_interconnect_bresp),      //  output,    width = 2,                            .bresp
		.hps2mpfe_csr_bvalid   (sm_hps_hps_s2mpfe_interconnect_bvalid),     //  output,    width = 1,                            .bvalid
		.hps2mpfe_csr_rdata    (sm_hps_hps_s2mpfe_interconnect_rdata),      //  output,   width = 64,                            .rdata
		.hps2mpfe_csr_rid      (sm_hps_hps_s2mpfe_interconnect_rid),        //  output,   width = 10,                            .rid
		.hps2mpfe_csr_rlast    (sm_hps_hps_s2mpfe_interconnect_rlast),      //  output,    width = 1,                            .rlast
		.hps2mpfe_csr_rready   (sm_hps_hps_s2mpfe_interconnect_rready),     //   input,    width = 1,                            .rready
		.hps2mpfe_csr_rresp    (sm_hps_hps_s2mpfe_interconnect_rresp),      //  output,    width = 2,                            .rresp
		.hps2mpfe_csr_rvalid   (sm_hps_hps_s2mpfe_interconnect_rvalid),     //  output,    width = 1,                            .rvalid
		.hps2mpfe_csr_wdata    (sm_hps_hps_s2mpfe_interconnect_wdata),      //   input,   width = 64,                            .wdata
		.hps2mpfe_csr_wlast    (sm_hps_hps_s2mpfe_interconnect_wlast),      //   input,    width = 1,                            .wlast
		.hps2mpfe_csr_wready   (sm_hps_hps_s2mpfe_interconnect_wready),     //  output,    width = 1,                            .wready
		.hps2mpfe_csr_wstrb    (sm_hps_hps_s2mpfe_interconnect_wstrb),      //   input,    width = 8,                            .wstrb
		.hps2mpfe_csr_wvalid   (sm_hps_hps_s2mpfe_interconnect_wvalid)      //   input,    width = 1,                            .wvalid
	);

endmodule
