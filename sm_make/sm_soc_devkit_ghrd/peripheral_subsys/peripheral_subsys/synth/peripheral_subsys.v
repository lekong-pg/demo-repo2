// peripheral_subsys.v

// Generated using ACDS version 23.4 79

`timescale 1 ps / 1 ps
module peripheral_subsys (
		input  wire [3:0]   button_pio_external_connection_export, // button_pio_external_connection.export
		output wire         button_pio_irq_irq,                    //                 button_pio_irq.irq
		input  wire [3:0]   dipsw_pio_external_connection_export,  //  dipsw_pio_external_connection.export
		output wire         dipsw_pio_irq_irq,                     //                  dipsw_pio_irq.irq
		input  wire [2:0]   led_pio_external_connection_in_port,   //    led_pio_external_connection.in_port
		output wire [2:0]   led_pio_external_connection_out_port,  //                               .out_port
		output wire         pb_cpu_0_s0_waitrequest,               //                    pb_cpu_0_s0.waitrequest
		output wire [31:0]  pb_cpu_0_s0_readdata,                  //                               .readdata
		output wire         pb_cpu_0_s0_readdatavalid,             //                               .readdatavalid
		input  wire [0:0]   pb_cpu_0_s0_burstcount,                //                               .burstcount
		input  wire [31:0]  pb_cpu_0_s0_writedata,                 //                               .writedata
		input  wire [22:0]  pb_cpu_0_s0_address,                   //                               .address
		input  wire         pb_cpu_0_s0_write,                     //                               .write
		input  wire         pb_cpu_0_s0_read,                      //                               .read
		input  wire [3:0]   pb_cpu_0_s0_byteenable,                //                               .byteenable
		input  wire         pb_cpu_0_s0_debugaccess,               //                               .debugaccess
		input  wire         clk_clk,                               //                            clk.clk
		input  wire         reset_reset_n,                         //                          reset.reset_n
		input  wire         ssgdma_host_clk_clk,                   //                ssgdma_host_clk.clk
		input  wire         ssgdma_host_aresetn_reset_n,           //            ssgdma_host_aresetn.reset_n
		input  wire         ssgdma_host_awready,                   //                    ssgdma_host.awready
		output wire         ssgdma_host_awvalid,                   //                               .awvalid
		output wire [63:0]  ssgdma_host_awaddr,                    //                               .awaddr
		output wire [7:0]   ssgdma_host_awlen,                     //                               .awlen
		output wire [1:0]   ssgdma_host_awburst,                   //                               .awburst
		output wire [2:0]   ssgdma_host_awsize,                    //                               .awsize
		output wire [2:0]   ssgdma_host_awprot,                    //                               .awprot
		output wire [4:0]   ssgdma_host_awid,                      //                               .awid
		output wire [3:0]   ssgdma_host_awcache,                   //                               .awcache
		input  wire         ssgdma_host_wready,                    //                               .wready
		output wire         ssgdma_host_wvalid,                    //                               .wvalid
		output wire [255:0] ssgdma_host_wdata,                     //                               .wdata
		output wire [31:0]  ssgdma_host_wstrb,                     //                               .wstrb
		output wire         ssgdma_host_wlast,                     //                               .wlast
		output wire         ssgdma_host_bready,                    //                               .bready
		input  wire         ssgdma_host_bvalid,                    //                               .bvalid
		input  wire [1:0]   ssgdma_host_bresp,                     //                               .bresp
		input  wire [4:0]   ssgdma_host_bid,                       //                               .bid
		input  wire         ssgdma_host_arready,                   //                               .arready
		output wire         ssgdma_host_arvalid,                   //                               .arvalid
		output wire [63:0]  ssgdma_host_araddr,                    //                               .araddr
		output wire [7:0]   ssgdma_host_arlen,                     //                               .arlen
		output wire [1:0]   ssgdma_host_arburst,                   //                               .arburst
		output wire [2:0]   ssgdma_host_arsize,                    //                               .arsize
		output wire [2:0]   ssgdma_host_arprot,                    //                               .arprot
		output wire [4:0]   ssgdma_host_arid,                      //                               .arid
		output wire [3:0]   ssgdma_host_arcache,                   //                               .arcache
		output wire         ssgdma_host_rready,                    //                               .rready
		input  wire         ssgdma_host_rvalid,                    //                               .rvalid
		input  wire [255:0] ssgdma_host_rdata,                     //                               .rdata
		input  wire         ssgdma_host_rlast,                     //                               .rlast
		input  wire [1:0]   ssgdma_host_rresp,                     //                               .rresp
		input  wire [4:0]   ssgdma_host_rid,                       //                               .rid
		output wire         ssgdma_interrupt_irq,                  //               ssgdma_interrupt.irq
		input  wire         ssgdma_h2d0_mm_clk_clk,                //             ssgdma_h2d0_mm_clk.clk
		input  wire         ssgdma_h2d0_mm_resetn_reset_n,         //          ssgdma_h2d0_mm_resetn.reset_n
		output wire         ssgdma_h2d0_awvalid,                   //                    ssgdma_h2d0.awvalid
		input  wire         ssgdma_h2d0_awready,                   //                               .awready
		output wire [63:0]  ssgdma_h2d0_awaddr,                    //                               .awaddr
		output wire [7:0]   ssgdma_h2d0_awlen,                     //                               .awlen
		output wire [1:0]   ssgdma_h2d0_awburst,                   //                               .awburst
		output wire [2:0]   ssgdma_h2d0_awsize,                    //                               .awsize
		output wire [2:0]   ssgdma_h2d0_awprot,                    //                               .awprot
		output wire [7:0]   ssgdma_h2d0_awid,                      //                               .awid
		output wire [3:0]   ssgdma_h2d0_awcache,                   //                               .awcache
		output wire         ssgdma_h2d0_wvalid,                    //                               .wvalid
		output wire         ssgdma_h2d0_wlast,                     //                               .wlast
		input  wire         ssgdma_h2d0_wready,                    //                               .wready
		output wire [63:0]  ssgdma_h2d0_wdata,                     //                               .wdata
		output wire [7:0]   ssgdma_h2d0_wstrb,                     //                               .wstrb
		input  wire         ssgdma_h2d0_bvalid,                    //                               .bvalid
		output wire         ssgdma_h2d0_bready,                    //                               .bready
		input  wire [1:0]   ssgdma_h2d0_bresp,                     //                               .bresp
		input  wire [7:0]   ssgdma_h2d0_bid,                       //                               .bid
		output wire         ssgdma_h2d0_arvalid,                   //                               .arvalid
		input  wire         ssgdma_h2d0_arready,                   //                               .arready
		output wire [63:0]  ssgdma_h2d0_araddr,                    //                               .araddr
		output wire [7:0]   ssgdma_h2d0_arlen,                     //                               .arlen
		output wire [1:0]   ssgdma_h2d0_arburst,                   //                               .arburst
		output wire [2:0]   ssgdma_h2d0_arsize,                    //                               .arsize
		output wire [2:0]   ssgdma_h2d0_arprot,                    //                               .arprot
		output wire [7:0]   ssgdma_h2d0_arid,                      //                               .arid
		output wire [3:0]   ssgdma_h2d0_arcache,                   //                               .arcache
		input  wire         ssgdma_h2d0_rvalid,                    //                               .rvalid
		input  wire         ssgdma_h2d0_rlast,                     //                               .rlast
		output wire         ssgdma_h2d0_rready,                    //                               .rready
		input  wire [63:0]  ssgdma_h2d0_rdata,                     //                               .rdata
		input  wire [1:0]   ssgdma_h2d0_rresp,                     //                               .rresp
		input  wire [7:0]   ssgdma_h2d0_rid                        //                               .rid
	);

	wire         periph_clk_out_clk_clk;                         // periph_clk:out_clk -> [button_pio:clk, dipsw_pio:clk, led_pio:clk, mm_interconnect_0:periph_clk_out_clk_clk, pb_cpu_0:clk, periph_rst_in:clk, ssgdma_0:axi_lite_clk, sysid:clock]
	wire         periph_rst_in_out_reset_reset;                  // periph_rst_in:out_reset_n -> [button_pio:reset_n, dipsw_pio:reset_n, led_pio:reset_n, mm_interconnect_0:pb_cpu_0_m0_translator_reset_reset_bridge_in_reset_reset, mm_interconnect_0:pb_cpu_0_reset_reset_bridge_in_reset_reset, pb_cpu_0:reset, ssgdma_0:axi_lite_areset_n, sysid:reset_n]
	wire         pb_cpu_0_m0_waitrequest;                        // mm_interconnect_0:pb_cpu_0_m0_waitrequest -> pb_cpu_0:m0_waitrequest
	wire  [31:0] pb_cpu_0_m0_readdata;                           // mm_interconnect_0:pb_cpu_0_m0_readdata -> pb_cpu_0:m0_readdata
	wire         pb_cpu_0_m0_debugaccess;                        // pb_cpu_0:m0_debugaccess -> mm_interconnect_0:pb_cpu_0_m0_debugaccess
	wire  [22:0] pb_cpu_0_m0_address;                            // pb_cpu_0:m0_address -> mm_interconnect_0:pb_cpu_0_m0_address
	wire         pb_cpu_0_m0_read;                               // pb_cpu_0:m0_read -> mm_interconnect_0:pb_cpu_0_m0_read
	wire   [3:0] pb_cpu_0_m0_byteenable;                         // pb_cpu_0:m0_byteenable -> mm_interconnect_0:pb_cpu_0_m0_byteenable
	wire         pb_cpu_0_m0_readdatavalid;                      // mm_interconnect_0:pb_cpu_0_m0_readdatavalid -> pb_cpu_0:m0_readdatavalid
	wire  [31:0] pb_cpu_0_m0_writedata;                          // pb_cpu_0:m0_writedata -> mm_interconnect_0:pb_cpu_0_m0_writedata
	wire         pb_cpu_0_m0_write;                              // pb_cpu_0:m0_write -> mm_interconnect_0:pb_cpu_0_m0_write
	wire   [0:0] pb_cpu_0_m0_burstcount;                         // pb_cpu_0:m0_burstcount -> mm_interconnect_0:pb_cpu_0_m0_burstcount
	wire  [31:0] mm_interconnect_0_sysid_control_slave_readdata; // sysid:readdata -> mm_interconnect_0:sysid_control_slave_readdata
	wire   [0:0] mm_interconnect_0_sysid_control_slave_address;  // mm_interconnect_0:sysid_control_slave_address -> sysid:address
	wire  [21:0] mm_interconnect_0_ssgdma_0_host_csr_awaddr;     // mm_interconnect_0:ssgdma_0_host_csr_awaddr -> ssgdma_0:host_lite_csr_awaddr
	wire   [1:0] mm_interconnect_0_ssgdma_0_host_csr_bresp;      // ssgdma_0:host_lite_csr_bresp -> mm_interconnect_0:ssgdma_0_host_csr_bresp
	wire         mm_interconnect_0_ssgdma_0_host_csr_arready;    // ssgdma_0:host_lite_csr_arready -> mm_interconnect_0:ssgdma_0_host_csr_arready
	wire  [31:0] mm_interconnect_0_ssgdma_0_host_csr_rdata;      // ssgdma_0:host_lite_csr_rdata -> mm_interconnect_0:ssgdma_0_host_csr_rdata
	wire   [3:0] mm_interconnect_0_ssgdma_0_host_csr_wstrb;      // mm_interconnect_0:ssgdma_0_host_csr_wstrb -> ssgdma_0:host_lite_csr_wstrb
	wire         mm_interconnect_0_ssgdma_0_host_csr_wready;     // ssgdma_0:host_lite_csr_wready -> mm_interconnect_0:ssgdma_0_host_csr_wready
	wire         mm_interconnect_0_ssgdma_0_host_csr_awready;    // ssgdma_0:host_lite_csr_awready -> mm_interconnect_0:ssgdma_0_host_csr_awready
	wire         mm_interconnect_0_ssgdma_0_host_csr_rready;     // mm_interconnect_0:ssgdma_0_host_csr_rready -> ssgdma_0:host_lite_csr_rready
	wire         mm_interconnect_0_ssgdma_0_host_csr_bready;     // mm_interconnect_0:ssgdma_0_host_csr_bready -> ssgdma_0:host_lite_csr_bready
	wire         mm_interconnect_0_ssgdma_0_host_csr_wvalid;     // mm_interconnect_0:ssgdma_0_host_csr_wvalid -> ssgdma_0:host_lite_csr_wvalid
	wire  [21:0] mm_interconnect_0_ssgdma_0_host_csr_araddr;     // mm_interconnect_0:ssgdma_0_host_csr_araddr -> ssgdma_0:host_lite_csr_araddr
	wire   [2:0] mm_interconnect_0_ssgdma_0_host_csr_arprot;     // mm_interconnect_0:ssgdma_0_host_csr_arprot -> ssgdma_0:host_lite_csr_arprot
	wire   [1:0] mm_interconnect_0_ssgdma_0_host_csr_rresp;      // ssgdma_0:host_lite_csr_rresp -> mm_interconnect_0:ssgdma_0_host_csr_rresp
	wire   [2:0] mm_interconnect_0_ssgdma_0_host_csr_awprot;     // mm_interconnect_0:ssgdma_0_host_csr_awprot -> ssgdma_0:host_lite_csr_awprot
	wire  [31:0] mm_interconnect_0_ssgdma_0_host_csr_wdata;      // mm_interconnect_0:ssgdma_0_host_csr_wdata -> ssgdma_0:host_lite_csr_wdata
	wire         mm_interconnect_0_ssgdma_0_host_csr_arvalid;    // mm_interconnect_0:ssgdma_0_host_csr_arvalid -> ssgdma_0:host_lite_csr_arvalid
	wire         mm_interconnect_0_ssgdma_0_host_csr_bvalid;     // ssgdma_0:host_lite_csr_bvalid -> mm_interconnect_0:ssgdma_0_host_csr_bvalid
	wire         mm_interconnect_0_ssgdma_0_host_csr_awvalid;    // mm_interconnect_0:ssgdma_0_host_csr_awvalid -> ssgdma_0:host_lite_csr_awvalid
	wire         mm_interconnect_0_ssgdma_0_host_csr_rvalid;     // ssgdma_0:host_lite_csr_rvalid -> mm_interconnect_0:ssgdma_0_host_csr_rvalid
	wire         mm_interconnect_0_led_pio_s1_chipselect;        // mm_interconnect_0:led_pio_s1_chipselect -> led_pio:chipselect
	wire  [31:0] mm_interconnect_0_led_pio_s1_readdata;          // led_pio:readdata -> mm_interconnect_0:led_pio_s1_readdata
	wire   [1:0] mm_interconnect_0_led_pio_s1_address;           // mm_interconnect_0:led_pio_s1_address -> led_pio:address
	wire         mm_interconnect_0_led_pio_s1_write;             // mm_interconnect_0:led_pio_s1_write -> led_pio:write_n
	wire  [31:0] mm_interconnect_0_led_pio_s1_writedata;         // mm_interconnect_0:led_pio_s1_writedata -> led_pio:writedata
	wire         mm_interconnect_0_dipsw_pio_s1_chipselect;      // mm_interconnect_0:dipsw_pio_s1_chipselect -> dipsw_pio:chipselect
	wire  [31:0] mm_interconnect_0_dipsw_pio_s1_readdata;        // dipsw_pio:readdata -> mm_interconnect_0:dipsw_pio_s1_readdata
	wire   [1:0] mm_interconnect_0_dipsw_pio_s1_address;         // mm_interconnect_0:dipsw_pio_s1_address -> dipsw_pio:address
	wire         mm_interconnect_0_dipsw_pio_s1_write;           // mm_interconnect_0:dipsw_pio_s1_write -> dipsw_pio:write_n
	wire  [31:0] mm_interconnect_0_dipsw_pio_s1_writedata;       // mm_interconnect_0:dipsw_pio_s1_writedata -> dipsw_pio:writedata
	wire         mm_interconnect_0_button_pio_s1_chipselect;     // mm_interconnect_0:button_pio_s1_chipselect -> button_pio:chipselect
	wire  [31:0] mm_interconnect_0_button_pio_s1_readdata;       // button_pio:readdata -> mm_interconnect_0:button_pio_s1_readdata
	wire   [1:0] mm_interconnect_0_button_pio_s1_address;        // mm_interconnect_0:button_pio_s1_address -> button_pio:address
	wire         mm_interconnect_0_button_pio_s1_write;          // mm_interconnect_0:button_pio_s1_write -> button_pio:write_n
	wire  [31:0] mm_interconnect_0_button_pio_s1_writedata;      // mm_interconnect_0:button_pio_s1_writedata -> button_pio:writedata

	button_pio button_pio (
		.clk        (periph_clk_out_clk_clk),                     //   input,   width = 1,                 clk.clk
		.reset_n    (periph_rst_in_out_reset_reset),              //   input,   width = 1,               reset.reset_n
		.address    (mm_interconnect_0_button_pio_s1_address),    //   input,   width = 2,                  s1.address
		.write_n    (~mm_interconnect_0_button_pio_s1_write),     //   input,   width = 1,                    .write_n
		.writedata  (mm_interconnect_0_button_pio_s1_writedata),  //   input,  width = 32,                    .writedata
		.chipselect (mm_interconnect_0_button_pio_s1_chipselect), //   input,   width = 1,                    .chipselect
		.readdata   (mm_interconnect_0_button_pio_s1_readdata),   //  output,  width = 32,                    .readdata
		.in_port    (button_pio_external_connection_export),      //   input,   width = 4, external_connection.export
		.irq        (button_pio_irq_irq)                          //  output,   width = 1,                 irq.irq
	);

	dipsw_pio dipsw_pio (
		.clk        (periph_clk_out_clk_clk),                    //   input,   width = 1,                 clk.clk
		.reset_n    (periph_rst_in_out_reset_reset),             //   input,   width = 1,               reset.reset_n
		.address    (mm_interconnect_0_dipsw_pio_s1_address),    //   input,   width = 2,                  s1.address
		.write_n    (~mm_interconnect_0_dipsw_pio_s1_write),     //   input,   width = 1,                    .write_n
		.writedata  (mm_interconnect_0_dipsw_pio_s1_writedata),  //   input,  width = 32,                    .writedata
		.chipselect (mm_interconnect_0_dipsw_pio_s1_chipselect), //   input,   width = 1,                    .chipselect
		.readdata   (mm_interconnect_0_dipsw_pio_s1_readdata),   //  output,  width = 32,                    .readdata
		.in_port    (dipsw_pio_external_connection_export),      //   input,   width = 4, external_connection.export
		.irq        (dipsw_pio_irq_irq)                          //  output,   width = 1,                 irq.irq
	);

	led_pio led_pio (
		.clk        (periph_clk_out_clk_clk),                  //   input,   width = 1,                 clk.clk
		.reset_n    (periph_rst_in_out_reset_reset),           //   input,   width = 1,               reset.reset_n
		.address    (mm_interconnect_0_led_pio_s1_address),    //   input,   width = 2,                  s1.address
		.write_n    (~mm_interconnect_0_led_pio_s1_write),     //   input,   width = 1,                    .write_n
		.writedata  (mm_interconnect_0_led_pio_s1_writedata),  //   input,  width = 32,                    .writedata
		.chipselect (mm_interconnect_0_led_pio_s1_chipselect), //   input,   width = 1,                    .chipselect
		.readdata   (mm_interconnect_0_led_pio_s1_readdata),   //  output,  width = 32,                    .readdata
		.in_port    (led_pio_external_connection_in_port),     //   input,   width = 3, external_connection.in_port
		.out_port   (led_pio_external_connection_out_port)     //  output,   width = 3,                    .out_port
	);

	pb_cpu_0 pb_cpu_0 (
		.clk              (periph_clk_out_clk_clk),         //   input,   width = 1,   clk.clk
		.reset            (~periph_rst_in_out_reset_reset), //   input,   width = 1, reset.reset
		.s0_waitrequest   (pb_cpu_0_s0_waitrequest),        //  output,   width = 1,    s0.waitrequest
		.s0_readdata      (pb_cpu_0_s0_readdata),           //  output,  width = 32,      .readdata
		.s0_readdatavalid (pb_cpu_0_s0_readdatavalid),      //  output,   width = 1,      .readdatavalid
		.s0_burstcount    (pb_cpu_0_s0_burstcount),         //   input,   width = 1,      .burstcount
		.s0_writedata     (pb_cpu_0_s0_writedata),          //   input,  width = 32,      .writedata
		.s0_address       (pb_cpu_0_s0_address),            //   input,  width = 23,      .address
		.s0_write         (pb_cpu_0_s0_write),              //   input,   width = 1,      .write
		.s0_read          (pb_cpu_0_s0_read),               //   input,   width = 1,      .read
		.s0_byteenable    (pb_cpu_0_s0_byteenable),         //   input,   width = 4,      .byteenable
		.s0_debugaccess   (pb_cpu_0_s0_debugaccess),        //   input,   width = 1,      .debugaccess
		.m0_waitrequest   (pb_cpu_0_m0_waitrequest),        //   input,   width = 1,    m0.waitrequest
		.m0_readdata      (pb_cpu_0_m0_readdata),           //   input,  width = 32,      .readdata
		.m0_readdatavalid (pb_cpu_0_m0_readdatavalid),      //   input,   width = 1,      .readdatavalid
		.m0_burstcount    (pb_cpu_0_m0_burstcount),         //  output,   width = 1,      .burstcount
		.m0_writedata     (pb_cpu_0_m0_writedata),          //  output,  width = 32,      .writedata
		.m0_address       (pb_cpu_0_m0_address),            //  output,  width = 23,      .address
		.m0_write         (pb_cpu_0_m0_write),              //  output,   width = 1,      .write
		.m0_read          (pb_cpu_0_m0_read),               //  output,   width = 1,      .read
		.m0_byteenable    (pb_cpu_0_m0_byteenable),         //  output,   width = 4,      .byteenable
		.m0_debugaccess   (pb_cpu_0_m0_debugaccess)         //  output,   width = 1,      .debugaccess
	);

	periph_clk periph_clk (
		.in_clk  (clk_clk),                //   input,  width = 1,  in_clk.clk
		.out_clk (periph_clk_out_clk_clk)  //  output,  width = 1, out_clk.clk
	);

	periph_rst_in periph_rst_in (
		.clk         (periph_clk_out_clk_clk),        //   input,  width = 1,       clk.clk
		.in_reset_n  (reset_reset_n),                 //   input,  width = 1,  in_reset.reset_n
		.out_reset_n (periph_rst_in_out_reset_reset)  //  output,  width = 1, out_reset.reset_n
	);

	ssgdma_0 ssgdma_0 (
		.axi_lite_clk          (periph_clk_out_clk_clk),                      //   input,    width = 1,       axi_lite_clk.clk
		.axi_lite_areset_n     (periph_rst_in_out_reset_reset),               //   input,    width = 1,  axi_lite_areset_n.reset_n
		.host_clk              (ssgdma_host_clk_clk),                         //   input,    width = 1,           host_clk.clk
		.host_aresetn          (ssgdma_host_aresetn_reset_n),                 //   input,    width = 1,       host_aresetn.reset_n
		.app_reset_status_n    (),                                            //  output,    width = 1, app_reset_status_n.reset_n
		.host_awready          (ssgdma_host_awready),                         //   input,    width = 1,               host.awready
		.host_awvalid          (ssgdma_host_awvalid),                         //  output,    width = 1,                   .awvalid
		.host_awaddr           (ssgdma_host_awaddr),                          //  output,   width = 64,                   .awaddr
		.host_awlen            (ssgdma_host_awlen),                           //  output,    width = 8,                   .awlen
		.host_awburst          (ssgdma_host_awburst),                         //  output,    width = 2,                   .awburst
		.host_awsize           (ssgdma_host_awsize),                          //  output,    width = 3,                   .awsize
		.host_awprot           (ssgdma_host_awprot),                          //  output,    width = 3,                   .awprot
		.host_awid             (ssgdma_host_awid),                            //  output,    width = 5,                   .awid
		.host_awcache          (ssgdma_host_awcache),                         //  output,    width = 4,                   .awcache
		.host_wready           (ssgdma_host_wready),                          //   input,    width = 1,                   .wready
		.host_wvalid           (ssgdma_host_wvalid),                          //  output,    width = 1,                   .wvalid
		.host_wdata            (ssgdma_host_wdata),                           //  output,  width = 256,                   .wdata
		.host_wstrb            (ssgdma_host_wstrb),                           //  output,   width = 32,                   .wstrb
		.host_wlast            (ssgdma_host_wlast),                           //  output,    width = 1,                   .wlast
		.host_bready           (ssgdma_host_bready),                          //  output,    width = 1,                   .bready
		.host_bvalid           (ssgdma_host_bvalid),                          //   input,    width = 1,                   .bvalid
		.host_bresp            (ssgdma_host_bresp),                           //   input,    width = 2,                   .bresp
		.host_bid              (ssgdma_host_bid),                             //   input,    width = 5,                   .bid
		.host_arready          (ssgdma_host_arready),                         //   input,    width = 1,                   .arready
		.host_arvalid          (ssgdma_host_arvalid),                         //  output,    width = 1,                   .arvalid
		.host_araddr           (ssgdma_host_araddr),                          //  output,   width = 64,                   .araddr
		.host_arlen            (ssgdma_host_arlen),                           //  output,    width = 8,                   .arlen
		.host_arburst          (ssgdma_host_arburst),                         //  output,    width = 2,                   .arburst
		.host_arsize           (ssgdma_host_arsize),                          //  output,    width = 3,                   .arsize
		.host_arprot           (ssgdma_host_arprot),                          //  output,    width = 3,                   .arprot
		.host_arid             (ssgdma_host_arid),                            //  output,    width = 5,                   .arid
		.host_arcache          (ssgdma_host_arcache),                         //  output,    width = 4,                   .arcache
		.host_rready           (ssgdma_host_rready),                          //  output,    width = 1,                   .rready
		.host_rvalid           (ssgdma_host_rvalid),                          //   input,    width = 1,                   .rvalid
		.host_rdata            (ssgdma_host_rdata),                           //   input,  width = 256,                   .rdata
		.host_rlast            (ssgdma_host_rlast),                           //   input,    width = 1,                   .rlast
		.host_rresp            (ssgdma_host_rresp),                           //   input,    width = 2,                   .rresp
		.host_rid              (ssgdma_host_rid),                             //   input,    width = 5,                   .rid
		.host_lite_csr_awready (mm_interconnect_0_ssgdma_0_host_csr_awready), //  output,    width = 1,           host_csr.awready
		.host_lite_csr_awvalid (mm_interconnect_0_ssgdma_0_host_csr_awvalid), //   input,    width = 1,                   .awvalid
		.host_lite_csr_awaddr  (mm_interconnect_0_ssgdma_0_host_csr_awaddr),  //   input,   width = 22,                   .awaddr
		.host_lite_csr_awprot  (mm_interconnect_0_ssgdma_0_host_csr_awprot),  //   input,    width = 3,                   .awprot
		.host_lite_csr_wready  (mm_interconnect_0_ssgdma_0_host_csr_wready),  //  output,    width = 1,                   .wready
		.host_lite_csr_wvalid  (mm_interconnect_0_ssgdma_0_host_csr_wvalid),  //   input,    width = 1,                   .wvalid
		.host_lite_csr_wdata   (mm_interconnect_0_ssgdma_0_host_csr_wdata),   //   input,   width = 32,                   .wdata
		.host_lite_csr_wstrb   (mm_interconnect_0_ssgdma_0_host_csr_wstrb),   //   input,    width = 4,                   .wstrb
		.host_lite_csr_bready  (mm_interconnect_0_ssgdma_0_host_csr_bready),  //   input,    width = 1,                   .bready
		.host_lite_csr_bvalid  (mm_interconnect_0_ssgdma_0_host_csr_bvalid),  //  output,    width = 1,                   .bvalid
		.host_lite_csr_bresp   (mm_interconnect_0_ssgdma_0_host_csr_bresp),   //  output,    width = 2,                   .bresp
		.host_lite_csr_arready (mm_interconnect_0_ssgdma_0_host_csr_arready), //  output,    width = 1,                   .arready
		.host_lite_csr_arvalid (mm_interconnect_0_ssgdma_0_host_csr_arvalid), //   input,    width = 1,                   .arvalid
		.host_lite_csr_araddr  (mm_interconnect_0_ssgdma_0_host_csr_araddr),  //   input,   width = 22,                   .araddr
		.host_lite_csr_arprot  (mm_interconnect_0_ssgdma_0_host_csr_arprot),  //   input,    width = 3,                   .arprot
		.host_lite_csr_rready  (mm_interconnect_0_ssgdma_0_host_csr_rready),  //   input,    width = 1,                   .rready
		.host_lite_csr_rvalid  (mm_interconnect_0_ssgdma_0_host_csr_rvalid),  //  output,    width = 1,                   .rvalid
		.host_lite_csr_rdata   (mm_interconnect_0_ssgdma_0_host_csr_rdata),   //  output,   width = 32,                   .rdata
		.host_lite_csr_rresp   (mm_interconnect_0_ssgdma_0_host_csr_rresp),   //  output,    width = 2,                   .rresp
		.irq                   (ssgdma_interrupt_irq),                        //  output,    width = 1,          interrupt.irq
		.h2d0_mm_clk           (ssgdma_h2d0_mm_clk_clk),                      //   input,    width = 1,        h2d0_mm_clk.clk
		.h2d0_mm_resetn        (ssgdma_h2d0_mm_resetn_reset_n),               //   input,    width = 1,     h2d0_mm_resetn.reset_n
		.h2d0_awvalid          (ssgdma_h2d0_awvalid),                         //  output,    width = 1,               h2d0.awvalid
		.h2d0_awready          (ssgdma_h2d0_awready),                         //   input,    width = 1,                   .awready
		.h2d0_awaddr           (ssgdma_h2d0_awaddr),                          //  output,   width = 64,                   .awaddr
		.h2d0_awlen            (ssgdma_h2d0_awlen),                           //  output,    width = 8,                   .awlen
		.h2d0_awburst          (ssgdma_h2d0_awburst),                         //  output,    width = 2,                   .awburst
		.h2d0_awsize           (ssgdma_h2d0_awsize),                          //  output,    width = 3,                   .awsize
		.h2d0_awprot           (ssgdma_h2d0_awprot),                          //  output,    width = 3,                   .awprot
		.h2d0_awid             (ssgdma_h2d0_awid),                            //  output,    width = 8,                   .awid
		.h2d0_awcache          (ssgdma_h2d0_awcache),                         //  output,    width = 4,                   .awcache
		.h2d0_wvalid           (ssgdma_h2d0_wvalid),                          //  output,    width = 1,                   .wvalid
		.h2d0_wlast            (ssgdma_h2d0_wlast),                           //  output,    width = 1,                   .wlast
		.h2d0_wready           (ssgdma_h2d0_wready),                          //   input,    width = 1,                   .wready
		.h2d0_wdata            (ssgdma_h2d0_wdata),                           //  output,   width = 64,                   .wdata
		.h2d0_wstrb            (ssgdma_h2d0_wstrb),                           //  output,    width = 8,                   .wstrb
		.h2d0_bvalid           (ssgdma_h2d0_bvalid),                          //   input,    width = 1,                   .bvalid
		.h2d0_bready           (ssgdma_h2d0_bready),                          //  output,    width = 1,                   .bready
		.h2d0_bresp            (ssgdma_h2d0_bresp),                           //   input,    width = 2,                   .bresp
		.h2d0_bid              (ssgdma_h2d0_bid),                             //   input,    width = 8,                   .bid
		.h2d0_arvalid          (ssgdma_h2d0_arvalid),                         //  output,    width = 1,                   .arvalid
		.h2d0_arready          (ssgdma_h2d0_arready),                         //   input,    width = 1,                   .arready
		.h2d0_araddr           (ssgdma_h2d0_araddr),                          //  output,   width = 64,                   .araddr
		.h2d0_arlen            (ssgdma_h2d0_arlen),                           //  output,    width = 8,                   .arlen
		.h2d0_arburst          (ssgdma_h2d0_arburst),                         //  output,    width = 2,                   .arburst
		.h2d0_arsize           (ssgdma_h2d0_arsize),                          //  output,    width = 3,                   .arsize
		.h2d0_arprot           (ssgdma_h2d0_arprot),                          //  output,    width = 3,                   .arprot
		.h2d0_arid             (ssgdma_h2d0_arid),                            //  output,    width = 8,                   .arid
		.h2d0_arcache          (ssgdma_h2d0_arcache),                         //  output,    width = 4,                   .arcache
		.h2d0_rvalid           (ssgdma_h2d0_rvalid),                          //   input,    width = 1,                   .rvalid
		.h2d0_rlast            (ssgdma_h2d0_rlast),                           //   input,    width = 1,                   .rlast
		.h2d0_rready           (ssgdma_h2d0_rready),                          //  output,    width = 1,                   .rready
		.h2d0_rdata            (ssgdma_h2d0_rdata),                           //   input,   width = 64,                   .rdata
		.h2d0_rresp            (ssgdma_h2d0_rresp),                           //   input,    width = 2,                   .rresp
		.h2d0_rid              (ssgdma_h2d0_rid)                              //   input,    width = 8,                   .rid
	);

	sysid sysid (
		.clock    (periph_clk_out_clk_clk),                         //   input,   width = 1,           clk.clk
		.reset_n  (periph_rst_in_out_reset_reset),                  //   input,   width = 1,         reset.reset_n
		.readdata (mm_interconnect_0_sysid_control_slave_readdata), //  output,  width = 32, control_slave.readdata
		.address  (mm_interconnect_0_sysid_control_slave_address)   //   input,   width = 1,              .address
	);

	peripheral_subsys_altera_mm_interconnect_1920_rkcqb5a mm_interconnect_0 (
		.pb_cpu_0_m0_address                                      (pb_cpu_0_m0_address),                            //   input,  width = 23,                                        pb_cpu_0_m0.address
		.pb_cpu_0_m0_waitrequest                                  (pb_cpu_0_m0_waitrequest),                        //  output,   width = 1,                                                   .waitrequest
		.pb_cpu_0_m0_burstcount                                   (pb_cpu_0_m0_burstcount),                         //   input,   width = 1,                                                   .burstcount
		.pb_cpu_0_m0_byteenable                                   (pb_cpu_0_m0_byteenable),                         //   input,   width = 4,                                                   .byteenable
		.pb_cpu_0_m0_read                                         (pb_cpu_0_m0_read),                               //   input,   width = 1,                                                   .read
		.pb_cpu_0_m0_readdata                                     (pb_cpu_0_m0_readdata),                           //  output,  width = 32,                                                   .readdata
		.pb_cpu_0_m0_readdatavalid                                (pb_cpu_0_m0_readdatavalid),                      //  output,   width = 1,                                                   .readdatavalid
		.pb_cpu_0_m0_write                                        (pb_cpu_0_m0_write),                              //   input,   width = 1,                                                   .write
		.pb_cpu_0_m0_writedata                                    (pb_cpu_0_m0_writedata),                          //   input,  width = 32,                                                   .writedata
		.pb_cpu_0_m0_debugaccess                                  (pb_cpu_0_m0_debugaccess),                        //   input,   width = 1,                                                   .debugaccess
		.sysid_control_slave_address                              (mm_interconnect_0_sysid_control_slave_address),  //  output,   width = 1,                                sysid_control_slave.address
		.sysid_control_slave_readdata                             (mm_interconnect_0_sysid_control_slave_readdata), //   input,  width = 32,                                                   .readdata
		.led_pio_s1_address                                       (mm_interconnect_0_led_pio_s1_address),           //  output,   width = 2,                                         led_pio_s1.address
		.led_pio_s1_write                                         (mm_interconnect_0_led_pio_s1_write),             //  output,   width = 1,                                                   .write
		.led_pio_s1_readdata                                      (mm_interconnect_0_led_pio_s1_readdata),          //   input,  width = 32,                                                   .readdata
		.led_pio_s1_writedata                                     (mm_interconnect_0_led_pio_s1_writedata),         //  output,  width = 32,                                                   .writedata
		.led_pio_s1_chipselect                                    (mm_interconnect_0_led_pio_s1_chipselect),        //  output,   width = 1,                                                   .chipselect
		.dipsw_pio_s1_address                                     (mm_interconnect_0_dipsw_pio_s1_address),         //  output,   width = 2,                                       dipsw_pio_s1.address
		.dipsw_pio_s1_write                                       (mm_interconnect_0_dipsw_pio_s1_write),           //  output,   width = 1,                                                   .write
		.dipsw_pio_s1_readdata                                    (mm_interconnect_0_dipsw_pio_s1_readdata),        //   input,  width = 32,                                                   .readdata
		.dipsw_pio_s1_writedata                                   (mm_interconnect_0_dipsw_pio_s1_writedata),       //  output,  width = 32,                                                   .writedata
		.dipsw_pio_s1_chipselect                                  (mm_interconnect_0_dipsw_pio_s1_chipselect),      //  output,   width = 1,                                                   .chipselect
		.button_pio_s1_address                                    (mm_interconnect_0_button_pio_s1_address),        //  output,   width = 2,                                      button_pio_s1.address
		.button_pio_s1_write                                      (mm_interconnect_0_button_pio_s1_write),          //  output,   width = 1,                                                   .write
		.button_pio_s1_readdata                                   (mm_interconnect_0_button_pio_s1_readdata),       //   input,  width = 32,                                                   .readdata
		.button_pio_s1_writedata                                  (mm_interconnect_0_button_pio_s1_writedata),      //  output,  width = 32,                                                   .writedata
		.button_pio_s1_chipselect                                 (mm_interconnect_0_button_pio_s1_chipselect),     //  output,   width = 1,                                                   .chipselect
		.ssgdma_0_host_csr_awaddr                                 (mm_interconnect_0_ssgdma_0_host_csr_awaddr),     //  output,  width = 22,                                  ssgdma_0_host_csr.awaddr
		.ssgdma_0_host_csr_awprot                                 (mm_interconnect_0_ssgdma_0_host_csr_awprot),     //  output,   width = 3,                                                   .awprot
		.ssgdma_0_host_csr_awvalid                                (mm_interconnect_0_ssgdma_0_host_csr_awvalid),    //  output,   width = 1,                                                   .awvalid
		.ssgdma_0_host_csr_awready                                (mm_interconnect_0_ssgdma_0_host_csr_awready),    //   input,   width = 1,                                                   .awready
		.ssgdma_0_host_csr_wdata                                  (mm_interconnect_0_ssgdma_0_host_csr_wdata),      //  output,  width = 32,                                                   .wdata
		.ssgdma_0_host_csr_wstrb                                  (mm_interconnect_0_ssgdma_0_host_csr_wstrb),      //  output,   width = 4,                                                   .wstrb
		.ssgdma_0_host_csr_wvalid                                 (mm_interconnect_0_ssgdma_0_host_csr_wvalid),     //  output,   width = 1,                                                   .wvalid
		.ssgdma_0_host_csr_wready                                 (mm_interconnect_0_ssgdma_0_host_csr_wready),     //   input,   width = 1,                                                   .wready
		.ssgdma_0_host_csr_bresp                                  (mm_interconnect_0_ssgdma_0_host_csr_bresp),      //   input,   width = 2,                                                   .bresp
		.ssgdma_0_host_csr_bvalid                                 (mm_interconnect_0_ssgdma_0_host_csr_bvalid),     //   input,   width = 1,                                                   .bvalid
		.ssgdma_0_host_csr_bready                                 (mm_interconnect_0_ssgdma_0_host_csr_bready),     //  output,   width = 1,                                                   .bready
		.ssgdma_0_host_csr_araddr                                 (mm_interconnect_0_ssgdma_0_host_csr_araddr),     //  output,  width = 22,                                                   .araddr
		.ssgdma_0_host_csr_arprot                                 (mm_interconnect_0_ssgdma_0_host_csr_arprot),     //  output,   width = 3,                                                   .arprot
		.ssgdma_0_host_csr_arvalid                                (mm_interconnect_0_ssgdma_0_host_csr_arvalid),    //  output,   width = 1,                                                   .arvalid
		.ssgdma_0_host_csr_arready                                (mm_interconnect_0_ssgdma_0_host_csr_arready),    //   input,   width = 1,                                                   .arready
		.ssgdma_0_host_csr_rdata                                  (mm_interconnect_0_ssgdma_0_host_csr_rdata),      //   input,  width = 32,                                                   .rdata
		.ssgdma_0_host_csr_rresp                                  (mm_interconnect_0_ssgdma_0_host_csr_rresp),      //   input,   width = 2,                                                   .rresp
		.ssgdma_0_host_csr_rvalid                                 (mm_interconnect_0_ssgdma_0_host_csr_rvalid),     //   input,   width = 1,                                                   .rvalid
		.ssgdma_0_host_csr_rready                                 (mm_interconnect_0_ssgdma_0_host_csr_rready),     //  output,   width = 1,                                                   .rready
		.pb_cpu_0_reset_reset_bridge_in_reset_reset               (~periph_rst_in_out_reset_reset),                 //   input,   width = 1,               pb_cpu_0_reset_reset_bridge_in_reset.reset
		.pb_cpu_0_m0_translator_reset_reset_bridge_in_reset_reset (~periph_rst_in_out_reset_reset),                 //   input,   width = 1, pb_cpu_0_m0_translator_reset_reset_bridge_in_reset.reset
		.periph_clk_out_clk_clk                                   (periph_clk_out_clk_clk)                          //   input,   width = 1,                                 periph_clk_out_clk.clk
	);

endmodule
