	component peripheral_subsys is
		port (
			button_pio_external_connection_export : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- export
			button_pio_irq_irq                    : out std_logic;                                         -- irq
			dipsw_pio_external_connection_export  : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- export
			dipsw_pio_irq_irq                     : out std_logic;                                         -- irq
			led_pio_external_connection_in_port   : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- in_port
			led_pio_external_connection_out_port  : out std_logic_vector(2 downto 0);                      -- out_port
			pb_cpu_0_s0_waitrequest               : out std_logic;                                         -- waitrequest
			pb_cpu_0_s0_readdata                  : out std_logic_vector(31 downto 0);                     -- readdata
			pb_cpu_0_s0_readdatavalid             : out std_logic;                                         -- readdatavalid
			pb_cpu_0_s0_burstcount                : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- burstcount
			pb_cpu_0_s0_writedata                 : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- writedata
			pb_cpu_0_s0_address                   : in  std_logic_vector(22 downto 0)  := (others => 'X'); -- address
			pb_cpu_0_s0_write                     : in  std_logic                      := 'X';             -- write
			pb_cpu_0_s0_read                      : in  std_logic                      := 'X';             -- read
			pb_cpu_0_s0_byteenable                : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- byteenable
			pb_cpu_0_s0_debugaccess               : in  std_logic                      := 'X';             -- debugaccess
			clk_clk                               : in  std_logic                      := 'X';             -- clk
			reset_reset_n                         : in  std_logic                      := 'X';             -- reset_n
			ssgdma_host_clk_clk                   : in  std_logic                      := 'X';             -- clk
			ssgdma_host_aresetn_reset_n           : in  std_logic                      := 'X';             -- reset_n
			ssgdma_host_awready                   : in  std_logic                      := 'X';             -- awready
			ssgdma_host_awvalid                   : out std_logic;                                         -- awvalid
			ssgdma_host_awaddr                    : out std_logic_vector(63 downto 0);                     -- awaddr
			ssgdma_host_awlen                     : out std_logic_vector(7 downto 0);                      -- awlen
			ssgdma_host_awburst                   : out std_logic_vector(1 downto 0);                      -- awburst
			ssgdma_host_awsize                    : out std_logic_vector(2 downto 0);                      -- awsize
			ssgdma_host_awprot                    : out std_logic_vector(2 downto 0);                      -- awprot
			ssgdma_host_awid                      : out std_logic_vector(4 downto 0);                      -- awid
			ssgdma_host_awcache                   : out std_logic_vector(3 downto 0);                      -- awcache
			ssgdma_host_wready                    : in  std_logic                      := 'X';             -- wready
			ssgdma_host_wvalid                    : out std_logic;                                         -- wvalid
			ssgdma_host_wdata                     : out std_logic_vector(255 downto 0);                    -- wdata
			ssgdma_host_wstrb                     : out std_logic_vector(31 downto 0);                     -- wstrb
			ssgdma_host_wlast                     : out std_logic;                                         -- wlast
			ssgdma_host_bready                    : out std_logic;                                         -- bready
			ssgdma_host_bvalid                    : in  std_logic                      := 'X';             -- bvalid
			ssgdma_host_bresp                     : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- bresp
			ssgdma_host_bid                       : in  std_logic_vector(4 downto 0)   := (others => 'X'); -- bid
			ssgdma_host_arready                   : in  std_logic                      := 'X';             -- arready
			ssgdma_host_arvalid                   : out std_logic;                                         -- arvalid
			ssgdma_host_araddr                    : out std_logic_vector(63 downto 0);                     -- araddr
			ssgdma_host_arlen                     : out std_logic_vector(7 downto 0);                      -- arlen
			ssgdma_host_arburst                   : out std_logic_vector(1 downto 0);                      -- arburst
			ssgdma_host_arsize                    : out std_logic_vector(2 downto 0);                      -- arsize
			ssgdma_host_arprot                    : out std_logic_vector(2 downto 0);                      -- arprot
			ssgdma_host_arid                      : out std_logic_vector(4 downto 0);                      -- arid
			ssgdma_host_arcache                   : out std_logic_vector(3 downto 0);                      -- arcache
			ssgdma_host_rready                    : out std_logic;                                         -- rready
			ssgdma_host_rvalid                    : in  std_logic                      := 'X';             -- rvalid
			ssgdma_host_rdata                     : in  std_logic_vector(255 downto 0) := (others => 'X'); -- rdata
			ssgdma_host_rlast                     : in  std_logic                      := 'X';             -- rlast
			ssgdma_host_rresp                     : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- rresp
			ssgdma_host_rid                       : in  std_logic_vector(4 downto 0)   := (others => 'X'); -- rid
			ssgdma_interrupt_irq                  : out std_logic;                                         -- irq
			ssgdma_h2d0_mm_clk_clk                : in  std_logic                      := 'X';             -- clk
			ssgdma_h2d0_mm_resetn_reset_n         : in  std_logic                      := 'X';             -- reset_n
			ssgdma_h2d0_awvalid                   : out std_logic;                                         -- awvalid
			ssgdma_h2d0_awready                   : in  std_logic                      := 'X';             -- awready
			ssgdma_h2d0_awaddr                    : out std_logic_vector(63 downto 0);                     -- awaddr
			ssgdma_h2d0_awlen                     : out std_logic_vector(7 downto 0);                      -- awlen
			ssgdma_h2d0_awburst                   : out std_logic_vector(1 downto 0);                      -- awburst
			ssgdma_h2d0_awsize                    : out std_logic_vector(2 downto 0);                      -- awsize
			ssgdma_h2d0_awprot                    : out std_logic_vector(2 downto 0);                      -- awprot
			ssgdma_h2d0_awid                      : out std_logic_vector(7 downto 0);                      -- awid
			ssgdma_h2d0_awcache                   : out std_logic_vector(3 downto 0);                      -- awcache
			ssgdma_h2d0_wvalid                    : out std_logic;                                         -- wvalid
			ssgdma_h2d0_wlast                     : out std_logic;                                         -- wlast
			ssgdma_h2d0_wready                    : in  std_logic                      := 'X';             -- wready
			ssgdma_h2d0_wdata                     : out std_logic_vector(63 downto 0);                     -- wdata
			ssgdma_h2d0_wstrb                     : out std_logic_vector(7 downto 0);                      -- wstrb
			ssgdma_h2d0_bvalid                    : in  std_logic                      := 'X';             -- bvalid
			ssgdma_h2d0_bready                    : out std_logic;                                         -- bready
			ssgdma_h2d0_bresp                     : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- bresp
			ssgdma_h2d0_bid                       : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- bid
			ssgdma_h2d0_arvalid                   : out std_logic;                                         -- arvalid
			ssgdma_h2d0_arready                   : in  std_logic                      := 'X';             -- arready
			ssgdma_h2d0_araddr                    : out std_logic_vector(63 downto 0);                     -- araddr
			ssgdma_h2d0_arlen                     : out std_logic_vector(7 downto 0);                      -- arlen
			ssgdma_h2d0_arburst                   : out std_logic_vector(1 downto 0);                      -- arburst
			ssgdma_h2d0_arsize                    : out std_logic_vector(2 downto 0);                      -- arsize
			ssgdma_h2d0_arprot                    : out std_logic_vector(2 downto 0);                      -- arprot
			ssgdma_h2d0_arid                      : out std_logic_vector(7 downto 0);                      -- arid
			ssgdma_h2d0_arcache                   : out std_logic_vector(3 downto 0);                      -- arcache
			ssgdma_h2d0_rvalid                    : in  std_logic                      := 'X';             -- rvalid
			ssgdma_h2d0_rlast                     : in  std_logic                      := 'X';             -- rlast
			ssgdma_h2d0_rready                    : out std_logic;                                         -- rready
			ssgdma_h2d0_rdata                     : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- rdata
			ssgdma_h2d0_rresp                     : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- rresp
			ssgdma_h2d0_rid                       : in  std_logic_vector(7 downto 0)   := (others => 'X')  -- rid
		);
	end component peripheral_subsys;

